<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数学建模学习</title>
      <link href="/archives/ae67057d.html"/>
      <url>/archives/ae67057d.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学建模学习"><a href="#数学建模学习" class="headerlink" title="数学建模学习"></a>数学建模学习</h1><ul><li><a href="(https://www.bilibili.com/video/BV1kC4y1a7Ee?p=1&amp;vd_source=605fdf76b89347cc08747ed724ad5651)">学习视频资源</a></li><li>观看指南：<br>p1——p2基础<br>p3——p36算法<br>p37——56建模（MATLAB）<br>p57——65写作<br>p66——69，p81——83，p108——111获奖指南总结性的东西<br>p70——80国赛<br>p84——107美赛<br>p112——120实战</li></ul><h1 id="数学建模基础入门与组队策略"><a href="#数学建模基础入门与组队策略" class="headerlink" title="数学建模基础入门与组队策略"></a>数学建模基础入门与组队策略</h1><h2 id="数学建模的分类"><a href="#数学建模的分类" class="headerlink" title="数学建模的分类"></a>数学建模的分类</h2><ol><li>按所用数学知识分类：</li></ol><ul><li>初等模型、几何模型、微积分模型、微分方程模型、图论模型、概率统计模型、规划论模型等。</li></ul><ol start="2"><li>按所解决的问题领域分类：</li></ol><ul><li>物理模型：自然科学领域内的问题。</li><li>非物理模型：经济模型、交通模型、人口模型、生态模型、环境模型、医学模型、社会学模型。</li></ul><ol start="3"><li>按所建模目的分类：</li></ol><ul><li>描述模型、分析模型、预报模型、优化模型、决策模型、控制模型等。</li></ul><ol start="4"><li>按模型的表现特性分类：</li></ol><ul><li>确定模型、随机模型；静态模型、动态模型、离散模型、连续模型</li></ul><h2 id="数学模型有哪些模块？"><a href="#数学模型有哪些模块？" class="headerlink" title="数学模型有哪些模块？"></a>数学模型有哪些模块？</h2><h3 id="数学建模的一般步骤"><a href="#数学建模的一般步骤" class="headerlink" title="数学建模的一般步骤"></a>数学建模的一般步骤</h3><h4 id="1、模型假设"><a href="#1、模型假设" class="headerlink" title="1、模型假设"></a>1、模型假设</h4><blockquote><p>针对问题特点和建模目的作出合理的、简化的假设</p></blockquote><p>在合理和简化之中作出折中</p><h4 id="2、建立模型"><a href="#2、建立模型" class="headerlink" title="2、建立模型"></a>2、建立模型</h4><blockquote><p>用数学的语言、符号描述问题</p><p>发挥想象力</p></blockquote><p>尽量采用简单的数学工具</p><p><img src="https://s2.loli.net/2022/08/07/GOgQestmKZHoX4i.png" alt="数学建模全过程"></p><ul><li><strong>表述（问题重述）</strong>：根据建模目的和信息将实际问题“翻译”成数学问题</li></ul><p>【注意】问题重述不是简单的将原问题复制粘贴，要将现实世界的问题通过表述归纳的方法利用数学公式或算法建立一定的数学模型</p><ul><li><strong>求解</strong>：选择适当的数学方法利用软件对数学模型进行求解</li><li><strong>解释</strong>：将数学语言表述的解答“翻译”回实际对象（结果的好坏、得到什么信息、浅层？深层？）</li><li><strong>验证</strong>：用现实对象的信息检验得到的解答（以此来检验该模型是否准确）</li></ul><h2 id="完整的数学建模论文的要素"><a href="#完整的数学建模论文的要素" class="headerlink" title="完整的数学建模论文的要素"></a>完整的数学建模论文的要素</h2><p><img src="https://s2.loli.net/2022/08/07/CQx5GbcifyHDmrU.png" alt="完整的数学建模论文的要素"></p><ul><li><strong>题目</strong>：点睛之笔</li><li><strong>摘要、关键词（关键）</strong>：整个评审的关键，要传递出基本信息</li><li><strong>问题重述</strong>：用自己的语言，将题目中的问题转述称数学语言</li><li><strong>问题假设</strong>：要对模型作出合理的假设或对全文作出一个合理假设</li><li><strong>问题分析</strong>：针对这个问题，你打算怎么做、怎么解？用什么模型来求解？你的思路是什么？</li><li><strong>符号说明</strong>：常用符号为了避免冗余可以将其意写在符号说明中</li><li><strong>模型建立</strong>：通过数学符号和公式建立一个实现某一功能的数学模型</li><li><strong>模型求解</strong>：利用计算软件等对模型求解的过程</li><li><strong>模型优缺点评价</strong>：评价模型优劣，有哪些优缺点，是否经得起考验</li><li><strong>参考文献</strong>：<a href="(https://baike.baidu.com/item/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E6%A0%87%E5%87%86%E6%A0%BC%E5%BC%8F/15571284?fr=aladdin)">参照标准文献写作格式</a></li></ul><h2 id="分模块学习"><a href="#分模块学习" class="headerlink" title="分模块学习"></a>分模块学习</h2><h3 id="题目备战："><a href="#题目备战：" class="headerlink" title="题目备战："></a>题目备战：</h3><ul><li>掌握固定模式即可</li><li>基于____模型的____研究与分析</li><li>也可以使用比较诙谐可爱的题目（正经）</li></ul><h3 id="摘要备战："><a href="#摘要备战：" class="headerlink" title="摘要备战："></a>摘要备战：</h3><ul><li>总结归纳能力，通过看高水平论文或优秀论文掌握</li><li>切忌大段描述，一般摘要不超过整个页面的四分之三</li></ul><h3 id="问题重述："><a href="#问题重述：" class="headerlink" title="问题重述："></a>问题重述：</h3><ul><li>切忌直接抄袭问题，对描述简短的拆建，描述复杂的精炼</li></ul><h3 id="问题假设："><a href="#问题假设：" class="headerlink" title="问题假设："></a>问题假设：</h3><ul><li>明确假设点是关键，只要对我们的结果有影响，但又是小概率事件；或者对结果有影响，难以计算获取这类的</li><li>考察对问题的理解以及对模型的适用性能力的评价</li></ul><h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><ul><li>动脑能力是关键，现将问题进行定性，然后说明如何求解这类问题</li><li>考察对问题的求解能力，不要求写具体的模型和算法，而是要提供一个思路</li><li>写思路：分析问题、拆解问题、匹配模型</li><li>最好做一个流程图，能更加直观地显示</li></ul><h3 id="符号说明："><a href="#符号说明：" class="headerlink" title="符号说明："></a>符号说明：</h3><ul><li>文中出现的符号均需说清楚，用希腊字母</li></ul><h3 id="模型建立："><a href="#模型建立：" class="headerlink" title="模型建立："></a>模型建立：</h3><ul><li>将常见模型进行归纳整理，形成算法库</li></ul><h3 id="模型求解："><a href="#模型求解：" class="headerlink" title="模型求解："></a>模型求解：</h3><ul><li>对编程语言熟练掌握</li></ul><h3 id="模型优缺点评价："><a href="#模型优缺点评价：" class="headerlink" title="模型优缺点评价："></a>模型优缺点评价：</h3><ul><li>对模型的不足提前掌握，并应用于不足阐述</li></ul><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li>按标准格式书写</li></ul><h2 id="数学建模备战应该准备什么？"><a href="#数学建模备战应该准备什么？" class="headerlink" title="数学建模备战应该准备什么？"></a>数学建模备战应该准备什么？</h2><ul><li><p>（1）必须找好两个靠谱的队友，定期组织研讨和交流</p></li><li><p>（2）必须每三天看一篇优秀的数模论文，重点看摘要和问题分析及建模过程</p></li><li><p>（3）必须明确三人的分工，确保写作、建模、编程 团队都具备</p></li><li><p>（4）必须清晰地明白建模各部分到底应该写什么</p></li><li><p>（5）必须对所有常见算法进行系统的学习，明确算法用途和实现过程</p></li><li><p>备战时间建议：</p></li><li><p>每天拿出两个小时学习数学建模：按照算法、编程、写作、排版的顺序进行</p></li><li><p>算法：课程+《数学建模书籍（司守奎）》，编程（Matlab自学一本通2018版本即可），写作（整理优秀论文对语言进行学习），排版（学习LATEX软件）</p></li><li><p>每人每三天阅读完一篇获奖优秀论文，并和队友沟通分享经验</p></li><li><p>每半个月适当开一次总结会，发表自己的学习收获和下一步的工作中心</p></li><li><p>每月进行一次全真模拟，找老师进行论文评估</p></li><li><p>比赛开始后，三人应首先集中一切力量准备一套切实可行的思路，不可盲目直接建模，一旦敲定思路，论文写作成员要尽快寻找该模型所涉及到的原理知识，编程人员即使调试对应代码，建模人员要及时找出赛题与该模型的结合点</p></li><li><p>建模与论文撰写应该是同步的，队长要做好信息汇总与结果结论反馈工作，确保不会出现信息延迟等失误</p></li></ul><h1 id="线性规划模型基本原理与案例分享"><a href="#线性规划模型基本原理与案例分享" class="headerlink" title="线性规划模型基本原理与案例分享"></a>线性规划模型基本原理与案例分享</h1><h2 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习</title>
      <link href="/archives/8df0ec14.html"/>
      <url>/archives/8df0ec14.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习指南"><a href="#学习指南" class="headerlink" title="学习指南"></a>学习指南</h1><p><a href="https://www.bilibili.com/video/BV12J41137hu?share_source=copy_web&amp;vd_source=125214e0a845d5ec0516cfb855085d1c">学习视频</a></p><h1 id="chapter-01"><a href="#chapter-01" class="headerlink" title="chapter 01"></a>chapter 01</h1><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><ol><li>建立一个新文件夹，用于存放代码 (Creat a new directory for your code)</li><li>新建一个java文件 (Creat a new java file)<ul><li><p>文件名后缀为.java (The file name extension is .java)</p></li><li><p>Hello.java</p></li><li><p>【注意】系统可能没有显示文件后缀名，需要手动打开 </p><p>[Attention] The system may not display the file name extension. You need to open the file manually</p></li></ul></li><li>编写代码 (Edit code)</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>{</span><br><span class="line">        System.out.print(<span class="string">"Hello,World!"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li><p>编译javac java文件，会生成一个class文件</p><p>compiling the javac java file generates a “class file”</p></li><li><p>运行class文件，java class文件</p><p>Run the class file, java “class file”</p></li></ol><p><img src="https://s2.loli.net/2022/08/05/orV8EYXvzCS2ApI.png" alt="java01.png"></p><h2 id="可能遇到的情况-What-you-might-encounter"><a href="#可能遇到的情况-What-you-might-encounter" class="headerlink" title="可能遇到的情况 (What you might encounter)"></a>可能遇到的情况 (What you might encounter)</h2><ol><li><p>每个单词的大小写不能出现问题，<strong>java是大小写敏感的</strong></p><p>The case of each word should not be incorrect. <strong>java is case sensitive</strong></p></li><li><p>尽量使用英文 (Try to use English)</p></li><li><p><strong>文件名</strong> 和 <strong>类名</strong> 必须保证一致 (<strong>File name</strong> and <strong>Class name</strong> must be the same)</p></li><li><p>符号不能使用中文 (The symbol cannot be in Chinese)</p></li></ol><h2 id="注释-（comment）"><a href="#注释-（comment）" class="headerlink" title="注释 （comment）"></a>注释 （comment）</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 单行注释 Single-line comments</span></span><br><span class="line">        <span class="comment">// 输出一个Hello,World! Output a "Hello,World!"</span></span><br><span class="line">        System.out.println(<span class="string">"HelloWorld!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 多行注释 Multiline comment /* 注释 */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//JavaDoc：文档注释</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Description</span> HelloWorld!</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Author</span> 聂千龙</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *                    _ooOoo_</span></span><br><span class="line"><span class="comment"> *                   o8888888o</span></span><br><span class="line"><span class="comment"> *                   88" . "88</span></span><br><span class="line"><span class="comment"> *                   (| -_- |)</span></span><br><span class="line"><span class="comment"> *                    O\ = /O</span></span><br><span class="line"><span class="comment"> *                ____/`---'\____</span></span><br><span class="line"><span class="comment"> *              .   ' \\| |// `.</span></span><br><span class="line"><span class="comment"> *               / \\||| : |||// \</span></span><br><span class="line"><span class="comment"> *             / _||||| -:- |||||- \</span></span><br><span class="line"><span class="comment"> *               | | \\\ - /// | |</span></span><br><span class="line"><span class="comment"> *             | \_| ''\---/'' | |</span></span><br><span class="line"><span class="comment"> *              \ .-\__ `-` ___/-. /</span></span><br><span class="line"><span class="comment"> *           ___`. .' /--.--\ `. . __</span></span><br><span class="line"><span class="comment"> *        ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".</span></span><br><span class="line"><span class="comment"> *       | | : `- \`.;`\ _ /`;.`/ - ` : | |</span></span><br><span class="line"><span class="comment"> *         \ \ `-. \_ __\ /__ _/ .-` / /</span></span><br><span class="line"><span class="comment"> * ======`-.____`-.___\_____/___.-`____.-'======</span></span><br><span class="line"><span class="comment"> *                    `=---='</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * .............................................</span></span><br><span class="line"><span class="comment"> *          佛祖保佑             永无BUG</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *  佛曰:</span></span><br><span class="line"><span class="comment"> *          写字楼里写字间，写字间里程序员；</span></span><br><span class="line"><span class="comment"> *          程序人员写程序，又拿程序换酒钱。</span></span><br><span class="line"><span class="comment"> *          酒醒只在网上坐，酒醉还来网下眠；</span></span><br><span class="line"><span class="comment"> *          酒醉酒醒日复日，网上网下年复年。</span></span><br><span class="line"><span class="comment"> *          但愿老死电脑间，不愿鞠躬老板前；</span></span><br><span class="line"><span class="comment"> *          奔驰宝马贵者趣，公交自行程序员。</span></span><br><span class="line"><span class="comment"> *          别人笑我忒疯癫，我笑自己命太贱；</span></span><br><span class="line"><span class="comment"> *          不见满街漂亮妹，哪个归得程序员？</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * _ooOoo_</span></span><br><span class="line"><span class="comment"> * o8888888o</span></span><br><span class="line"><span class="comment"> * 88" . "88</span></span><br><span class="line"><span class="comment"> * (| -_- |)</span></span><br><span class="line"><span class="comment"> *  O\ = /O</span></span><br><span class="line"><span class="comment"> * ___/`---'\____</span></span><br><span class="line"><span class="comment"> * .   ' \\| |// `.</span></span><br><span class="line"><span class="comment"> * / \\||| : |||// \</span></span><br><span class="line"><span class="comment"> * / _||||| -:- |||||- \</span></span><br><span class="line"><span class="comment"> * | | \\\ - /// | |</span></span><br><span class="line"><span class="comment"> * | \_| ''\---/'' | |</span></span><br><span class="line"><span class="comment"> * \ .-\__ `-` ___/-. /</span></span><br><span class="line"><span class="comment"> * ___`. .' /--.--\ `. . __</span></span><br><span class="line"><span class="comment"> * ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".</span></span><br><span class="line"><span class="comment"> * | | : `- \`.;`\ _ /`;.`/ - ` : | |</span></span><br><span class="line"><span class="comment"> * \ \ `-. \_ __\ /__ _/ .-` / /</span></span><br><span class="line"><span class="comment"> * ======`-.____`-.___\_____/___.-`____.-'======</span></span><br><span class="line"><span class="comment"> * `=---='</span></span><br><span class="line"><span class="comment"> * .............................................</span></span><br><span class="line"><span class="comment"> *           佛曰：bug 泛滥，我已瘫痪！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="标识符注意"><a href="#标识符注意" class="headerlink" title="标识符注意"></a>标识符注意</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        所有标识符都应以字母（A-Z或者a-z），美元符（&amp;）或者下划线（_）开始</span></span><br><span class="line"><span class="comment">        首字母之后可以是字母（A-Z或者a-z），美元符（&amp;）或者下划线（_）或数字的任何字符组合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">$Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">_Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">_1</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line"><span class="comment">//        String _# = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String _% = "Nieqianlong";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        String 1Hello = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String #Hello = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String *Hello = "Nieqianlong";</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不能使用关键字作为变量名或方法名</span></span><br><span class="line">        <span class="comment">// 标识符是大小写敏感的!!!</span></span><br><span class="line"><span class="comment">//        String class = "Nieqianlong";</span></span><br><span class="line">        <span class="comment">// 合法标识符举例：age、&amp;salary、_value、__1_value</span></span><br><span class="line">        <span class="comment">// 非法标识符举例：123abc、-salary、#abc</span></span><br><span class="line">        <span class="comment">//可以使用中文命名，但是一般不建议这样去用，也不建议用拼音，很Low</span></span><br><span class="line">        String 王者荣耀 = <span class="string">"百星王者"</span>;</span><br><span class="line">        System.out.println(王者荣耀);</span><br><span class="line">        <span class="type">String</span> <span class="variable">mingzi</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-02"><a href="#Chapter-02" class="headerlink" title="Chapter 02"></a>Chapter 02</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="Java是强类型语言"><a href="#Java是强类型语言" class="headerlink" title="Java是强类型语言"></a>Java是强类型语言</h3><ul><li>要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用</li></ul><h3 id="Java的数据类型分为两大类"><a href="#Java的数据类型分为两大类" class="headerlink" title="Java的数据类型分为两大类"></a>Java的数据类型分为两大类</h3><ul><li>基本类型(primitive type)</li><li>引用类型(reference type)</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 整数</span></span><br><span class="line"><span class="comment">//        String a = 10;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">"Hello"</span>;</span><br><span class="line"><span class="comment">//        int num = "Hello";</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(num);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 八大基本数据类型</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">// 最常用</span></span><br><span class="line"><span class="comment">//        byte num2 = 200;</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">num3</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> <span class="number">40L</span>; <span class="comment">//Long类型要在数字后边加L</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浮点数</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">num5</span> <span class="operator">=</span> <span class="number">50.1F</span>; <span class="comment">// float类型要在数字后面加上一个F</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num6</span> <span class="operator">=</span> <span class="number">3.141592653589793238462643</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">'A'</span>;</span><br><span class="line"><span class="comment">//        char name = '聂千龙';</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">name1</span> <span class="operator">=</span> <span class="string">'聂'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串,String不是关键字，而是类</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">namea</span> <span class="operator">=</span> <span class="string">"聂千龙"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 布尔值：是非</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 整数拓展     进制      二进制0b     十进制    八进制0     十六进制0x</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">010</span>;   <span class="comment">//八进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">0x10</span>;  <span class="comment">//十六进制  A~F</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(i3);</span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">// 浮点数拓展   银行业务怎么表示？</span></span><br><span class="line">        <span class="comment">// BigDecimal</span></span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">//float 有限  离散  舍入误差    大约  接近但不等于</span></span><br><span class="line">        <span class="comment">//double</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.1f</span>; <span class="comment">//0.1</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.0</span>/<span class="number">10</span>;  <span class="comment">//0.1</span></span><br><span class="line"></span><br><span class="line">        System.out.println(f == d);</span><br><span class="line">        System.out.println(f);</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">21313131311313313f</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">d2</span> <span class="operator">=</span> d1 + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(d1 == d2);</span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">// 字符拓展</span></span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">'a'</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">'中'</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c1); <span class="comment">//强制类型转换</span></span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c2); <span class="comment">//强制类型转换</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">// 编码 Unicode 2字节 65536 Excel 2^16 = 65536</span></span><br><span class="line">        <span class="comment">// U0000 UFFFF</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">'\u0061'</span>;</span><br><span class="line">        System.out.println(c3); <span class="comment">//a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转义字符</span></span><br><span class="line">        <span class="comment">// \t   制表符</span></span><br><span class="line">        <span class="comment">// \n   换行</span></span><br><span class="line">        System.out.println(<span class="string">"Hello\tWorld!"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello\nWorld!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对象 从内存分析</span></span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"Hello,world!"</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"Hello,world!"</span>);</span><br><span class="line">        System.out.println(sa == sb);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="string">"Hello,world!"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sd</span> <span class="operator">=</span> <span class="string">"Hello,world!"</span>;</span><br><span class="line">        System.out.println(sc == sd);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 布尔值拓展</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="literal">true</span>){}     <span class="comment">// 新手</span></span><br><span class="line">        <span class="keyword">if</span> (flag){}     <span class="comment">// 老手</span></span><br><span class="line">        <span class="comment">// Less is More!    代码要精简已读</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li>由于Java是强类型语言，所以要进行有些运算的时候，需要用到类型转换。</li></ul><p>低——————————————————&gt;高</p><p>byte , short , char -&gt; int -&gt; long -&gt; float -&gt; double</p><ul><li><p>运算中，不同类型的数据先转换为同一类型，然后再运算。</p></li><li><p>强制类型转换</p></li><li><p>自动类型转换</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_04</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 强制转换     (类型)变量名     高-低</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">128</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)i;   <span class="comment">//内存溢出</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自动类型转换   低-高</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span>  <span class="operator">=</span> i;</span><br><span class="line"></span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意点：</span></span><br><span class="line"><span class="comment">        1、不能对布尔值进行转换</span></span><br><span class="line"><span class="comment">        2、不能把对象类型转换为不相干的类型</span></span><br><span class="line"><span class="comment">        3、再把高容量转换到低容量的时候，强制转换</span></span><br><span class="line"><span class="comment">        4、转换的时候可能存在内存溢出，或者精度问题！</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        System.out.println((<span class="type">int</span>)<span class="number">23.7</span>);      <span class="comment">// 23</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)-<span class="number">45.89f</span>);   <span class="comment">// -45</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">d</span> <span class="operator">=</span> <span class="string">'a'</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">e</span> <span class="operator">=</span> d + <span class="number">1</span>;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">        System.out.println((<span class="type">char</span>)e);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 操作比较大的数的时候，注意溢出问题</span></span><br><span class="line">        <span class="comment">// JDK7新特性，数字之间可以用下划线分割</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1_000_000_000</span>;</span><br><span class="line">        System.out.println(money);</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> money * year;   <span class="comment">//-1474836480，计算的时候溢出了</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> money * year; <span class="comment">//默认是int，转换前已经溢出了</span></span><br><span class="line">        System.out.println(total);</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">total3</span> <span class="operator">=</span> money * ((<span class="type">long</span>)year);</span><br><span class="line">        System.out.println(total3);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>变量就是可以变化的量</li><li>Java是一种强类型语言，每个变量都必须声明其类型</li><li>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和<strong>作用域</strong></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type varName [=value] [{,varName[=value]}];</span><br><span class="line"><span class="comment">// 数据类型 变量名 = 值；可以用逗号隔开来声明多个同类型的量</span></span><br></pre></td></tr></tbody></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>每个变量都有类型，类型可以是基本类型，也可以说是引用类型</li><li>变量名必须是合法的标识符</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</li></ul><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ul><li>类变量</li><li>实例变量</li><li>局部变量</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_07</span> {</span><br><span class="line">    <span class="comment">// 类变量 static</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">2500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性：变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例变量：从属于对象；如果不进行初始化，会变成这个类型的默认值 0 0.0</span></span><br><span class="line">    <span class="comment">// 布尔值：默认是false</span></span><br><span class="line">    <span class="comment">// 除了基本类型，其余的都是null；</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 局部变量；必须声明和初始化值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//变量类型  变量名字 = new Demo_07</span></span><br><span class="line">        <span class="type">Demo_07</span> <span class="variable">demo_07</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo_07</span>();</span><br><span class="line">        System.out.println(demo_07.age);</span><br><span class="line">        System.out.println(demo_07.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 类变量 static</span></span><br><span class="line">        System.out.println(salary);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>{</span><br><span class="line"><span class="comment">//        System.out.println(i);</span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><ul><li>常量(Constant)：初始化(initialize)后不能改变值！不会变动的值。</li><li>所谓的常量可以理解成一种特殊的变量，它的值被设定后，在程序运行过程中不允许被改变。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> 常量名 = 值;</span><br><span class="line"><span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br></pre></td></tr></tbody></table></figure><ul><li>常量名一般用大写字符。</li></ul><h2 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h2><ul><li>所有变量、方法、类名：<strong>见名知义</strong></li><li>类成员变量：首字母小写和驼峰原则：monthSalary</li><li>局部变量：首字母小写和驼峰原则</li><li>常量：大写字母和下划线：MAX_VALUE</li><li>类名：首字母大写和驼峰原则：Man,GoodMan</li><li>方法名：首字母小写和驼峰原则：run(),runRun()</li><li></li></ul><h1 id="Chapter-03"><a href="#Chapter-03" class="headerlink" title="Chapter 03"></a>Chapter 03</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li>算数运算符：+, -, *, /, %, ++, –</li><li>赋值运算符：=</li><li>关系运算符：&gt;, &lt;, &gt;=, &lt;=, ==, !=, instanceof</li><li>逻辑运算符：&amp;&amp;, ||, !</li><li>位运算符：&amp;, |, ^, ~, &gt;&gt;, &lt;&lt;, &gt;&gt;&gt;</li><li>条件运算符：? :</li><li>扩展赋值运算符：+=, -=, *=, /=</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二元运算符</span></span><br><span class="line">      <span class="comment">//Ctrl + D：复制当前行到下一行</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">      System.out.println(a+b);</span><br><span class="line">      System.out.println(a-b);</span><br><span class="line">      System.out.println(a*b);</span><br><span class="line">      System.out.println(a/(<span class="type">double</span>)b);</span><br><span class="line"></span><br><span class="line">      <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">123123123123123L</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">      <span class="type">short</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">byte</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">      System.out.println(a+b+c+d);    <span class="comment">//Long</span></span><br><span class="line">      System.out.println(b+c+d);      <span class="comment">//Int</span></span><br><span class="line">      System.out.println(c+d);        <span class="comment">//Short</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 关系运算符返回的结果：  正确，错误   布尔值</span></span><br><span class="line"></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">21</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 取余，模运算</span></span><br><span class="line">      System.out.println(c%a); <span class="comment">// c / a    21 / 10 = 2 ... 1</span></span><br><span class="line"></span><br><span class="line">      System.out.println(a&gt;b);</span><br><span class="line">      System.out.println(a&lt;b);</span><br><span class="line">      System.out.println(a==b);</span><br><span class="line">      System.out.println(a!=b);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ++   --  自增，自减   一元运算符</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a++; <span class="comment">// 执行完这行代码后，先给b赋值，再自增</span></span><br><span class="line">      <span class="comment">// a++     a = a + 1</span></span><br><span class="line">      System.out.println(a);</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++a; <span class="comment">// 执行完这行代码前，再自增，先给c赋值</span></span><br><span class="line">      <span class="comment">// ++a     a = a + 1</span></span><br><span class="line"></span><br><span class="line">      System.out.println(a);</span><br><span class="line">      System.out.println(b);</span><br><span class="line">      System.out.println(c);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 幂运算 2^3  2*2*2 = 8   很多运算，我们会使用一些工具类来操作</span></span><br><span class="line">      <span class="type">double</span> <span class="variable">pow</span> <span class="operator">=</span> Math.pow(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">      System.out.println(pow);</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逻辑运算符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//  与（and）   或（or）   非（取反）</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">a</span>  <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"a &amp;&amp; b:"</span>+(a &amp;&amp; b));</span><br><span class="line">        <span class="comment">// 逻辑与运算：两个变量都为真，结果才为true</span></span><br><span class="line">        System.out.println(<span class="string">"a || b:"</span>+(a || b));</span><br><span class="line">        <span class="comment">// 逻辑或运算：两个变量有一个为真，结果才为true</span></span><br><span class="line">        System.out.println(<span class="string">"!(a &amp;&amp; b):"</span>+!(a &amp;&amp; b));</span><br><span class="line">        <span class="comment">// 如果是真，则为假；如果是假，则为真</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 短路运算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">d</span> <span class="operator">=</span> (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>); <span class="comment">//c&lt;4为false，短路，不再运行后面的代码，所以c还是5</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 位运算符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_06</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        A = 0011 1100</span></span><br><span class="line"><span class="comment">        B = 0000 1101</span></span><br><span class="line"><span class="comment">        -------------------------</span></span><br><span class="line"><span class="comment">        A&amp;B = 0000 1100</span></span><br><span class="line"><span class="comment">        A|B = 0011 1101</span></span><br><span class="line"><span class="comment">        A^B = 0011 0001</span></span><br><span class="line"><span class="comment">        ~B  = 1111 0010</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        2*8 = 16    2*2*2*2</span></span><br><span class="line"><span class="comment">        &lt;&lt;      *2</span></span><br><span class="line"><span class="comment">        &gt;&gt;      /2</span></span><br><span class="line"><span class="comment">        0000 0000   0</span></span><br><span class="line"><span class="comment">        0000 0001   1</span></span><br><span class="line"><span class="comment">        0000 0010   2</span></span><br><span class="line"><span class="comment">        0000 0011   3</span></span><br><span class="line"><span class="comment">        0000 0100   4</span></span><br><span class="line"><span class="comment">        0000 1000   8</span></span><br><span class="line"><span class="comment">        0001 0000   16</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_08</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// x ? y : z</span></span><br><span class="line">        <span class="comment">// 如果x == ture，结果为y，否则为z</span></span><br><span class="line"><span class="comment">//        int score = 80;</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> score &lt; <span class="number">60</span> ? <span class="string">"不及格"</span> : <span class="string">"及格"</span>;</span><br><span class="line">        System.out.println(type);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h2><ul><li>为了更好地组织类，Java提供了包机制，用于区别类名的命名空间。</li><li>包语句的语法格式为：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pkg[. pkg2[. pkg3...]];</span><br></pre></td></tr></tbody></table></figure><ul><li>包就是文件夹</li><li><font color="red"><strong>一般利用公司域名倒置作为包名</strong></font>cn.nieqianlong.www</li><li>为了能够使用某一个包的成员，我们需要在Java程序中明确导入该包。使用”import”语句可以完成此功能</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> packae1[. package2...].(classname|*);</span><br><span class="line"><span class="keyword">import</span> cn.nieqianlong.base.Demo_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入这个包下所有的类！</span></span><br><span class="line"><span class="keyword">import</span> cn.nieqianlong.base.*;</span><br></pre></td></tr></tbody></table></figure><h2 id="Java-Doc"><a href="#Java-Doc" class="headerlink" title="Java Doc"></a>Java Doc</h2><ul><li>javadoc命令是用来生成自己API文档的</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.base;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Nieqianlong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Doc</span> {</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Nieqianlong</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>参数信息：</li><li>@author 作者名</li><li>@version 版本号</li><li>@since 指明需要最早使用jdk版本</li><li>@param 参数名</li><li>@return 返回值情况</li><li>@throws 异常抛出情况</li></ul><p><img src="/../../../%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5/%E5%9B%BE%E5%BA%8A/java02.png" alt="cmd生成JavaDoc"></p><p><a href="https://blog.csdn.net/m0_47176679/article/details/125381816">生成JavaDoc的两种方法</a></p><h1 id="Chapter04"><a href="#Chapter04" class="headerlink" title="Chapter04"></a>Chapter04</h1><h2 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h2><ul><li><strong>java.util.Scanner，<font color="red">可以通过Scanner类来获取用户的输入</font></strong></li><li>基本语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br></pre></td></tr></tbody></table></figure><ul><li><p>通过Scanner类的next()与nextLine()方法获取输入的字符串，在读取前我们一般需要使用hasNext()与hasNextLine()判断是否还有输入的数据。</p></li><li><p>next():</p><ul><li>1、一定要读取到有效字符后才可以结束输入。</li><li>2、对输入有效字符之前遇到的空白，next()方法会自动将其去掉。</li><li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li>4、**<font color="red">next()不能得到带有空格的字符串。</font>**</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"使用next方法接收："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户有没有输入字符串</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()){</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 凡是IO流的类如果不关闭会一直占用资源，要养成好习惯用完就关掉</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>nextLine():</p><ul><li>1、以Enter为结束符，也就是说nextLine()方法返回的是输入回车之前的所有字符。</li><li>2、可以获得空白。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"使用nextLine方式接收："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextLine()){</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入数据："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 我们可以输入多个数字，并求其总和与平均数，每输入一个数字用回车确认，通过输入非数字来结束输入并输出执行结果：</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 和</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 计算输入了多少数字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过循环判断是否还有输入，并在里面对每一次进行求和统计</span></span><br><span class="line">        System.out.println(<span class="string">"请输入第1个数字："</span>);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNextDouble()){</span><br><span class="line">            <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">            m = m + <span class="number">1</span>;  <span class="comment">//m++</span></span><br><span class="line">            sum = sum + x;</span><br><span class="line">            System.out.println(<span class="string">"你已输入了"</span> + m + <span class="string">"个数据，当前总和为："</span> + sum);</span><br><span class="line">            System.out.println(<span class="string">"请输入第"</span>+(m+<span class="number">1</span>)+<span class="string">"个数字："</span>);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(m + <span class="string">"个数的和为："</span> + sum);</span><br><span class="line">        System.out.println(m + <span class="string">"个数的平均数是"</span> + (sum /m));</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><ul><li>Java的最基本结构就是顺序结构，除非特别指明，否则就按顺序一句一句执行。</li><li>顺序结构是最简单的算法结构。</li><li>语句与语句之间，框与框之间是按从上到下的顺序进行的，它是由若干个依次执行的处理步骤组成的，**<font color="red">它是任何一个算法都离不开的一种基本算法结构。</font>**</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sequence</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        System.out.println(<span class="string">"Hello1"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello2"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello3"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello4"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello5"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ul><li>if单选择结构</li><li>if双选择结构</li><li>if多选择结构</li><li>嵌套的if结构</li><li>switch多选择结构</li></ul><h3 id="if单选择结构"><a href="#if单选择结构" class="headerlink" title="if单选择结构"></a>if单选择结构</h3><ul><li><p>我们很多时候需要去判断一个东西是否可行，然后我们才去执行，这样一个过程在程序中用if语句来表示</p></li><li><p>语法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 如果布尔表达式为true将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入内容："</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="comment">// equals:判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">"Hello"</span>)){</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"End"</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="if双选择结构"><a href="#if双选择结构" class="headerlink" title="if双选择结构"></a>if双选择结构</h3><ul><li>语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 如果布尔表达式为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">    <span class="comment">// 如果布尔表达式为false将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 考试分数大于60分就是及格，小于60分就是不及格</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入成绩："</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">60</span>){</span><br><span class="line">            System.out.println(<span class="string">"及格"</span>);</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"不及格"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="if多选择结构"><a href="#if多选择结构" class="headerlink" title="if多选择结构"></a>if多选择结构</h3><ul><li>语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 1为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 2为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">3</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 3为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">    <span class="comment">// 如果以上布尔表达式都不为true将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 考试分数大于60分就是及格，小于60分就是不及格</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        if 语句至多有 1 个 else 语句，else语句在所有的else if 语句之后。</span></span><br><span class="line"><span class="comment">        if 语句可以有若干个 else if 语句，它们必须在 else 语句之前。</span></span><br><span class="line"><span class="comment">        一旦其中的一个 else if 语句检测为 true，其他的 else if 以及 else 语句都将跳过执行。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">"请输入成绩："</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score == <span class="number">100</span>){</span><br><span class="line">            System.out.println(<span class="string">"恭喜满分"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">90</span> &amp;&amp; score&lt;<span class="number">100</span>) {</span><br><span class="line">            System.out.println(<span class="string">"A级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>) {</span><br><span class="line">            System.out.println(<span class="string">"B级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">70</span> &amp;&amp; score&lt;<span class="number">80</span>) {</span><br><span class="line">            System.out.println(<span class="string">"C级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">70</span>) {</span><br><span class="line">            System.out.println(<span class="string">"D级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&lt;<span class="number">60</span> &amp;&amp; score&gt;=<span class="number">0</span>) {</span><br><span class="line">            System.out.println(<span class="string">"不及格"</span>);</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"成绩不合法"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="嵌套的if结构"><a href="#嵌套的if结构" class="headerlink" title="嵌套的if结构"></a>嵌套的if结构</h3><ul><li><p>使用嵌套的 if … else 语句是合法的。也就是说你可以在另一个 if 或者 else if 语句中使用 if 或者 else if 语句。你可以像 if 语句一样嵌套 else if … else 。</p></li><li><p>语法：</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 1的值为true执行代码</span></span><br><span class="line">    <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>){</span><br><span class="line">        <span class="comment">// 如果布尔表达式 2的值为true执行代码</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h3><ul><li><p>多选择结构还有一个实现方式就是switch case语句。</p></li><li><p>switch case 语句判断一个变量与一系列值中某个值是否相等，每一个值称为一个分支。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression){</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="comment">// 你可以有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">// 可选</span></span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>switch case语句中的变量类型可以是：</strong></p><ul><li>byte、short、int或者char。</li><li><font color="red">从Java SE 7 开始</font></li><li><font color="red">switch 支持字符串String类型了</font></li><li>同时 case 标签必须为字符串常量或者字面量。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">'F'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(grade){</span><br><span class="line">            <span class="keyword">case</span><span class="string">'A'</span>:</span><br><span class="line">                System.out.println(<span class="string">"优秀"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'B'</span>:</span><br><span class="line">                System.out.println(<span class="string">"良好"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'C'</span>:</span><br><span class="line">                System.out.println(<span class="string">"及格"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'D'</span>:</span><br><span class="line">                System.out.println(<span class="string">"再接再厉"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'E'</span>:</span><br><span class="line">                System.out.println(<span class="string">"挂科"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"未知等级"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">"肥龙"</span>;</span><br><span class="line">        <span class="comment">// JDK7的新特性，表达式结果可以是字符串！！！</span></span><br><span class="line">        <span class="comment">// 字符的本质还是数字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反编译  java---class（字节码文件）---反编译（IDEA）</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (name){</span><br><span class="line">            <span class="keyword">case</span><span class="string">"肥龙"</span>:</span><br><span class="line">                System.out.println(<span class="string">"肥龙"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"聂千龙"</span>:</span><br><span class="line">                System.out.println(<span class="string">"聂千龙"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"弄啥嘞！"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ul><li>while循环</li><li>do…while循环</li><li>for循环</li><li>在Java5中引入了一种主要用于数组增强型的for循环</li></ul><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><ul><li><p>while是最基本的循环，它的结构为：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 循环内容</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>只要布尔表达式为true，循环就会一直执行下去</p></li><li><p><font color="red">我们大多数情况是会让循环停止下来的，我们需要一个表达式失效的方式来结束循环。</font></p></li><li><p>少部分情况需要循环一直执行，比如服务器的请求响应监听等。</p></li><li><p>循环条件一直为true就会造成无限循环【死循环】，我们正常的业务编程中应该尽量避免死循环。会影响程序性能或者造成程序卡死崩溃！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出1~100</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>){</span><br><span class="line">            <span class="comment">// 等待客户端连接</span></span><br><span class="line">            <span class="comment">// 定时检查</span></span><br><span class="line">            <span class="comment">// ......</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 计算1+2+3+...+100=?</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i&lt;=<span class="number">100</span>){</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 高斯算法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        sum2 = ((<span class="number">1</span>+<span class="number">100</span>))*(i/<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum2);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h3><ul><li><p>对于while语句而言，如果条件不满足，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。</p></li><li><p>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>{</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">}<span class="keyword">while</span>(布尔表达式);</span><br></pre></td></tr></tbody></table></figure></li><li><p>while 和 do-while的区别：</p><ul><li>while先判断后执行。do-while是先执行后判断！</li><li>Do…while总是保证循环体会被至少执行一次！这是他们的主要差别。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoWhileDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a&lt;<span class="number">0</span>){</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            a++;</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"==============="</span>);</span><br><span class="line">        <span class="keyword">do</span>{</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            a++;</span><br><span class="line">        }<span class="keyword">while</span>(a&lt;<span class="number">0</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a><font color="red">For循环</font></h3><ul><li><p>虽然所有循环结构都可以用while或者do…while表示，但Java提供了另一种语句——for循环，使一些循环结构变得更加简单。</p></li><li><p>for循环语句是支持迭代的一种通用结构，<font color="red">是最有效、最灵活的循环结构。</font></p></li><li><p>for循环执行的次数是在执行前就确定的。语句格式如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化;布尔表达式;更新){</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 初始化条件</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (a&lt;=<span class="number">100</span>){ <span class="comment">// 条件判断</span></span><br><span class="line">            System.out.println(a); <span class="comment">// 循环体</span></span><br><span class="line">            a += <span class="number">2</span>; <span class="comment">//迭代</span></span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"while循环结束"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++){  <span class="comment">//100.for</span></span><br><span class="line">            System.out.println(i);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"for循环结束"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        关于 for 循环有以下几点说明：</span></span><br><span class="line"><span class="comment">        最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。</span></span><br><span class="line"><span class="comment">        然后，检测布尔表达式的值。如果为 true ，循环体被执行。如果 false ，循环终止，开始执行循坏体后面的语句。执行一次循坏后，</span></span><br><span class="line"><span class="comment">        再次检测布尔表达式。循环执行上面的过程。</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 计算0到100之间的奇数和偶数的和</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">oddSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">evenSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>){</span><br><span class="line">                oddSum += i;</span><br><span class="line">            }<span class="keyword">else</span> {</span><br><span class="line">                evenSum += i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"奇数的和："</span>+oddSum);</span><br><span class="line">        System.out.println(<span class="string">"偶数的和："</span>+evenSum);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 用while或for循环输出1-1000之间能被5整除的数，并且每行输出3个</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">1000</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// printlin 换行</span></span><br><span class="line">        <span class="comment">// print 不换行</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">1000</span>){</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(count==<span class="number">3</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h3><ul><li><p>Java增强型for循环语法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句：表达式){</span><br><span class="line">    <span class="comment">// 代码句子</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。</p></li><li><p>表达式：表达式是要访问的数组名，或者是返回值为数组的方法。</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] numbers = {<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>}; <span class="comment">// 定义了一个数组</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) {</span><br><span class="line">            System.out.println(numbers[i]);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"============="</span>);</span><br><span class="line">        <span class="comment">// 遍历数组的元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:numbers){</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="breakcontinue"><a href="#breakcontinue" class="headerlink" title="breakcontinue"></a>breakcontinue</h3><ul><li><p>break 在任何循环语句的主体部分，均可用 break 控制循环的流程。 break 用于强行退出循环，不执行循环中剩余的语句。( break 语句也在 switch 语句中使用）</p></li><li><p>continue 语句用在循环语句体中，用于终止某次循环过程，即跳过循环体中尚未执行的语句，接着进行下一次是否执行循环的判定。</p></li><li><p>关于 goto 关键字</p><ul><li>goto 关键字很早就在程序设计语言中出现。尽管 goto 仍是 Java 的一个保留字，但并未在语言中得到正式使用； Java 没有 goto 。然而，在 break 和 continue 这两个关键字的身上，我们仍然能看出一些 goto 的影子﹣-﹣带标签的 break 和 continue 。</li><li>“标签”是指后面跟一个冒号的标识符，例如： label :</li><li>对 Java 来说唯一用到标签的地方是在循环语句之前。而在循环之前设置标签的唯一理由是：我们希望在其中嵌套另个循环，由于 break 和 continue 关键字通常只中断当前循环，但若随同标签使用，它们就会中断到存在标签的地方。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">30</span>){</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"123"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContinueDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LabelDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 打印101~150之间所有的质数</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        outer:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">101</span>; i &lt; <span class="number">150</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j&lt; i/<span class="number">2</span>; j++){</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span>){</span><br><span class="line">                    <span class="keyword">continue</span> outer;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            System.out.print(i+<span class="string">" "</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 打印三角形    5行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法一：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt;= i; j--) {</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; i; j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法二：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++){</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt; i; j--) {</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; (<span class="number">2</span>*i-<span class="number">1</span>); j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-04"><a href="#Chapter-04" class="headerlink" title="Chapter 04"></a>Chapter 04</h1><h2 id="Java方法详解"><a href="#Java方法详解" class="headerlink" title="Java方法详解"></a>Java方法详解</h2><h3 id="何谓方法？"><a href="#何谓方法？" class="headerlink" title="何谓方法？"></a>何谓方法？</h3><ul><li><p>System.out.printlin()</p><p>类.对象.方法</p></li><li><p>Java方法是语句的合集，它们在一起执行一个功能。</p><ul><li>方法是解决一类问题的步骤的有序组合</li><li>方法包含于类或对象中</li><li>方法在程序中被创建，在其他地方被引用</li></ul></li><li><p>设计方法的原则：方法的本意是功能块，就是实现某个功能的语句块的集合。我们设计方法的时候，最好保持方法的原子性，<font color="red">就是一个方法只能完成一个功能，这样利于我们后期扩展。</font></p></li><li><p>方法的命名规则：<font color="red">首字母小写和驼峰原则：run(),runRun()</font></p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        test();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>{</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">1000</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h3><ul><li><p>Java的方法类似于其他语言的函数，是一段<font color="red">用来完成特殊功能的代码片段</font>，一般情况下，定义一个方法包含以下语法：</p></li><li><p><font color="red">方法包含一个方法头和一个方法体。</font>下面是一个方法的所有部分：</p><ul><li><p><font color="red">修饰符</font>：修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</p><ul><li><font color="red">返回值类型</font>：方法可能会返回值。returnValueType是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType是关键字void。</li></ul></li><li><p><font color="red">方法名</font>：是方法的实际名称。方法名和参数表共同构成方法签名。</p></li><li><p><font color="red">参数类型</font>：参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。</p><p>形式参数：在方法被调用时用于接收外界输入的数据。</p><p>实参：调用时实际传给方法的数据。</p></li><li><p><font color="red">方法体</font>：方法体包含具体的语句，定义该方法的功能。</p></li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰符返回值类型 方法名(参数类型 参数名){</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dos命令学习</title>
      <link href="/archives/4d22d848.html"/>
      <url>/archives/4d22d848.html</url>
      
        <content type="html"><![CDATA[<h1 id="打开CMD的方式"><a href="#打开CMD的方式" class="headerlink" title="打开CMD的方式"></a>打开CMD的方式</h1><ol><li>开始 + 系统 + 命令提示符</li><li>Win键 + R 输入cmd打开控制台（推荐）</li><li>在任意文件夹下，按住shift键 + 鼠标右键，在此处打开命令窗口</li><li>资源管理器的地址导航栏前面加上cmd路径</li></ol><p>管理员方式运行：选择以管理员方式运行</p><h1 id="常用的Dos命令："><a href="#常用的Dos命令：" class="headerlink" title="常用的Dos命令："></a>常用的Dos命令：</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 盘符切换</span></span><br><span class="line">C:</span><br><span class="line">D:</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 查看当前目录下的所有文件</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line">D:\&gt;<span class="built_in">dir</span> <span class="comment"># 查看D盘下所有文件</span></span><br><span class="line"><span class="comment"># 切换目录 </span></span><br><span class="line"><span class="built_in">cd</span> <span class="comment"># change directory</span></span><br><span class="line"><span class="comment">## 跨盘符</span></span><br><span class="line">E:\&gt;<span class="built_in">cd</span> /d f: <span class="comment">#在E盘下切换到F盘</span></span><br><span class="line">F:\&gt;<span class="built_in">cd</span> /d E:\IDE <span class="comment">#在F盘下切换到E盘的IDE目录</span></span><br><span class="line"><span class="comment">## 同一盘符下</span></span><br><span class="line">E:\&gt;<span class="built_in">cd</span> IDE <span class="comment"># 打开E盘吓的IDE目录</span></span><br><span class="line"><span class="comment">## 返回上一级</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 清理屏幕</span></span><br><span class="line">cls <span class="comment"># clear screen</span></span><br><span class="line"><span class="comment"># 退出终端</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 查看电脑ip</span></span><br><span class="line">ipconfig</span><br><span class="line"><span class="comment"># 打开应用</span></span><br><span class="line"><span class="comment">##计算器</span></span><br><span class="line">calc</span><br><span class="line"><span class="comment">##画图</span></span><br><span class="line">mspaint</span><br><span class="line"><span class="comment">##记事本</span></span><br><span class="line">notpad</span><br><span class="line"><span class="comment">#ping 命令</span></span><br><span class="line">ping www.baidu.com</span><br><span class="line"><span class="comment">#文件操作命令</span></span><br><span class="line"><span class="comment">## 创建目录</span></span><br><span class="line">md 目录名</span><br><span class="line"><span class="comment">## 删除目录</span></span><br><span class="line">rd 目录名</span><br><span class="line"><span class="comment">## 创建文件</span></span><br><span class="line"><span class="built_in">cd</span>&gt; 文件名</span><br><span class="line"><span class="comment">## 删除文件</span></span><br><span class="line">del 文件名</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown测试</title>
      <link href="/archives/45babedb.html"/>
      <url>/archives/45babedb.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown学习"><a href="#Markdown学习" class="headerlink" title="Markdown学习"></a>Markdown学习</h1><p>标题：</p><h1 id="一级标题-一级标题"><a href="#一级标题-一级标题" class="headerlink" title="一级标题(#一级标题)"></a>一级标题(#一级标题)</h1><h2 id="二级标题-二级标题"><a href="#二级标题-二级标题" class="headerlink" title="二级标题(##二级标题)"></a>二级标题(##二级标题)</h2><h3 id="三级标题-三级标题"><a href="#三级标题-三级标题" class="headerlink" title="三级标题(###三级标题)"></a>三级标题(###三级标题)</h3><h4 id="四级标题-四级标题"><a href="#四级标题-四级标题" class="headerlink" title="四级标题(####四级标题)"></a>四级标题(####四级标题)</h4><p>Markdown最多支持到六级标题</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><strong>Hello,Word!</strong></p><p><em>Hello,Word!</em></p><p><em><strong>Hello,Word!</strong></em></p><p><del>Hello,Word!</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>该文档用于markdown学习</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><p>（—或者***）</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://pic3.zhimg.com/v2-e80c8023fd727e099f5846faf5435eac_1440w.jpg?source=172ae18b" alt="图片测试1"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/a68314308cc0cd101bfc44abb176dd10.png" alt="图片测试2"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="(https://www.nieqianlong.cn/)">点击跳转到我的博客</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>A</li><li>B</li><li>C</li></ol><ul><li>A</li><li>B</li><li>C</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>1994.1.1</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客搭建历程</title>
      <link href="/archives/4d8c90f.html"/>
      <url>/archives/4d8c90f.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 我的日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
