<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据挖掘学习</title>
      <link href="/archives/93120d0.html"/>
      <url>/archives/93120d0.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter-01-数据挖掘基础"><a href="#Chapter-01-数据挖掘基础" class="headerlink" title="Chapter_01 数据挖掘基础"></a>Chapter_01 数据挖掘基础</h1><h2 id="About-This-Course"><a href="#About-This-Course" class="headerlink" title="About This Course"></a>About This Course</h2><p>了解数据挖掘和知识发现</p><p>熟悉数据挖掘中的常见算法</p><p>掌握数据挖掘算法的具体应用</p><p>掌握对于实际案例的具体操作流程</p><p>开启对于科研的兴趣</p><h2 id="什么是数据挖掘？"><a href="#什么是数据挖掘？" class="headerlink" title="什么是数据挖掘？"></a>什么是数据挖掘？</h2><h3 id="什么是数据？"><a href="#什么是数据？" class="headerlink" title="什么是数据？"></a>什么是数据？</h3><p><strong>数据(data)</strong> 在拉丁文里是“<strong>已知</strong>”的意思</p><p>凡是用某种载体记录下来的、能反映自然界和人类社会某种信息的，就可称之为数据</p><p>古人“结绳记事”，打了结的绳子就是数据</p><p>现代社会，数据的种类和数量越来越丰富，载体也越来越多</p><p><strong>数字是数据，文字是数据，图像、音频、视频等都是数据</strong></p><p><strong><font color="skyblue">信息（Information）是高于数据的，是由数据提炼出的</font></strong></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1Gd0.md.png" alt="什么是数据"></p><h2 id="大数据时代"><a href="#大数据时代" class="headerlink" title="大数据时代"></a>大数据时代</h2><p><strong>Big data</strong> is a field that treats ways to analyze, systematically extract information from, or otherwise <strong>deal with data sets that are too large or complex</strong> to be dealt with by traditional data-processing application software.</p><p><strong>大数据</strong>是处理传统数据处理应用软件无法处理的<strong>过于庞大或复杂的数据集</strong>的分析、系统地提取信息的方法。</p><p><img src="https://s1.ax1x.com/2022/11/21/zl1JoV.png" alt="大数据时代"></p><p>个人数据越来越多</p><p>企业数据越来越多</p><p>存储设备容量不断增加</p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>1、Private Data</p><p>2、Open Data</p><ul><li><p><font color="skyblue">Technically Open:</font> available in a machine-readable standard format, which means it can be retrieved and meaningfully processed by a computer application.</p><p>（技术上开放:以机器可读的标准格式提供，这意味着它可以被计算机应用程序检索和有意义的处理。）</p></li><li><p><font color="skyblue">Legally Open: </font>explicitly licensed in a way that permits commercial and non-commercial use without restrictions.（合法开放:明确授权，允许商业和非商业使用，没有限制。）</p></li></ul><h2 id="什么是数据挖掘？-1"><a href="#什么是数据挖掘？-1" class="headerlink" title="什么是数据挖掘？"></a>什么是数据挖掘？</h2><p><strong><font color="skyblue">数据挖掘(Data Mining)又称Knowledge Discovery in Database</font></strong></p><p>是指从数据库的<strong><font color="red">大量数据</font></strong>中揭示出<strong><font color="red">隐含的、先前未知</font></strong>的<strong><font color="red">并有潜在价值的</font></strong>信息的非平凡过程。</p><h2 id="什么是数据挖掘？精确定义"><a href="#什么是数据挖掘？精确定义" class="headerlink" title="什么是数据挖掘？精确定义"></a>什么是数据挖掘？精确定义</h2><p>According to <strong><font color="skyblue">Han et al.</font></strong></p><p>Extraction of interesting (<strong><font color="red">non-trivial（非平凡的）, implicit（隐含的）, previously unknown（先前未知的） and potentially useful（有潜在价值的）</font></strong>) patterns or knowledge from <strong><font color="red">huge amount of data</font></strong></p><p>According to <strong><font color="skyblue">Witten et al.</font></strong></p><p>The process of discovering patterns in data</p><p>Automatic（自动）/semiautomatic（半自动）</p><p>Patterns <strong><font color="red">must lead to some advantage</font></strong> </p><h2 id="数据挖掘和统计学的区别"><a href="#数据挖掘和统计学的区别" class="headerlink" title="数据挖掘和统计学的区别"></a>数据挖掘和统计学的区别</h2><p>Quote from Witten et al. </p><p><strong><font color="red">“What is the difference between [data mining] and statistics? </font></strong></p><p>Cynics looking wryly at the explosion of commercial interest (and hype) in this area, equate data mining to statistics plus marketing. </p><p>（在这一领域的商业兴趣(和炒作)的爆炸式增长中,一些人把数据挖掘与统计和营销等同起来。）</p><p>In truth, <font color="skyblue">you should not look for a dividing line between [data mining] and statistics because there is a continuum</font> – and a multidimensional one at that – of data analysis techniques. <font color="skyblue">Some derive from the skills taught in standard statistics courses</font>, and others are more closely associated with the kind of <font color="skyblue">machine learning</font> that has arisen out of computer science.”</p><p>（事实上，你不应该在[数据挖掘]和统计之间寻找一条分界线，因为数据分析技术是连续的——而且是多维的。一些来自标准统计学课程中教授的技能，另一些则与计算机科学中产生的机器学习密切相关。）</p><h2 id="数据挖掘和机器学习的区别"><a href="#数据挖掘和机器学习的区别" class="headerlink" title="数据挖掘和机器学习的区别"></a>数据挖掘和机器学习的区别</h2><p><strong><font color="skyblue">机器学习</font></strong>是<strong><font color="skyblue">数据挖掘</font></strong>中的一种重要工具。</p><p>然而<strong><font color="skyblue">数据挖掘</font></strong>不仅仅要研究、拓展、应用一些机器学习方法，还要通过许多非机器学习技术解决<strong><font color="skyblue">数据仓储、大规模数据、数据噪声</font></strong>等实践问题。</p><p><strong><font color="skyblue">机器学习</font></strong>的涉及面也很宽，常用在数据挖掘上的方法通常只是“从数据学习”。然而机器学习不仅仅可以用在数据挖掘上，一些机器学习的子领域甚至与数据挖掘关系不大，如<strong><font color="skyblue">增强学习</font></strong>与<strong><font color="skyblue">自动控制</font></strong>等。</p><p>In general,<strong><font color="red"> 数据挖掘是从目的而言的，机器学习是从方法而言的</font></strong>，两个领域有相当大的交集，但不能等同。</p><p>Ref:</p><p><a href="https://baijiahao.baidu.com/s?id=1602990068129749215&amp;wfr=spider&amp;for=pc">机器学习和数据挖掘的联系及区别</a></p><p><a href="http://www.duozhishidai.com/article-10030-1.html">大数据的背景下，采用的大数据与数据挖掘有什么本质上的不同?</a></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1NJU.md.png" alt="数据挖掘和机器学习的区别"></p><p><img src="https://s1.ax1x.com/2022/11/21/zl11Ln.png" alt="数据挖掘和机器学习的区别"></p><h2 id="Knowledge-Discovery-过程"><a href="#Knowledge-Discovery-过程" class="headerlink" title="Knowledge Discovery 过程"></a>Knowledge Discovery 过程</h2><p><img src="https://s1.ax1x.com/2022/11/21/zl18Zq.md.png" alt="Knowledge Discovery 过程"></p><h2 id="数据挖掘的常用工具"><a href="#数据挖掘的常用工具" class="headerlink" title="数据挖掘的常用工具"></a>数据挖掘的常用工具</h2><p><img src="https://s1.ax1x.com/2022/11/21/zl10y9.md.png" alt="数据挖掘的常用工具"></p><h2 id="数据挖掘的任务"><a href="#数据挖掘的任务" class="headerlink" title="数据挖掘的任务"></a>数据挖掘的任务</h2><p><img src="https://s1.ax1x.com/2022/11/21/zl1az4.md.png" alt="数据挖掘的任务"></p><p><strong><font size="5" color="red">特征</font></strong></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1UWF.png" alt="特征"></p><p><strong><font size="5" color="red">目标变量</font></strong></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1wQJ.png" alt="<font size=5 color=&quot;red&quot;>目标变量</font>"></p><p><strong>任务</strong>：发现特征和目标变量之间的关系</p><h2 id="如何选择算法"><a href="#如何选择算法" class="headerlink" title="如何选择算法"></a>如何选择算法</h2><h3 id="监督学习-Supervised-Learning"><a href="#监督学习-Supervised-Learning" class="headerlink" title="监督学习 Supervised Learning"></a>监督学习 Supervised Learning</h3><p>有目标变量，即数据是有标签的</p><h3 id="无监督学习-Unsupervised-Learning"><a href="#无监督学习-Unsupervised-Learning" class="headerlink" title="无监督学习 Unsupervised Learning"></a>无监督学习 Unsupervised Learning</h3><p>没有目标变量，即没有类别信息</p><h3 id="半监督学习-Semi-supervised-Learning"><a href="#半监督学习-Semi-supervised-Learning" class="headerlink" title="半监督学习 Semi-supervised Learning"></a>半监督学习 Semi-supervised Learning</h3><p>既使用有标签的数据，又使用无标签的数据来训练模型。其中，有标签的数据用来学习模型，无标签的数据用来优化模型。</p><p><img src="https://s1.ax1x.com/2022/11/21/zl1re1.md.png" alt="半监督学习"> </p><p><img src="https://s1.ax1x.com/2022/11/21/zl1BLR.md.png" alt="如何选择算法"></p><h3 id="选择算法时需要考虑的问题："><a href="#选择算法时需要考虑的问题：" class="headerlink" title="选择算法时需要考虑的问题："></a>选择算法时需要考虑的问题：</h3><p>1.目的是什么？需要完成什么任务？</p><p>2.需要分析或收集的数据是什么？</p><p><img src="https://s1.ax1x.com/2022/11/21/zl1sdx.md.png" alt="选择算法时需要考虑的问题"></p><h2 id="数据挖掘算法"><a href="#数据挖掘算法" class="headerlink" title="数据挖掘算法"></a>数据挖掘算法</h2><p>KDnuggets 每年评选出15 大最常用算法和方法</p><p><img src="https://s1.ax1x.com/2022/11/21/zl1yo6.md.png" alt="KDnuggets 每年评选出15 大最常用算法和方法"></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1cFK.md.png" alt="KDnuggets 每年评选出15 大最常用算法和方法"></p><h2 id="数据挖掘的流程"><a href="#数据挖掘的流程" class="headerlink" title="数据挖掘的流程"></a>数据挖掘的流程</h2><p><img src="https://s1.ax1x.com/2022/11/21/zl1WSe.md.png" alt="数据挖掘的流程"></p><h2 id="数据-1"><a href="#数据-1" class="headerlink" title="数据"></a>数据</h2><p><img src="https://s1.ax1x.com/2022/11/21/zl1gJO.md.png" alt="数据"></p><h3 id="划分数据"><a href="#划分数据" class="headerlink" title="划分数据"></a>划分数据</h3><p><img src="https://s1.ax1x.com/2022/11/21/zl12WD.md.png" alt="划分数据"></p><h3 id="训练数据"><a href="#训练数据" class="headerlink" title="训练数据"></a>训练数据</h3><p><img src="https://s1.ax1x.com/2022/11/21/zl1fQH.md.png" alt="训练数据"></p><h3 id="交叉验证-Cross-Validation"><a href="#交叉验证-Cross-Validation" class="headerlink" title="交叉验证 Cross Validation"></a>交叉验证 Cross Validation</h3><p><img src="https://s1.ax1x.com/2022/11/21/zl1hyd.md.png" alt="交叉验证 Cross Validation"></p><h3 id="留一法交叉验证-Cross-Validation"><a href="#留一法交叉验证-Cross-Validation" class="headerlink" title="留一法交叉验证 Cross Validation"></a>留一法交叉验证 Cross Validation</h3><p><img src="https://s1.ax1x.com/2022/11/21/zl1IeI.md.png" alt="留一法交叉验证 Cross Validation"></p><p><img src="https://s1.ax1x.com/2022/11/21/zl1owt.md.png" alt="留一法交叉验证 Cross Validation"></p><h2 id="数据挖掘的应用"><a href="#数据挖掘的应用" class="headerlink" title="数据挖掘的应用"></a>数据挖掘的应用</h2><p><strong>1. Future Healthcare</strong></p><p>Mining can be used to predict the volume of patients in every category. Processes are developed that make sure that the patients receive appropriate care at the right place and at the right time. Data mining can also help healthcare insurers to detect fraud and abuse.</p><p>（数据挖掘可以用来预测每一类患者的数量。制定了确保病人在正确的地点和正确的时间接受适当的治疗的程序。数据挖掘还可以帮助医疗保险公司发现欺诈和滥用行为。）</p><p><strong>2. Market Basket Analysis</strong></p><p>know the buyer’s needs and change the store’s layout accordingly. Using differential analysis comparison of results between different stores, between customers in different demographic groups can be done.</p><p>（了解买家的需求，并相应地改变商店的布局。利用差异分析比较不同商店之间的结果，不同人口统计群体之间的顾客可以做。）</p><p><strong>3. Education</strong></p><p>Educational Data Mining, concerns with developing methods that discover knowledge from data originating from educational Environments. The goals of EDM are identified as predicting students’ future learning behavior, studying the effects of educational support, and advancing scientific knowledge about learning. </p><p>（教育数据挖掘，关注开发从源自教育环境的数据中发现知识的方法。EDM的目标被确定为预测学生未来的学习行为，研究教育支持的效果，并推进关于学习的科学知识。）</p><p><strong>4. Fraud Detection</strong></p><p>A supervised method includes collection of sample records. These records are classified fraudulent or non-fraudulent. A model is built using this data and the algorithm is made to identify whether the record is fraudulent or not.</p><p>（监督方法包括样本记录的集合。这些记录是欺诈或非欺诈的。使用这个数据建立一个模型,并通过算法来确定记录是否欺诈。）</p><h2 id="Scikit-learn-需知"><a href="#Scikit-learn-需知" class="headerlink" title="Scikit-learn 需知"></a>Scikit-learn 需知</h2><p>1.Scikit-learn has built-in data sets</p><p>（Scikit-learn有内置的数据集）</p><p>2.Third-party public data sets are also easily available</p><p>（第三方公共数据集也很容易获得）</p><p>3.There are ready-made classifiers to train baseline models</p><p>（有现成的分类器来训练基线模型）</p><p>4.Scikit-learn has its own plotting API</p><p>（Scikit-learn有自己的绘图API）</p><p>5.Scikit-learn has built-in feature selection methods</p><p>（Scikit-learn有内置的特征选择方法）</p><p>6.Pipelines allow you to chain together all the steps in a machine learning workflow</p><p>（管道允许您将机器学习工作流中的所有步骤链接在一起）</p><p>7.With the ColumnTransformer you can apply different preprocessing to different features</p><p>（在ColumnTransformer中,您可以将不同的预处理应用于不同的特性）</p><p>8.You can easily output an HTML representation of your pipeline</p><p>（您可以轻松地输出管道的HTML表示）</p><p>9.There is a plotting function to visualize trees</p><p>（有一个绘图函数来可视化树）</p><p>10.There are many third-party libraries that extend the features of Scikit-learn</p><p>（有许多第三方库扩展了Scikit-learn的功能）</p><h1 id="Chapter-02-了解数据"><a href="#Chapter-02-了解数据" class="headerlink" title="Chapter_02 了解数据"></a>Chapter_02 了解数据</h1><h2 id="About-This-Course-1"><a href="#About-This-Course-1" class="headerlink" title="About This Course"></a>About This Course</h2><ol><li><p>数据类型</p></li><li><p>数据属性</p></li><li><p>数据统计及可视化</p></li><li><p>相似度计算</p></li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><strong>记录数据</strong></p><ul><li><p>关系型记录</p></li><li><p>矩阵</p></li><li><p>文档数据: 文本文件</p></li><li><p>事务数据（Transaction data）</p></li></ul><p>2.1 关系型记录</p><p>2.2 事物数据</p><p><strong>图形和网络数据</strong></p><ul><li><p>World Wide Web</p></li><li><p>社交网络</p></li><li><p>分子结构</p></li><li><p>道路网络（ Road network ）</p></li></ul><p>2.3 分子结构</p><p>2.4 社交网络</p><p><strong>有序数据</strong></p><ul><li><p>视频数据</p></li><li><p>时间数据: 时间序列time-series</p></li><li><p>序列数据: 基因序列数据</p></li></ul><p>2.5 时间序列time-series</p><p><strong>空间</strong>, <strong>图像和多媒体数据</strong></p><ul><li><p>空间数据: 点，线，多边形</p></li><li><p>图像数据</p></li></ul><p>2.6 图像数据</p><h2 id="数据对象"><a href="#数据对象" class="headerlink" title="数据对象"></a>数据对象</h2><p><strong><font color="red">数据集由数据对象组成</font></strong></p><p><strong><font color="skyblue">数据对象</font></strong>表示一个实体，也可以被叫做“<strong><font color="skyblue">样本，实体，例子，对象，元祖</font></strong>”</p><p>For Examples: </p><p>销售数据库: 顾客，销售商品，销量</p><p>医疗数据库: 病人，病例</p><p>学校数据库: 学生，老师，课程</p><p><strong><font color="skyblue">数据对象</font></strong>由<strong><font color="red">属性</font></strong>描述.</p><p>数据库的一行 -&gt; 一个数据对象; </p><p>数据库的一列 -&gt;一个属性.</p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p><strong>属性 (维度，特征，变量)</strong>: 一个<strong><font color="red">数据段，表示数据对象的特征</font></strong></p><ul><li><em>比如，学号，姓名，地址</em></li></ul><p>2.7 属性</p><h3 id="属性类别："><a href="#属性类别：" class="headerlink" title="属性类别："></a>属性类别：</h3><p><strong><font color="skyblue">Nominal标称型：</font></strong>有限目标中的取值，“与名称有关”。</p><p><strong>标称属性</strong>的值是一些符号或者是事物的名称。</p><p>   <strong><font color="red">Note：尽管有的标称属性有数值，但是不能把它当成数值属性。</font></strong></p><ul><li><em>班级</em> <em>=</em> {<em>计算机一班**,</em> <em>计算机二班</em>}</li></ul><p><strong><font color="skyblue">Binary二元型：</font></strong>标称属性的一种，<strong><font color="skyblue">只有两个</font></strong>类别或状态</p><p>只有两个状态(0 或 1)</p><p><em>性别<strong>={</strong>男，女**}</em></p><p><strong><font color="skyblue">Ordinal序数型：</font></strong></p><p><font color="skyblue">有排序的</font>连续数值，<font color="skyblue">但是连续值之间的大小是未知的</font>，记录不能客观评价的排序。</p><p><em>衣服型号 = {小，中，大}</em>, 年级</p><p><em>“优”，“良”，“差”这些值是有意义的先后次序，但是我们不能说“优”比“良”好多少，“良”比“差”好多少，它们之间的差是未知的。</em></p><p><strong><font color="red">Note：标称、二元、序数属性描述对象的特征，而不给出实际大小或者数量。</font></strong></p><p><strong><font color="skyblue">数值型属性：</font></strong></p><p>整型或实数，从<strong><font color="skyblue">无限的数值集合</font></strong>中取值</p><ul><li><p><strong><font color="skyblue">Interval区间属性</font></strong></p><ul><li><p>以同等大小的单位测量</p></li><li><p>取值有顺序</p></li><li><p>E.g., <em>temperature in</em> <em>C<strong>˚</strong>or</em> <em>F<strong>˚</strong>, calendar dates</em></p></li><li><p>注：这里就是说20C˚不是10C˚的两倍，只能转换为开尔文才能相比</p></li><li><p>没有真正的0</p></li></ul></li></ul><ul><li><p><strong><font color="skyblue">Ratio比率属性</font></strong></p><ul><li>我们可以将数值描述为比测量单位大一个数量级(10k是5k的两倍)。</li><li><p>注：这里就是说数值之间能有意义地相比</p></li><li><p>E.g., <em>temperature in Kelvin, length,</em> <em>counts</em></p></li></ul></li></ul><h2 id="Quick-Test"><a href="#Quick-Test" class="headerlink" title="Quick Test"></a>Quick Test</h2><p>以下属性属于什么类型？</p><ol><li><p>邮政编码                                            <psw>Nominal标称型</psw></p></li><li><p>工资收入                                   <psw>数值型比率Ratio</psw></p></li><li><p>是否感染新冠                           <psw>二元型</psw></p></li><li><p>学号                                           <psw>Nominal标称型</psw></p></li><li><p>街道号码                                   <psw>Ordinal序数型</psw></p></li></ol><p>2.8 属性类别</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习</title>
      <link href="/archives/317b894e.html"/>
      <url>/archives/317b894e.html</url>
      
        <content type="html"><![CDATA[<h1 id="初始Vue"><a href="#初始Vue" class="headerlink" title="初始Vue"></a>初始Vue</h1><p>1、Vue是什么？</p><ul><li>一套用语和构建用户界面的<font color="red">渐进式</font>JavaScript框架</li></ul><p>2、谁开发的？</p><ul><li>尤雨溪</li></ul><p>3、Vue的特点</p><ul><li>采用<font color="red">组件化</font>模式，提高代码复用率、且让代码更好维护</li><li><font color="red">声明式</font>编码，让编码人员无需直接操作DOM，提高开发效率</li><li>使用<font color="red">虚拟DOM</font>+优秀的<font color="red">Diff算法</font>，尽量复用DOM节点</li></ul><h2 id="搭建Vue开发环境"><a href="#搭建Vue开发环境" class="headerlink" title="搭建Vue开发环境"></a>搭建Vue开发环境</h2><p>Vue2.0版本CDN引入</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Hello案例"><a href="#Hello案例" class="headerlink" title="Hello案例"></a>Hello案例</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初始Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        初始Vue：</span></span><br><span class="line"><span class="comment">            1、想让Vue工作，就必须先创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">            2、root容器里的代码依然符合HTML规范，只不过混入了一些特殊的Vue语法；</span></span><br><span class="line"><span class="comment">            3、root容器里的代码被称为【Vue模板】</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'#root'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="容器和Vue实例的对应关系"><a href="#容器和Vue实例的对应关系" class="headerlink" title="容器和Vue实例的对应关系"></a>容器和Vue实例的对应关系</h2><p>容器与实例多对一（<font color="red"><strong>错</strong></font>）</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初始Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'.root'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><hr><p>容器与实例一对多（<font color="red"><strong>错</strong></font>）</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初始Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}, {{address}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'#root'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'#root'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">address</span>: <span class="string">'上海徐汇'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>结论：容器和Vue实例只能是一对一的关系</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初始Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        初始Vue：</span></span><br><span class="line"><span class="comment">            1、想让Vue工作，就必须先创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">            2、root容器里的代码依然符合HTML规范，只不过混入了一些特殊的Vue语法；</span></span><br><span class="line"><span class="comment">            3、root容器里的代码被称为【Vue模板】</span></span><br><span class="line"><span class="comment">            4、Vue实例和容器是一一对应的；</span></span><br><span class="line"><span class="comment">            5、真实开发中只有一个Vue实例，并且会配合着组件一起使用；</span></span><br><span class="line"><span class="comment">            6、{{xxx}}中xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</span></span><br><span class="line"><span class="comment">            7、一旦data中的数据发生改变，那么模板中用到该数据的地方也会自动更新；</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">        注意区分js表达式和js代码（语句）</span></span><br><span class="line"><span class="comment">            1、表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方</span></span><br><span class="line"><span class="comment">                (1).a</span></span><br><span class="line"><span class="comment">                (2).a+b</span></span><br><span class="line"><span class="comment">                (3).demo(1)</span></span><br><span class="line"><span class="comment">                (4).x==y&gt;'a':'b'</span></span><br><span class="line"><span class="comment">            2、js代码（语句）</span></span><br><span class="line"><span class="comment">                (1).if{}</span></span><br><span class="line"><span class="comment">                (2).for(){}</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}, {{address}}, {{Date.now()}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，{{name}}, {{address.toUpperCase()}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'#root'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">address</span>: <span class="string">'上海徐汇'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">'#root2'</span>, <span class="comment">//用于指定当前Vue实例为哪个容器服务，值通常为为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: { <span class="comment">//data中用于存储数据，数据供el中所指定的容器去使用，值暂时先写成一个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'ShangHaiNormalUniversity'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">address</span>: <span class="string">'ShangHaiXuHui'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Vue模板语法有2大类：</span></span><br><span class="line"><span class="comment">1.插值语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签体内容。</span></span><br><span class="line"><span class="comment">写法：{{xxx}}，xxx是js表达式，且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment">2.指令语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。</span></span><br><span class="line"><span class="comment">举例：v-bind:href="xxx" 或  简写为 :href="xxx"，xxx同样要写js表达式，</span></span><br><span class="line"><span class="comment"> 且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment">备注：Vue中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好，{{name}}<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a v-band:href="https://www.nieqianlong.cn"&gt;点击我去博客学习&lt;/a&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"school.url.toUpperCase()"</span>&gt;</span>点击我去{{school.name}}博客学习1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"school.url"</span>&gt;</span>点击我去{{school.name}}博客学习2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'jack'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">school</span>: {</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">'聂千龙'</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">url</span>: <span class="string">'https://www.nieqianlong.cn'</span></span></span><br><span class="line"><span class="language-javascript">                }</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Vue中有2种数据绑定的方式：</span></span><br><span class="line"><span class="comment">1.单向绑定(v-bind)：数据只能从data流向页面。</span></span><br><span class="line"><span class="comment">2.双向绑定(v-model)：数据不仅能从data流向页面，还可以从页面流向data。</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.双向绑定一般都应用在表单类元素上（如：input、select等）</span></span><br><span class="line"><span class="comment">2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 普通写法 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 单向数据绑定：&lt;input type="text" v-bind:value="name"&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="comment">        双向数据绑定：&lt;input type="text" v-model:value="name"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line">        单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-bind:x</span>=<span class="string">"name"</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如下代码是错误的，因为v-model只能应用在表单类元素（输入类元素）上 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;h2 v-model:x="name"&gt;你好啊！&lt;/h2&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'聂千龙'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        });</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="el与data的两种写法"><a href="#el与data的两种写法" class="headerlink" title="el与data的两种写法"></a>el与data的两种写法</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">data与el的2种写法</span></span><br><span class="line"><span class="comment">1.el有2种写法</span></span><br><span class="line"><span class="comment">(1).new Vue时候配置el属性。</span></span><br><span class="line"><span class="comment">(2).先创建Vue实例，随后再通过vm.$mount('#root')指定el的值。</span></span><br><span class="line"><span class="comment">2.data有2种写法</span></span><br><span class="line"><span class="comment">(1).对象式</span></span><br><span class="line"><span class="comment">(2).函数式</span></span><br><span class="line"><span class="comment">如何选择：目前哪种写法都可以，以后学习到组件时，data必须使用函数式，否则会报错。</span></span><br><span class="line"><span class="comment">3.一个重要的原则：</span></span><br><span class="line"><span class="comment">由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再是Vue实例了。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，{{name}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//el的两种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const v = new Vue({</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // el: "#root",     //第一种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     data: {</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//         name: "聂千龙"</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     }</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// });</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(v)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// // v.$mount('#root')    //第二种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// setTimeout(() =&gt; {</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     v.$mount('#root')</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// }, 1000);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//data的两种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//data的第一种写法：对象式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data:{</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     name:"上师大"</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// }</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//data的第二种写法：函数式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'@@@'</span>, <span class="variable language_">this</span>)<span class="comment">//此处的this是Vue函数对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">"上师大"</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">MVVM模型</span></span><br><span class="line"><span class="comment">1. M：模型(Model) ：data中的数据</span></span><br><span class="line"><span class="comment">2. V：视图(View) ：模板代码</span></span><br><span class="line"><span class="comment">3. VM：视图模型(ViewModel)：Vue实例</span></span><br><span class="line"><span class="comment">观察发现：</span></span><br><span class="line"><span class="comment">1.data中所有的属性，最后都出现在了vm身上。</span></span><br><span class="line"><span class="comment">2.vm身上所有的属性 及 Vue原型上所有属性，在Vue模板中都可以直接使用。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--View--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：{{name}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：{{address}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试一下1：{{1+1}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试一下2：{{$options}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试一下3：{{$emit}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试一下4：{{_c}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({                           <span class="comment">//ViewModel</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span>,         <span class="comment">//Model</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">address</span>: <span class="string">'上海徐汇'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(vm)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>回顾Object.defineProperty方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> number = <span class="number">170</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> person = {</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">'聂千龙'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">gender</span>: <span class="string">'男'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// age: 18</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// height: number</span></span></span><br><span class="line"><span class="language-javascript">    }</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person, <span class="string">'age'</span>, {</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">value</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">enumerable</span>: <span class="literal">true</span>,<span class="comment">//控制属性是否可以枚举，默认值是false</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">writeable</span>: <span class="literal">true</span>, <span class="comment">//控制属性是否可以被修改，默认值是false</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">configurable</span>: <span class="literal">true</span><span class="comment">//控制属性是否可以被删除，默认值是false</span></span></span><br><span class="line"><span class="language-javascript">    })</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person, <span class="string">'height'</span>, {</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//当有人读取person的height属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">get</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'有人读取height属性了'</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> number</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//当有人修改person的height属性时，set函数(setter)就会被调用，且返回值就是age的值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">set</span>(<span class="params">value</span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'有人修改了height属性，且值是'</span>, value)</span></span><br><span class="line"><span class="language-javascript">            number = value;</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    })</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(Object.keys(person))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// for (let key in person) {</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     console.log('@', person[key])</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// }</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>何为数据代理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据代理：通过一个对象代理对另一个对象中属性的操作（读/写） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> obj = { <span class="attr">x</span>: <span class="number">100</span> }</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> obj2 = { <span class="attr">y</span>: <span class="number">200</span> }</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj2, <span class="string">'x'</span>, {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">get</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> obj.<span class="property">x</span></span></span><br><span class="line"><span class="language-javascript">            },</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">set</span>(<span class="params">value</span>) {</span></span><br><span class="line"><span class="language-javascript">                obj.<span class="property">x</span> = value</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        })</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue中的数据代理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1.Vue中的数据代理：</span></span><br><span class="line"><span class="comment">通过vm对象来代理data对象中属性的操作（读/写）</span></span><br><span class="line"><span class="comment">2.Vue中数据代理的好处：</span></span><br><span class="line"><span class="comment">更加方便的操作data中的数据</span></span><br><span class="line"><span class="comment">3.基本原理：</span></span><br><span class="line"><span class="comment">通过Object.defineProperty()把data对象中所有属性添加到vm上。</span></span><br><span class="line"><span class="comment">为每一个添加到vm上的属性，都指定一个getter/setter。</span></span><br><span class="line"><span class="comment">在getter/setter内部去操作（读/写）data中对应的属性。</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称：{{name}}<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：{{address}}<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> data = {</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">'上师大'</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">address</span>: <span class="string">'上海徐汇'</span></span></span><br><span class="line"><span class="language-javascript">    }</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        data</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data: {</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     name: '上师大',</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     address: '上海徐汇'</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// }</span></span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s1.ax1x.com/2022/11/20/zMeJyT.md.jpg" alt="数据代理"></p><p>vm对_data做了数据代理，使得vm.name和vm.address对应的便是_data中的name和address，Vue还对_data做了升级（数据劫持）以便于data中的数据改变后能使得使用到data中数据的地方能跟随变化，并不是在_data中做了数据代理</p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件处理的基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">事件的基本使用：</span></span><br><span class="line"><span class="comment">1.使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；</span></span><br><span class="line"><span class="comment">2.事件的回调需要配置在methods对象中，最终会在vm上；</span></span><br><span class="line"><span class="comment">3.methods中配置的函数，不要用箭头函数！否则this就不是vm了；</span></span><br><span class="line"><span class="comment">4.methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">5.@click="demo" 和 @click="demo($event)" 效果一致，但后者可以传参；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到{{name}}学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"showInfo1"</span>&gt;</span>点我提示信息1（不传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"showInfo2(66,$event)"</span>&gt;</span>点我提示信息2（传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo1</span>(<span class="params">event</span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(event.target)</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(this == vm) //此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">'同学你好!'</span>)</span></span><br><span class="line"><span class="language-javascript">            },</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo2</span>(<span class="params">number, event</span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(number, event)</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">'同学你好!!'</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.demo1</span> {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.list</span> {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: peru;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> {</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        }</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Vue中的事件修饰符：</span></span><br><span class="line"><span class="comment">1.prevent：阻止默认事件（常用）；</span></span><br><span class="line"><span class="comment">2.stop：阻止事件冒泡（常用）；</span></span><br><span class="line"><span class="comment">3.once：事件只触发一次（常用）；</span></span><br><span class="line"><span class="comment">4.capture：使用事件的捕获模式；</span></span><br><span class="line"><span class="comment">5.self：只有event.target是当前操作的元素时才触发事件；</span></span><br><span class="line"><span class="comment">6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到{{name}}学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 阻止默认事件（常用） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.nieqianlong.cn"</span> @<span class="attr">click.prevent</span>=<span class="string">"showInfo"</span>&gt;</span>点我查看笔记<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 阻止事件冒泡（常用） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo1"</span> @<span class="attr">click</span>=<span class="string">"showInfo"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">"showInfo"</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 修饰符可以连续写 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;a href="http://www.nieqianlong.cn" @click.stop.prevent="showInfo"&gt;点我提示信息&lt;/button&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 事件只触发一次（常用） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"showInfo"</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span> @<span class="attr">click.capture</span>=<span class="string">"showMsg(1)"</span>&gt;</span></span><br><span class="line">            div1</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span> @<span class="attr">click</span>=<span class="string">"showMsg(2)"</span>&gt;</span></span><br><span class="line">                div2</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo1"</span> @<span class="attr">click.self</span>=<span class="string">"showInfo"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"showInfo"</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;ul @scroll="demo" class="list"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--滚动条--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">"demo"</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--鼠标滚轮--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo</span>(<span class="params">e</span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// e.preventDefault() //阻止默认事件</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// e.stopPropagation() //阻止事件冒泡</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">'同学你好！'</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.target)</span></span></span><br><span class="line"><span class="language-javascript">            },</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showMsg</span>(<span class="params">msg</span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span></span><br><span class="line"><span class="language-javascript">            },</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">demo</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log('@')</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) {</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'#'</span>)</span></span><br><span class="line"><span class="language-javascript">                }</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'累坏了'</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1.Vue中常用的按键别名：</span></span><br><span class="line"><span class="comment">回车 =&gt; enter</span></span><br><span class="line"><span class="comment">删除 =&gt; delete (捕获“删除”和“退格”键)</span></span><br><span class="line"><span class="comment">退出 =&gt; esc</span></span><br><span class="line"><span class="comment">空格 =&gt; space</span></span><br><span class="line"><span class="comment">换行 =&gt; tab (特殊，必须配合keydown去使用)</span></span><br><span class="line"><span class="comment">上 =&gt; up</span></span><br><span class="line"><span class="comment">下 =&gt; down</span></span><br><span class="line"><span class="comment">左 =&gt; left</span></span><br><span class="line"><span class="comment">右 =&gt; right</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.系统修饰键（用法特殊）：ctrl、alt、shift、meta</span></span><br><span class="line"><span class="comment">(1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</span></span><br><span class="line"><span class="comment">(2).配合keydown使用：正常触发事件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4.也可以使用keyCode去指定具体的按键（不推荐）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">5.Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到{{name}}学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下提示输入" @keyup="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下回车提示输入" @keyup.enter="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下删除或退格提示输入" @keyup.delete="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Esc提示输入" @keyup.esc="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Caps提示输入" @keyup.caps-lock="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Tab提示输入" @keydown.tab="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Ctrl提示输入" @keyup.ctrl="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Ctrl提示输入" @keydown.ctrl="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Alt提示输入" @keyup.alt="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Shift提示输入" @keyup.shift="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Meta提示输入" @keyup.meta="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" placeholder="按下Ctrl+y提示输入" @keydown.ctrl.y="showInfo"&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"按下回车提示输入"</span> @<span class="attr">keyup.huiche</span>=<span class="string">"showInfo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">'上师大'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo</span>(<span class="params">e</span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// if (e.keyCode != 13) return</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.target.value)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.key, e.keyCode) //显示按键名称</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.keyCode) //显示按键编码</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.target.value) //没有敲回车就传入数据</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_插值语法实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{firstName.slice(0,3)}}-{{lastName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 全名：&lt;span&gt;{{firstName + '-' + lastName}}&lt;/span&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">firstName</span>: <span class="string">'张'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lastName</span>: <span class="string">'三'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_method实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName()}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName()}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName()}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName()}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName()}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">firstName</span>: <span class="string">'张'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lastName</span>: <span class="string">'三'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fullName</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'@-----'</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">'-'</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">计算属性：</span></span><br><span class="line"><span class="comment">1.定义：要用的属性不存在，要通过已有属性计算得来。</span></span><br><span class="line"><span class="comment">2.原理：底层借助了Objcet.defineproperty方法提供的getter和setter。</span></span><br><span class="line"><span class="comment">3.get函数什么时候执行？</span></span><br><span class="line"><span class="comment">(1).初次读取时会执行一次。</span></span><br><span class="line"><span class="comment">(2).当依赖的数据发生改变时会被再次调用。</span></span><br><span class="line"><span class="comment">4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</span></span><br><span class="line"><span class="comment">5.备注：</span></span><br><span class="line"><span class="comment">1.计算属性最终会出现在vm上，直接读取使用即可。</span></span><br><span class="line"><span class="comment">2.如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        测试：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"x"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">firstName</span>: <span class="string">'张'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lastName</span>: <span class="string">'三'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">x</span>: <span class="string">'你好'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fullName</span>: {</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//get有什么用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//get什么时候调用？1、初次读取fullName是。2、所依赖的数据发生变化时。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">get</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'get被调用'</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">'-'</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">                },</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//set什么时候调用？当fullName被调用时</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">set</span>(<span class="params">value</span>) {</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'set'</span>, value)</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> arr = value.<span class="title function_">split</span>(<span class="string">'-'</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">firstName</span> = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">lastName</span> = arr[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">                }</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性简写<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>{{fullName}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">firstName</span>: <span class="string">'张'</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lastName</span>: <span class="string">'三'</span>,</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 完整写法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// computed: {</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     fullName: {</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//         get() {</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             console.log('get被调用')</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             return this.firstName + '-' + this.lastName</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//         },</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//         set(value) {</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             console.log('set', value)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             const arr = value.split('-')</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             this.firstName = arr[0]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//             this.lastName = arr[1]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//         }</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     }</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// }</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//简写(只考虑读取不考虑修改)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fullName</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'get被调用'</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">'-'</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>监视属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很{{info}}<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定事件的时候：@xxx="yyy" yyy可以写一些简单的语句 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;button @click="isHot = !isHot"&gt;切换天气&lt;/button&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"changeWeather"</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>({</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">"#root"</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isHot</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">info</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">'炎热'</span> : <span class="string">'凉爽'</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: {</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">changeWeather</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span></span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        },</span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习</title>
      <link href="/archives/607d6c62.html"/>
      <url>/archives/607d6c62.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git学习"><a href="#Git学习" class="headerlink" title="Git学习"></a>Git学习</h1><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><blockquote><p>什么是版本控制、版本迭代，新的版本！版本控制器</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23种设计模式学习</title>
      <link href="/archives/c1320e42.html"/>
      <url>/archives/c1320e42.html</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="什么是设计模式？"><a href="#什么是设计模式？" class="headerlink" title="什么是设计模式？"></a>什么是设计模式？</h2><p>设计模式(Design Pattern)是前辈们对代码开发经验的总结，是解决特定问题的一系列套路。他不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案。</p><h2 id="学习设计模式的意义"><a href="#学习设计模式的意义" class="headerlink" title="学习设计模式的意义"></a>学习设计模式的意义</h2><p>设计模式的本质是面向对象设计原则的实际运用，是对类的封装性、继承性和多态性以及类的关联关系和组合关系的充分理解。</p><p>正确使用设计模式具有以下优点：</p><ul><li>可以提高程序员的思维能力、编程能力、和设计能力。</li><li>使用设计更加标准化，代码编制更加工程化，使软件开发效率大大提高，从而缩短软件的开发周期。</li><li>使代码的可重用性高、可读性强、可靠性高、灵活性号、可维护性强。</li></ul><h2 id="GoF23"><a href="#GoF23" class="headerlink" title="GoF23"></a>GoF23</h2><p>GoF23</p><ul><li>一种思维、一种态度、一种进步</li></ul><p>创建型模式：</p><ul><li>单例模式、工厂模式、抽象工厂模式、建造者模式、原型模式</li></ul><p>结构型模式：</p><ul><li>适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式</li></ul><p>行为型模式：</p><ul><li>模仿方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式</li></ul><h2 id="设计模式的基本要素"><a href="#设计模式的基本要素" class="headerlink" title="设计模式的基本要素"></a>设计模式的基本要素</h2><p>模式名称</p><p>问题</p><p>解决方法</p><p>效果</p><h1 id="OOP七大原则"><a href="#OOP七大原则" class="headerlink" title="OOP七大原则"></a>OOP七大原则</h1><p>开闭原则：对扩展开放，对修改关闭</p><p>里氏替换原则：继承必须确保超类所拥有的性质在子类中仍然成立</p><p>依赖倒置原则：要面向接口编程，不要面向实现编程</p><p>单一职责原则：控制类的粒度大小，将对象解耦、提高其内聚性</p><p>接口隔离原则：要为各个类建立它们需要的专用接口</p><p>迪米特法则：只与你的直接朋友交谈，不跟“陌生人”说话</p><p>合成复用原则：尽量先使用组合或者聚合等关联关系来实现，其次才考虑使用继承关系来实现</p><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p>Ensure a class has only one instance, and provide a global point of access to it.</p><p>确保一个类只有一个实例，而且自行实例化并向整个系统提供这个实例</p><h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1><hr><p>作用</p><ul><li><strong>实现了创建者和调用者分离</strong></li><li>详细分类：<ul><li>简单工厂模式</li><li>工厂方法模式</li><li>抽象工厂模式</li></ul></li></ul><hr><p>OOP七大原则</p><ul><li>开闭原则：对扩展开放，对修改关闭</li><li>依赖倒置原则：要面向接口编程，不要面向实现编程</li><li>迪米特法则：只与你的直接朋友交谈，不跟“陌生人”说话</li></ul><hr><p>核心本质：</p><ul><li>实例化对象不适用new，用工厂方法代替</li><li>将选择实现类，创建对象统一管理和控制。从而将调用者跟我们的实现类解耦。</li></ul><p>三种模式：</p><ul><li>简单工厂模式<ul><li>用来生产同一等级结构中的任意产品（对于增加新的产品，需要扩展已有代码）</li></ul></li><li>工厂方法模式<ul><li>用来生产同一等级结构中的固定产品（支持增加任意产品）</li></ul></li><li>抽象工厂模式<ul><li>围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂</li></ul></li></ul><hr><h2 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Car</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WuLing</span> <span class="keyword">implements</span> <span class="title class_">Car</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"五菱宏光"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tesla</span> <span class="keyword">implements</span> <span class="title class_">Car</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"特斯拉"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dazhong</span> <span class="keyword">implements</span> <span class="title class_">Car</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"大众"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态工厂模式（简单工厂模式）</span></span><br><span class="line"><span class="comment">// 弊端：增加一个新的产品，如果不修改代码，做不到！</span></span><br><span class="line"><span class="comment">// 开闭原则</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CarFactory</span> {</span><br><span class="line">    <span class="comment">// 方法一</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title function_">getCar</span><span class="params">(String car)</span>{</span><br><span class="line">        <span class="keyword">if</span>(car.equals(<span class="string">"五菱"</span>)){</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WuLing</span>();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (car.equals(<span class="string">"特斯拉"</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Tesla</span>();</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 方法二</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title function_">getWuLing</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WuLing</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Constumer</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//接口，所有的实现类</span></span><br><span class="line"><span class="comment">//        Car car = new WuLing();</span></span><br><span class="line"><span class="comment">//        Car car2 = new Tesla();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、使用工厂创建</span></span><br><span class="line">        <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> CarFactory.getCar(<span class="string">"五菱"</span>);</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car2</span> <span class="operator">=</span> CarFactory.getCar(<span class="string">"特斯拉"</span>);</span><br><span class="line"></span><br><span class="line">        car.name();</span><br><span class="line">        car2.name();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><h2 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Car</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WuLing</span> <span class="keyword">implements</span> <span class="title class_">Car</span> {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"五菱宏光"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tesla</span> <span class="keyword">implements</span> <span class="title class_">Car</span> {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"特斯拉"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MoBai</span> <span class="keyword">implements</span> <span class="title class_">Car</span> {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">name</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"摩拜单车"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工厂方法模式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CarFactory</span> {</span><br><span class="line">    Car <span class="title function_">getCar</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WuLingFactory</span> <span class="keyword">implements</span> <span class="title class_">CarFactory</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WuLing</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeslaFactory</span> <span class="keyword">implements</span> <span class="title class_">CarFactory</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Tesla</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MoBaiFactory</span> <span class="keyword">implements</span> <span class="title class_">CarFactory</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MoBai</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UML.factory.simple.CarFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Constumer</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WuLingFactory</span>().getCar();</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TeslaFactory</span>().getCar();</span><br><span class="line">        <span class="type">Car</span> <span class="variable">car3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MoBaiFactory</span>().getCar();</span><br><span class="line"></span><br><span class="line">        car.name();</span><br><span class="line">        car2.name();</span><br><span class="line">        car3.name();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 结构复杂度：   simple</span></span><br><span class="line">    <span class="comment">// 代码复杂度：   simple</span></span><br><span class="line">    <span class="comment">// 编程复杂度：   simple</span></span><br><span class="line">    <span class="comment">// 管理上的复杂度：simple</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据设计原则：工厂方法模式</span></span><br><span class="line">    <span class="comment">// 根据实际业务：简单工厂模式</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><p>小结：</p><ul><li>简单工厂模式（静态工厂模式）<ul><li>虽然某种程度上不符合设计原则，但实际使用最多！</li></ul></li><li>工厂方法模式<ul><li>不修改已有类的前提下，通过增加新的工厂类实现扩展</li></ul></li><li>抽象工厂模式<ul><li>不可以增加产品，可以增加产品族！</li></ul></li></ul><hr><p>应用场景：</p><ul><li>JDK中Calendar的getlnstance方法</li><li>JDBC中的Connection对象的获取</li><li>Spring中IOC容器创建管理bean对象</li><li>反射中Class对象的newlnstance方法</li></ul><h1 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h1><p>定义：抽象工厂模式提供了一个创建一系列相关或者相互依赖对象的接口，无需指定它们具体的类</p><p>适用场景：</p><ul><li><p>客户端（应用层）不依赖产品类实例如何被创建、实现等细节</p></li><li><p>强调一系列相关的产品对象（属于同一产品族）一起使用创建对象需要大量的重复代码</p></li><li><p>提供一个产品类的库，所有的产品以同样的接口出现，从而使得客户端不依赖于具体的实现</p></li></ul><p><img src="https://s1.ax1x.com/2022/11/06/xjJUpt.md.jpg" alt="UML类图"></p><p><img src="https://s1.ax1x.com/2022/11/06/xjJ5BF.md.jpg" alt="抽象工厂"></p><p>  所有同一产品族里的东西都是由一个工厂生产的，但位于不同的等级结构</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手机品牌接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IphoneProduct</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">callup</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sendSMS</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由器产品接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IRouterProduct</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">openwifi</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setting</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象产品工厂</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IProductFactory</span> {</span><br><span class="line">    <span class="comment">// 生产手机</span></span><br><span class="line">    IphoneProduct <span class="title function_">iphoneProduct</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产路由器</span></span><br><span class="line">    IRouterProduct <span class="title function_">irouterProduct</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 小米手机</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XiaomiPhone</span> <span class="keyword">implements</span> <span class="title class_">IphoneProduct</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"开启小米手机"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"关闭小米手机"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callup</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"小米打电话"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendSMS</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"小米发短信"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XiaomiRouter</span> <span class="keyword">implements</span> <span class="title class_">IRouterProduct</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"启动小米路由器"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"关闭小米路由器"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">openwifi</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"打开小米WIFI"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setting</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"小米设置"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 华为手机</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuaweiPhone</span> <span class="keyword">implements</span> <span class="title class_">IphoneProduct</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"开启华为手机"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"关闭华为手机"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callup</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"华为打电话"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendSMS</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"华为发短信"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuaweiRouter</span> <span class="keyword">implements</span> <span class="title class_">IRouterProduct</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"启动华为路由器"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"关闭华为路由器"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">openwifi</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"打开华为WIFI"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setting</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"华为设置"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XiaomiFactory</span> <span class="keyword">implements</span> <span class="title class_">IProductFactory</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IphoneProduct <span class="title function_">iphoneProduct</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">XiaomiPhone</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IRouterProduct <span class="title function_">irouterProduct</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">XiaomiRouter</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HuaweiFactory</span> <span class="keyword">implements</span> <span class="title class_">IProductFactory</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IphoneProduct <span class="title function_">iphoneProduct</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HuaweiPhone</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IRouterProduct <span class="title function_">irouterProduct</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HuaweiRouter</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.factory.abstract1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"=============小米系列产品============="</span>);</span><br><span class="line">        <span class="comment">// 小米工厂</span></span><br><span class="line">        <span class="type">XiaomiFactory</span> <span class="variable">xiaomiFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XiaomiFactory</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">IphoneProduct</span> <span class="variable">iphoneProduct</span> <span class="operator">=</span> xiaomiFactory.iphoneProduct();</span><br><span class="line">        iphoneProduct.callup();</span><br><span class="line">        iphoneProduct.sendSMS();</span><br><span class="line"></span><br><span class="line">        <span class="type">IRouterProduct</span> <span class="variable">xiaomiProduct</span> <span class="operator">=</span> xiaomiFactory.irouterProduct();</span><br><span class="line">        xiaomiProduct.openwifi();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"=============华为系列产品============="</span>);</span><br><span class="line">        <span class="comment">// 华为工厂</span></span><br><span class="line">        <span class="type">HuaweiFactory</span> <span class="variable">huaweiFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HuaweiFactory</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">IphoneProduct</span> <span class="variable">iphoneProduct1</span> <span class="operator">=</span> huaweiFactory.iphoneProduct();</span><br><span class="line">        iphoneProduct1.callup();</span><br><span class="line">        iphoneProduct1.sendSMS();</span><br><span class="line"></span><br><span class="line">        <span class="type">IRouterProduct</span> <span class="variable">huaweiProduct</span> <span class="operator">=</span> huaweiFactory.irouterProduct();</span><br><span class="line">        huaweiProduct.openwifi();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h1><h2 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a>结构型模式</h2><p>作用：</p><ul><li>从程序结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题</li></ul><p>分类：</p><ul><li>适配器模式</li><li>代理模式</li><li>桥接模式</li><li>装饰模式</li><li>组合模式</li><li>外观模式</li><li>享元模式</li></ul><hr><h2 id="适配器模式-1"><a href="#适配器模式-1" class="headerlink" title="适配器模式"></a>适配器模式</h2><p>类比：</p><ul><li><img src="https://s1.ax1x.com/2022/10/10/xY7RAA.md.jpg" alt="类比"></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">//要被适配的类：网线</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Adaptee</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">request</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"连接网线上网"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口转换器的抽象实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Net2Usb</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 作用：处理请求，网线=&gt;usb</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRequest</span><span class="params">()</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.adapter;</span><br><span class="line"><span class="comment">// 1、继承（类适配器，单继承）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 真正的适配器，需要连接USB，连接网线</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Adapter</span> <span class="keyword">extends</span> <span class="title class_">Adaptee</span> <span class="keyword">implements</span> <span class="title class_">Net2Usb</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRequest</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>.request(); <span class="comment">// 可以上网了</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、组合（对象适配器，常用）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 真正的适配器，需要连接USB，连接网线</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Adapter2</span> <span class="keyword">implements</span> <span class="title class_">Net2Usb</span>{</span><br><span class="line">    <span class="keyword">private</span> Adaptee adaptee;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Adapter2</span><span class="params">(Adaptee adaptee)</span> {</span><br><span class="line">        <span class="built_in">this</span>.adaptee = adaptee;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRequest</span><span class="params">()</span> {</span><br><span class="line">        adaptee.request(); <span class="comment">// 可以上网了</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.adapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端类：想上网，插不上网线</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Computer</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 我们的电脑需要连接上转接器才能上网</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">net</span><span class="params">(Net2Usb adapter)</span>{</span><br><span class="line">        <span class="comment">// 上网的具体实现，找一个转接头</span></span><br><span class="line">        adapter.handleRequest();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 电脑、适配器、网线</span></span><br><span class="line">        <span class="type">Computer</span> <span class="variable">computer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>(); <span class="comment">// 电脑</span></span><br><span class="line">        <span class="type">Adaptee</span> <span class="variable">adaptee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Adaptee</span>();    <span class="comment">// 网线</span></span><br><span class="line">        <span class="type">Adapter</span> <span class="variable">adapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Adapter</span>();    <span class="comment">// 转接器(类似无线网卡，本身自带上网功能)</span></span><br><span class="line">        <span class="type">Adapter2</span> <span class="variable">adapter2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Adapter2</span>(adaptee);    <span class="comment">// 转接器（需插入网线）</span></span><br><span class="line"></span><br><span class="line">        computer.net(adapter);</span><br><span class="line">        computer.net(adapter2);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><p>将一个类的接口转换为客户希望的另一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作！</p><p>角色分析：</p><ul><li>目标接口：客户所期待的接口，目标可以是具体的或抽象的类，也可以是接口</li><li>需要适配的类：需要适配的类或适配者类</li><li>适配器：通过包装一个需要适配的对象，把原接口转换成目标对象！</li></ul><p><img src="https://s1.ax1x.com/2022/10/10/xYOcFJ.md.jpg" alt="分析"></p><hr><p>对象适配器优点：</p><ul><li>一个对象适配器可以把多个不同的适配者适配到同一个目标</li><li>可以适配一个适配者的子类，由于适配器和适配者之间是关联关系，根据“里氏代换原则”适配者的子类也可以通过该适配器进行适配</li></ul><p>类适配器的缺点：</p><ul><li>对于Java、C#等不支持多继承的语言，一次最多只能适配一个适配者类，不能同时适配多个适配者；</li><li>在Java、C#等语言中，类适配器模式中的目标抽象类只能为接口，不能为类，其使用有一定的局限性</li></ul><p>适用场景：</p><ul><li>系统需要使用一些现有的类，而这些类的接口（如方法名）不符合系统的需要，甚至没有这些类的源代码</li><li>想创建一个可以重复使用的类，用于一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作。</li></ul><h1 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h1><h2 id="桥接模式bridge"><a href="#桥接模式bridge" class="headerlink" title="桥接模式bridge"></a>桥接模式bridge</h2><p>桥接模式是将<font color="red">抽象部分</font>与<font color="red">实现部分</font>分离，使他们都可以独立地变化。它是一种对象结构模式，又称为柄体(Handle and Body)模式或接口(Interface)模式</p><ul><li><p><img src="https://s1.ax1x.com/2022/10/10/xYcCi4.jpg" alt="举例"></p></li><li><p>多继承：台式电脑继承电脑，联想台式继承台式电脑……（以此类推）</p><ul><li>当我需要增加一个品牌或设备时，要增加至少三个类（例如增加“华为品牌”则需增加“华为台式”、“华为笔记本”、“华为平板”；或增加“一体机电脑”则需增加“联想一体机”、“苹果一体机”、“戴尔一体机”）</li><li>违反了单一职责原则：例如“联想台式”这个类中既有品牌“联想”又有类型“台式”</li></ul></li></ul><hr><ul><li><p>分析：在以上场景中有两个变化的维度：品牌、类型</p></li><li><p><img src="https://s1.ax1x.com/2022/10/10/xYglAU.md.jpg" alt="分析"></p></li><li><p>现在我们将“类型”与“品牌”独立出来，想办法通过一个“桥”把“类型”和“品牌”连接起来，使得在“类型”的内部可以去引用“品牌”从而实现功能组合（可以理解为当我们买到一台电脑时这台电脑肯定是有一个“品牌的”）</p></li><li>采用这种设计方案会使得系统中的类的个数会大大减少，并且系统扩展更加方便</li><li>桥接模式将继承关系转换为关联关系，从而降低了类与类之间的耦合</li><li><img src="https://s1.ax1x.com/2022/10/10/xY4cvQ.md.jpg" alt="桥接"></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 品牌</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Brand</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">Brand</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        System.out.print(<span class="string">"苹果"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Lenovo</span> <span class="keyword">implements</span> <span class="title class_">Brand</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        System.out.print(<span class="string">"联想"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dell</span> <span class="keyword">implements</span> <span class="title class_">Brand</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        System.out.print(<span class="string">"戴尔"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.bridge;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象的电脑类型</span></span><br><span class="line"><span class="comment">// 这里不用接口，因为电脑出厂自带品牌，要将品牌和电脑组合起来，而不要去继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Computer</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 组合，品牌 —— 桥</span></span><br><span class="line">    <span class="keyword">private</span> Brand brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Computer</span><span class="params">(Brand brand)</span> {</span><br><span class="line">        <span class="built_in">this</span>.brand = brand;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span>{</span><br><span class="line">        brand.info();<span class="comment">// 自带品牌</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Desktop</span> <span class="keyword">extends</span> <span class="title class_">Computer</span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Desktop</span><span class="params">(Brand brand)</span> {</span><br><span class="line">        <span class="built_in">super</span>(brand);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"台式机"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Laptop</span> <span class="keyword">extends</span> <span class="title class_">Computer</span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Laptop</span><span class="params">(Brand brand)</span> {</span><br><span class="line">        <span class="built_in">super</span>(brand);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"笔记本"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tablet</span> <span class="keyword">extends</span> <span class="title class_">Computer</span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Tablet</span><span class="params">(Brand brand)</span> {</span><br><span class="line">        <span class="built_in">super</span>(brand);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>.info();</span><br><span class="line">        System.out.println(<span class="string">"平板电脑"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UML.bridge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 苹果笔记本</span></span><br><span class="line">        <span class="type">Computer</span> <span class="variable">computer1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Laptop</span>(<span class="keyword">new</span> <span class="title class_">Apple</span>());</span><br><span class="line">        computer1.info();</span><br><span class="line">        <span class="comment">// 联想笔记本</span></span><br><span class="line">        <span class="type">Computer</span> <span class="variable">computer2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Desktop</span>(<span class="keyword">new</span> <span class="title class_">Lenovo</span>());</span><br><span class="line">        computer2.info();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s1.ax1x.com/2022/10/10/xYoObj.png" alt="类图"></p><hr><p>好处分析：</p><ul><li>桥接模式偶尔类似于多继承方案，但多继承方案违背了<font color="red">类的单一职责原则</font>，复用性比较差，类的个数也非常多，桥接模式是比多继承方案更好的解决方法。极大地减少了子类的个数，从而降低管理和维护的成本。</li><li>桥接模式提高了系统的可扩充性，在两个变化维度中任意扩展一个维度，都不需要修改原有系统。符合<font color="red">开闭原则</font>，就像一座桥，可以把两个变化的维度连接起来！</li></ul><p>劣势分析：</p><ul><li>桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者对抽象进行设计和编程。</li><li>桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性。(耦合性过强时无法使用)</li></ul><hr><p>最佳实践：</p><ul><li>如果一个系统需要在构建抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在抽象层建立一个关联关系。抽象化角色和实现化角色可以以继承的方式独立扩展互不影响，在程序运行时可以动态将一个抽象化子类的对象和一个实现化子类的对象进行组合，即系统需要对抽象化角色和实现化角色进行动态耦合、</li><li>一个类存在两个独立变化的维度，且这两个维度都需要扩展</li><li>虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要独立管理这两者。对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习</title>
      <link href="/archives/238675c9.html"/>
      <url>/archives/238675c9.html</url>
      
        <content type="html"><![CDATA[<p>HTML + CSS + JavaScript</p><p>结构 + 表现 + 交互</p><h1 id="1、什么是CSS"><a href="#1、什么是CSS" class="headerlink" title="1、什么是CSS"></a>1、什么是CSS</h1><p>如何学习？</p><p>​    1、CSS是什么？</p><p>​    2、CSS怎么用（快速入门）</p><p>​    3、CSS选择器（重点 + 难点）</p><p>​    4、美化网页（文字，阴影，超链接，列表，渐变…）</p><p>​    5、盒子模型</p><p>​    6、浮动</p><p>​    7、定位</p><p>​    8、网页动画（特效）</p><p>​    9、学习网站：菜鸟教程、W3C</p><h2 id="1-1、什么是CSS"><a href="#1-1、什么是CSS" class="headerlink" title="1.1、什么是CSS"></a>1.1、什么是CSS</h2><p>Cascading Style Sheet 层叠级联样式表</p><p>CSS：表现（美化网页）</p><p>字体、颜色、边距、高度、宽度、背景图片、网页定位、网页浮动…</p><p><img src="https://s1.ax1x.com/2022/10/03/xQFrJs.md.jpg" alt="什么是CSS"></p><h2 id="1-2、发展史"><a href="#1-2、发展史" class="headerlink" title="1.2、发展史"></a>1.2、发展史</h2><p>CSS1.0</p><p>CSS2.0    DIV （块）+ CSS，HTML与CSS结构分离的思想，网页变得简单，SEO</p><p>CSS2.1    浮动，定位</p><p>CSS3.0    圆角，阴影，动画……    浏览器兼容性~</p><h2 id="1-3、快速入门"><a href="#1-3、快速入门" class="headerlink" title="1.3、快速入门"></a>1.3、快速入门</h2><p>style</p><p><strong>基本入门</strong></p><p>HTML与CSS未分离：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--规范 &lt;style&gt; 可以编写CSS的代码，每一个声明最好使用分号结尾</span></span><br><span class="line"><span class="comment">语法：</span></span><br><span class="line"><span class="comment">    选择器{</span></span><br><span class="line"><span class="comment">      声明1；</span></span><br><span class="line"><span class="comment">      声明2；</span></span><br><span class="line"><span class="comment">      声明3；</span></span><br><span class="line"><span class="comment">    }</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>{</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>HTML与CSS分离（<font color="red"><strong>建议使用这种规范</strong></font>）：</p><p><img src="https://s1.ax1x.com/2022/10/03/xQkL3n.jpg" alt="HTML与CSS分离"></p><p><strong>css的优势：</strong></p><p>​    1、内容和表现分离</p><p>​    2、网页结构表现统一，可以实现复用</p><p>​    3、样式十分丰富</p><p>​    4、建议使用独立于html的css文件</p><p>​    5、利用SEO，容易被搜索引擎收录！</p><h2 id="1-4、css的三种导入方式"><a href="#1-4、css的三种导入方式" class="headerlink" title="1.4、css的三种导入方式"></a>1.4、css的三种导入方式</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--内部样式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--外部样式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--优先级：就近原则 行内样式最大，内部样式和外部样式谁靠前就是谁--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--行内样式：在标签元素中，编写一个style属性，编写样式即可--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"color: red"</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*外部样式*/</span></span><br><span class="line"><span class="selector-tag">h1</span>{</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>拓展：外部样式的两种写法</p><ul><li><p>链接式</p><p>html</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--外部样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>导入式</p><p>@import 是 CSS2.1特有的！</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@import</span> url(css/style.css);</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="2、选择器"><a href="#2、选择器" class="headerlink" title="2、选择器"></a>2、选择器</h1><blockquote><p>作用：选择页面上的某一个或者某一类元素</p></blockquote><h2 id="2-1、基本选择器"><a href="#2-1、基本选择器" class="headerlink" title="2.1、基本选择器"></a>2.1、基本选择器</h2><h3 id="1、标签选择器："><a href="#1、标签选择器：" class="headerlink" title="1、标签选择器："></a>1、标签选择器：</h3><p> 选择一类标签 标签{}</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*标签选择器，会选择到页面上所有的这个标签的元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#1a4572</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span>{</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学Java<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学Java<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>听Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2、类选择器-class："><a href="#2、类选择器-class：" class="headerlink" title="2、类选择器 class："></a>2、类选择器 class：</h3><p>选择所有class属性一致的标签，跨标签    .class{}</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*类选择器的格式   .class的名称{}</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    好处：可以多个标签归类，是同一个class，可以复用</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.feilong</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#8d5151</span>;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.qianlong</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: purple;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"feilong"</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"qianlong"</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>  <span class="attr">class</span>=<span class="string">"feilong"</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"qianlong"</span>&gt;</span>P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3、Id选择器："><a href="#3、Id选择器：" class="headerlink" title="3、Id选择器："></a>3、Id选择器：</h3><p>全局唯一！ #id{}</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*id选择器 ：id必须保证全局唯一！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      #id名称{}</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      不遵循就近原则，固定的</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      id选择器 &gt; class选择器 &gt; 标签选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">    */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#feilong</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.style1</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span>{</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">    }</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"feilong"</span> <span class="attr">class</span>=<span class="string">"style1"</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"style1"</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"style1"</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题4<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题5<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><font color="red"><strong>优先级：</strong></font>id &gt; class &gt; 标签</p><h2 id="2-2、层次选择器"><a href="#2-2、层次选择器" class="headerlink" title="2.2、层次选择器"></a>2.2、层次选择器</h2><p><img src="https://s1.ax1x.com/2022/10/21/xcV89P.md.png" alt="结构"></p><h3 id="1、后代选择器："><a href="#1、后代选择器：" class="headerlink" title="1、后代选择器："></a>1、后代选择器：</h3><p>在某个元素的后面，祖爷爷，爷爷，爸爸，你</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 后代选择器 */</span></span><br><span class="line">  <span class="selector-tag">body</span> <span class="selector-tag">p</span>{</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><h3 id="2、子选择器"><a href="#2、子选择器" class="headerlink" title="2、子选择器"></a>2、子选择器</h3><p>只有一代，儿子</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 子选择器 */</span></span><br><span class="line">  <span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>{</span><br><span class="line">    <span class="attribute">background</span>: cornflowerblue;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><h3 id="3、相邻兄弟选择器"><a href="#3、相邻兄弟选择器" class="headerlink" title="3、相邻兄弟选择器"></a>3、相邻兄弟选择器</h3><p>同辈（弟弟选择器）</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 相邻兄弟选择器，只有一个，相邻（向下） */</span></span><br><span class="line">  <span class="selector-class">.active</span>+<span class="selector-tag">p</span>{</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#1a4572</span>;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><h3 id="4、通用选择器"><a href="#4、通用选择器" class="headerlink" title="4、通用选择器"></a>4、通用选择器</h3><p>（所有弟弟选择器）</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 通用兄弟选择器，当前选中元素的向下所有兄弟元素 */</span></span><br><span class="line">  <span class="selector-class">.active</span>~<span class="selector-tag">p</span>{</span><br><span class="line">    <span class="attribute">background</span>: blue;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang="en"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset="UTF-<span class="number">8</span>"&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    <span class="comment">/*p{*/</span></span><br><span class="line">    <span class="comment">/*  background: green;*/</span></span><br><span class="line">    <span class="comment">/*}*/</span></span><br><span class="line">  <span class="comment">/* 后代选择器 */</span></span><br><span class="line">  <span class="comment">/*  body p{*/</span></span><br><span class="line">  <span class="comment">/*    background: red;*/</span></span><br><span class="line">  <span class="comment">/*  }*/</span></span><br><span class="line">  <span class="comment">/* 子选择器 */</span></span><br><span class="line">  <span class="comment">/*  body&gt;p{*/</span></span><br><span class="line">  <span class="comment">/*    background: cornflowerblue;*/</span></span><br><span class="line">  <span class="comment">/*  }*/</span></span><br><span class="line">  <span class="comment">/* 相邻兄弟选择器，只有一个，相邻（向下） */</span></span><br><span class="line">  <span class="comment">/*  .active+p{*/</span></span><br><span class="line">  <span class="comment">/*    background: #1a4572;*/</span></span><br><span class="line">  <span class="comment">/*  }*/</span></span><br><span class="line">  <span class="comment">/* 通用兄弟选择器，当前选中元素的向下所有兄弟元素 */</span></span><br><span class="line">    <span class="selector-class">.active</span>~<span class="selector-tag">p</span>{</span><br><span class="line">      <span class="attribute">background</span>: blue;</span><br><span class="line">    }</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p0&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class="active"&gt;p1&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p2&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p3&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;p4&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;p5&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;p6&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="2-3、结构伪类选择器"><a href="#2-3、结构伪类选择器" class="headerlink" title="2.3、结构伪类选择器"></a>2.3、结构<em>伪类选择器</em></h2><p>伪类</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang="en"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset="UTF-<span class="number">8</span>"&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;!-- 避免使用class,id选择器 --&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    <span class="comment">/*ul的第一个子元素*/</span></span><br><span class="line">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child{</span><br><span class="line">      <span class="attribute">background</span>: blue;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*ul的最后一个子元素*/</span></span><br><span class="line">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>{</span><br><span class="line">      <span class="attribute">background</span>: red;</span><br><span class="line">    }</span><br><span class="line">  <span class="comment">/* 选中p1：定位到父元素，选中当前的第一个元素</span></span><br><span class="line"><span class="comment">    选择当前p元素的父级元素，选中父级元素的第一个子元素，并且是当前元素</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>){</span><br><span class="line">      <span class="attribute">background</span>: green;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*选中父元素下的p元素的第二个p类型*/</span></span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>){</span><br><span class="line">      <span class="attribute">background</span>: yellow;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*a:hover{*/</span></span><br><span class="line">    <span class="comment">/*  background: black;*/</span></span><br><span class="line">    <span class="comment">/*}*/</span></span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;!--&lt;<span class="selector-tag">a</span> href="https://www.baidu.com<span class="string">"&gt;打开百度&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="string">&lt;!--&lt;h1&gt;h1&lt;/h1&gt;--&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;p1&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;p2&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;p3&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">  &lt;li&gt;li1&lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;li&gt;li2&lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;li&gt;li3&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s1.ax1x.com/2022/10/21/xcuCJs.jpg" alt="样式"></p><h2 id="2-4、属性选择器（重要、常用）"><a href="#2-4、属性选择器（重要、常用）" class="headerlink" title="2.4、属性选择器（重要、常用）"></a>2.4、属性选择器（<font color="red">重要、常用</font>）</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习</title>
      <link href="/archives/9b6eaec3.html"/>
      <url>/archives/9b6eaec3.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter01"><a href="#Chapter01" class="headerlink" title="Chapter01"></a>Chapter01</h1><h2 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML"></a>什么是HTML</h2><ul><li><p>HTML</p><ul><li><font color="red">H</font>yper <font color="red">T</font>ext <font color="red">M</font>arkup <font color="red">L</font>anguage（超文本<font color="red">标记语言</font>）</li><li>超文本包括：文字、图片、音频、视频、动画等</li></ul></li><li><p>目前使用HTML5 + CSS3</p></li></ul><h2 id="HTML5的优势"><a href="#HTML5的优势" class="headerlink" title="HTML5的优势"></a>HTML5的优势</h2><p>天然跨平台</p><h2 id="W3C标准"><a href="#W3C标准" class="headerlink" title="W3C标准"></a>W3C标准</h2><ul><li>W3C<ul><li>World Wide Web Consortium（万维网联盟）</li><li>成立于1994年，Web技术领域最权威和具影响力的国际<font color="red">中立性技术标准机构</font></li><li><a href="http://www.w3.org/">http://www.w3.org/</a></li><li><a href="http://www.chinaw3c.org/">http://www.chinaw3c.org/</a></li></ul></li><li>W3C标准包括：<ul><li><font color="red">结构</font>化标准语言(HTML、XML)</li><li><font color="red">表现</font>标准语言(CSS)</li><li><font color="red">行为</font>标准(DOM、ECMAScript)</li></ul></li></ul><h2 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h2><p><img src="https://s1.ax1x.com/2022/10/01/xKVtk4.md.jpg" alt="HTML基本结构"></p><p>body、/body等成对的标签，分别叫<font color="red">开放标签</font>和<font color="red">闭合标签</font></p><p>单独出现的叫<font color="red">自闭合标签</font></p><p>单独呈现的标签（空元素），如hr\;意为用/来关闭标签</p><h2 id="网页基本信息"><a href="#网页基本信息" class="headerlink" title="网页基本信息"></a>网页基本信息</h2><ul><li>DOCTYPE声明</li><li><p>\<title\>标签</title\></p></li><li><p>\<meta\>标签</meta\></p></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- DOCTYPE：告诉浏览器，我们要使用什么规范 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- head标签代表网页头部 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mata描述性标签，它用来描述我们的网站的一些信息 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mata标签一遍用来做SEO--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"狂神说Java，西部开源"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"来找个地方可以学习Java"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- title网页标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- body标签代表网页主体 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    我的第一个网页</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter02"><a href="#Chapter02" class="headerlink" title="Chapter02"></a>Chapter02</h1><h2 id="网页基本标签"><a href="#网页基本标签" class="headerlink" title="网页基本标签"></a>网页基本标签</h2><ul><li>标题标签</li><li>段落标签</li><li>换行标签</li><li>水平线标签</li><li>字体样式标签</li><li>注释和特殊符号</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>两只老虎两只老虎<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>跑得快跑得快<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一只没有耳朵<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一只没有尾巴<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>真奇怪真奇怪<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--水平线标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--换行标签--&gt;</span></span><br><span class="line">两只老虎两只老虎<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">跑得快跑得快<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">一只没有耳朵<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">一只没有尾巴<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">真奇怪真奇怪<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--粗体，斜体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>字体样式标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>粗体：<span class="tag">&lt;<span class="name">strong</span>&gt;</span>I love you<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>斜体：<span class="tag">&lt;<span class="name">em</span>&gt;</span>I love you<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--特殊符号--&gt;</span></span><br><span class="line"></span><br><span class="line">空     格<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">空<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>格</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;lt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span>版权所有聂千龙</span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">特殊符号记忆方式</span></span><br><span class="line"><span class="comment">&amp;开头</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><ul><li>常见的图像格式<ul><li>JPG</li><li>GIF</li><li>PNG</li><li>BMP</li></ul></li></ul><p><img src="https://s1.ax1x.com/2022/10/02/xMiMFA.md.jpg" alt="图片标签"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图像标签学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--img标签学习</span></span><br><span class="line"><span class="comment">src：图片地址（必填）</span></span><br><span class="line"><span class="comment">    相对地址（推荐使用），绝对地址</span></span><br><span class="line"><span class="comment">    ../ 上一级目录</span></span><br><span class="line"><span class="comment">alt：图片名字（必填）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../resources/image/128.png"</span> <span class="attr">alt</span>=<span class="string">"网站头像"</span> <span class="attr">title</span>=<span class="string">"悬停文字"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"300"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><p>a href=”path” target=”目标窗口位置”连接文本或图像/a</p><ul><li>文本超链接</li><li>图像超链接</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang="en"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset="UTF-8"&gt;</span><br><span class="line">    &lt;title&gt;链接标签学习&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--使用name作为标记--&gt;</span><br><span class="line">&lt;a id="top"&gt;顶部&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--a标签</span><br><span class="line">href：必填，表示要跳转到哪个界面</span><br><span class="line">target：表示窗口在哪里打开</span><br><span class="line">    _blank  在新标签页打开</span><br><span class="line">    _self   在自己的页面打开</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a href="1.我的第一个网页.html" target="_blank"&gt;点击我跳转到页面一&lt;/a&gt;</span><br><span class="line">&lt;a href="https://www.baidu.com" target="_self"&gt;点击我跳转到百度&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">    &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;&lt;p&gt;</span><br><span class="line">    &lt;a href="1.我的第一个网页.html"&gt;</span><br><span class="line">        &lt;img src="../resources/image/128.png" alt="网页头像" title="悬停文字" width="300" height="300"&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--锚链接</span><br><span class="line">1、需要一个锚标记</span><br><span class="line">2、跳转到标记</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a href="#top"&gt;回到顶部&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;a id="down"&gt;down&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--功能性链接</span><br><span class="line">邮件链接：mailto:</span><br><span class="line">QQ链接</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href="mailto:1355964897@qq.com"&gt;点击联系我&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="行内元素和块元素"><a href="#行内元素和块元素" class="headerlink" title="行内元素和块元素"></a>行内元素和块元素</h2><ul><li>块元素：<ul><li>无论内容多少，该元素独占一行</li><li>(p、h1-h6…)</li></ul></li><li>行内元素：<ul><li>内容撑开宽度，左右都是行内元素的可以排在一行</li><li>(a.strong、em…)</li></ul></li></ul><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>什么是列表<ul><li>列表就是信息资源的一种展现形式。它可以使信息结构化和条理化，并以列表的样式显示出来，一遍浏览者能更快捷地获得相应的信息</li></ul></li><li>列表的分类<ul><li>无序列表</li><li>有序列表</li><li>自定义列表</li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有序列表</span></span><br><span class="line"><span class="comment">应用范围：试卷，问答...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>运维<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>C/C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表</span></span><br><span class="line"><span class="comment">应用范围：导航，侧边栏...</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>运维<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>C/C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义列表</span></span><br><span class="line"><span class="comment">dl：标签</span></span><br><span class="line"><span class="comment">dt：列表名称</span></span><br><span class="line"><span class="comment">dd：列表内容</span></span><br><span class="line"><span class="comment">应用范围：公司网站底部</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Linux<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>C<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>位置<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>济源<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li>为什么使用表格<ul><li>简单通用</li><li>结构稳定</li></ul></li><li>基本结构<ul><li>单元格</li><li>行</li><li>列</li><li>跨行</li><li>跨列</li></ul></li></ul><h2 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h2><ul><li>视频元素<ul><li>video</li></ul></li><li>音频元素<ul><li>audio</li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>媒体元素学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--音频和视频</span></span><br><span class="line"><span class="comment">src：资源路径</span></span><br><span class="line"><span class="comment">controls：控制条</span></span><br><span class="line"><span class="comment">autoplay：自动播放</span></span><br><span class="line"><span class="comment">高版本浏览器会禁止自动播放，在src前加上muted</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">muted</span> <span class="attr">src</span>=<span class="string">"../resources/video/EasyOnMe.mp4"</span> <span class="attr">controls</span> <span class="attr">width</span>=<span class="string">"1200"</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">muted</span> <span class="attr">src</span>=<span class="string">"../resources/audio/水中花.mp3"</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter03"><a href="#Chapter03" class="headerlink" title="Chapter03"></a>Chapter03</h1><h2 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h2><p><img src="https://s1.ax1x.com/2022/10/02/xMZ2TO.md.jpg" alt="页面结构分析"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面结构分析<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页主体<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>网页脚部<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h2><p>iframe src=”path”（引用页面地址）name=”mainFrame”（框架识别名）/iframe</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>iframe内联框架学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--iframe 内联框架</span></span><br><span class="line"><span class="comment">src：地址</span></span><br><span class="line"><span class="comment">w-h：宽度高度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://www.4399.com"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"1000px"</span> <span class="attr">height</span>=<span class="string">"800px"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"hello"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"1000px"</span> <span class="attr">height</span>=<span class="string">"800px"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.nieqianlong.cn"</span> <span class="attr">target</span>=<span class="string">"hello"</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=976113810&amp;bvid=BV1y44y1x7g7&amp;cid=425292595&amp;page=1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span> <span class="attr">width</span>=<span class="string">"1000"</span> <span class="attr">height</span>=<span class="string">"600"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="表单语法"><a href="#表单语法" class="headerlink" title="表单语法"></a>表单语法</h2><p><img src="https://s1.ax1x.com/2022/10/02/xMJRKO.md.jpg" alt="表单语法"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">action：表单提交的位置，可以使网站，也可以是一个请求处理地址</span></span><br><span class="line"><span class="comment">method：post，get 提交方式</span></span><br><span class="line"><span class="comment">get方式提交：我们可以在url中看见我们提交的信息，不安全，高效</span></span><br><span class="line"><span class="comment">post：比较安全，传输大文件</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"1.我的第一个网页.html"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文本输入框：input type="text"  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框：input type="password" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="表单元素格式"><a href="#表单元素格式" class="headerlink" title="表单元素格式"></a>表单元素格式</h2><p><img src="https://s1.ax1x.com/2022/10/02/xMJ68x.md.jpg" alt="表单元素格式"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">action：表单提交的位置，可以使网站，也可以是一个请求处理地址</span></span><br><span class="line"><span class="comment">method：post，get 提交方式</span></span><br><span class="line"><span class="comment">get方式提交：我们可以在url中看见我们提交的信息，不安全，高效</span></span><br><span class="line"><span class="comment">post：比较安全，传输大文件</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"1.我的第一个网页.html"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文本输入框：input type="text"</span></span><br><span class="line"><span class="comment">  value：默认初始值</span></span><br><span class="line"><span class="comment">  maxlength：最长能写几个字符</span></span><br><span class="line"><span class="comment">  size：文本框的长度</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"肥龙好帅"</span> <span class="attr">maxlength</span>=<span class="string">"8"</span> <span class="attr">size</span>=<span class="string">"30"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框：input type="password" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">input type="radio"</span></span><br><span class="line"><span class="comment">value：单选框的值</span></span><br><span class="line"><span class="comment">name：表示组</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"boy"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">checked</span>/&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"girl"</span> <span class="attr">name</span>=<span class="string">"gender"</span>/&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--多选框</span></span><br><span class="line"><span class="comment">input type="checkbox"</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>爱好：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"sleep"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>睡觉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"code"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">checked</span>&gt;</span>敲代码</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"chat"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>聊天</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"game"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>游戏</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--按钮</span></span><br><span class="line"><span class="comment">input type="button" 普通按钮</span></span><br><span class="line"><span class="comment">input type="image"  图像按钮</span></span><br><span class="line"><span class="comment">input type="submit" 提交按钮</span></span><br><span class="line"><span class="comment">input type="reset"  重置按钮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>按钮</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"点击变长"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"../resources/image/128.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--下拉框，列表框</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"列表名称"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"china"</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"american"</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"swiss"</span> <span class="attr">selected</span>&gt;</span>瑞士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"india"</span>&gt;</span>印度<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文本域</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>反馈：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"textarea"</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--文件域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"files"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"上传"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--邮件验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--URL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URL：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>商品数量：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"num"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">step</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--滑块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>滑块：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">"voice"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">step</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--搜索框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空表单"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="表单的应用"><a href="#表单的应用" class="headerlink" title="表单的应用"></a>表单的应用</h2><ul><li>隐藏域 hidden</li><li>只读 readonly</li><li>禁用 disabled</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">action：表单提交的位置，可以使网站，也可以是一个请求处理地址</span></span><br><span class="line"><span class="comment">method：post，get 提交方式</span></span><br><span class="line"><span class="comment">get方式提交：我们可以在url中看见我们提交的信息，不安全，高效</span></span><br><span class="line"><span class="comment">post：比较安全，传输大文件</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"1.我的第一个网页.html"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文本输入框：input type="text"</span></span><br><span class="line"><span class="comment">  value：默认初始值</span></span><br><span class="line"><span class="comment">  maxlength：最长能写几个字符</span></span><br><span class="line"><span class="comment">  size：文本框的长度</span></span><br><span class="line"><span class="comment">  readonly：只读</span></span><br><span class="line"><span class="comment">  hidden:隐藏</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"肥龙好帅"</span> <span class="attr">maxlength</span>=<span class="string">"8"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">readonly</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框：input type="password" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> <span class="attr">hidden</span> <span class="attr">value</span>=<span class="string">"123456"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">input type="radio"</span></span><br><span class="line"><span class="comment">value：单选框的值</span></span><br><span class="line"><span class="comment">name：表示组</span></span><br><span class="line"><span class="comment">checked：预选</span></span><br><span class="line"><span class="comment">disabled：禁用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"boy"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">checked</span>/&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"girl"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">disabled</span>/&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--多选框</span></span><br><span class="line"><span class="comment">input type="checkbox"</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>爱好：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"sleep"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>睡觉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"code"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">checked</span>&gt;</span>敲代码</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"chat"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>聊天</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"game"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>游戏</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--按钮</span></span><br><span class="line"><span class="comment">input type="button" 普通按钮</span></span><br><span class="line"><span class="comment">input type="image"  图像按钮</span></span><br><span class="line"><span class="comment">input type="submit" 提交按钮</span></span><br><span class="line"><span class="comment">input type="reset"  重置按钮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>按钮</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"点击变长"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"../resources/image/128.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--下拉框，列表框</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"列表名称"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"china"</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"american"</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"swiss"</span> <span class="attr">selected</span>&gt;</span>瑞士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"india"</span>&gt;</span>印度<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文本域</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>反馈：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"textarea"</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--文件域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"files"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"上传"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--邮件验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--URL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URL：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>商品数量：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"num"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">step</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--滑块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>滑块：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">"voice"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">step</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--搜索框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--增强鼠标可用性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mark"</span>&gt;</span>你点我试试<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空表单"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="表单的初级验证"><a href="#表单的初级验证" class="headerlink" title="表单的初级验证"></a>表单的初级验证</h2><ul><li>思考？为什么要进行表单验证<ul><li>减轻服务器压力</li><li>增强数据安全性</li></ul></li><li>常用方式<ul><li>placeholder    提示信息</li><li>required         非空判断</li><li>pattern           正则表达式</li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表单form</span></span><br><span class="line"><span class="comment">action：表单提交的位置，可以使网站，也可以是一个请求处理地址</span></span><br><span class="line"><span class="comment">method：post，get 提交方式</span></span><br><span class="line"><span class="comment">get方式提交：我们可以在url中看见我们提交的信息，不安全，高效</span></span><br><span class="line"><span class="comment">post：比较安全，传输大文件</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"1.我的第一个网页.html"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文本输入框：input type="text"</span></span><br><span class="line"><span class="comment">  value：默认初始值</span></span><br><span class="line"><span class="comment">  maxlength：最长能写几个字符</span></span><br><span class="line"><span class="comment">  size：文本框的长度</span></span><br><span class="line"><span class="comment">  readonly：只读</span></span><br><span class="line"><span class="comment">  hidden:隐藏</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框：input type="password" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--单选框标签</span></span><br><span class="line"><span class="comment">input type="radio"</span></span><br><span class="line"><span class="comment">value：单选框的值</span></span><br><span class="line"><span class="comment">name：表示组</span></span><br><span class="line"><span class="comment">checked：预选</span></span><br><span class="line"><span class="comment">disabled：禁用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"boy"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">checked</span>/&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"girl"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">disabled</span>/&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--多选框</span></span><br><span class="line"><span class="comment">input type="checkbox"</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>爱好：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"sleep"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>睡觉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"code"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">checked</span>&gt;</span>敲代码</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"chat"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>聊天</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"game"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span>游戏</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--按钮</span></span><br><span class="line"><span class="comment">input type="button" 普通按钮</span></span><br><span class="line"><span class="comment">input type="image"  图像按钮</span></span><br><span class="line"><span class="comment">input type="submit" 提交按钮</span></span><br><span class="line"><span class="comment">input type="reset"  重置按钮</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>按钮</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"点击变长"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"../resources/image/128.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--下拉框，列表框</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉框</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"列表名称"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"china"</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"american"</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"swiss"</span> <span class="attr">selected</span>&gt;</span>瑞士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"india"</span>&gt;</span>印度<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文本域</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>反馈：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"textarea"</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--文件域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"files"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"上传"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--邮件验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--URL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>URL：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>商品数量：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"num"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">step</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--滑块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>滑块：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">"voice"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">step</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--搜索框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--增强鼠标可用性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mark"</span>&gt;</span>你点我试试<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"mark"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>自定义邮箱：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"diymail"</span> <span class="attr">pattern</span>=<span class="string">"^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空表单"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="HTML总结"><a href="#HTML总结" class="headerlink" title="HTML总结"></a>HTML总结</h1><p><a href="https://www.mubucm.com/doc/zEgGC3CZ43">点击跳转HTML总结</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络工程实践学习</title>
      <link href="/archives/6d205a87.html"/>
      <url>/archives/6d205a87.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验二：交换机的配置与使用"><a href="#实验二：交换机的配置与使用" class="headerlink" title="实验二：交换机的配置与使用"></a>实验二：交换机的配置与使用</h1><h2 id="实验简介："><a href="#实验简介：" class="headerlink" title="实验简介："></a>实验简介：</h2><ul><li>实验目的：<ul><li>掌握思科交换机的基本配置；</li></ul></li><li>实验内容：<ul><li>组建小型的局域网络；</li><li>掌握交换机的基本操作指令；</li><li>生成树STP的工作原理及应用；</li><li>交换机之间的链路汇聚。</li></ul></li></ul><h2 id="实验内容一："><a href="#实验内容一：" class="headerlink" title="实验内容一："></a>实验内容一：</h2><ul><li>图片2.1</li><li>选择2950-24交换机</li><li>选择四台PC</li><li>通过直通线将四台PC的FastEthernet0分别与对应的交换机网口相连</li><li>分别给四台PC配置IP地址<ul><li>法一：点击对应PC图标，在Config选项中FastEthernet0下的IP Address中配置，会自动生成对应的子网掩码(Subnet Mask)</li><li>法二：点击对应PC图标，在Desktop下选择IP Configuration，在其中的IP Address中配置，会自动生成对应的子网掩码(Subnet Mask)</li><li>四台分别配置：192.168.1.1/192.168.1.2/192.168.1.3/192.168.1.4，子网掩码均为：255.255.255.0</li></ul></li><li>采用Ping，测试是否连通<ul><li>选择PC0</li><li>在Desktop下选择Command Prompt（命令提示行）</li><li>尝试ping 192.168.1.2，发现PC0发送四个包，同时也收到四个响应，丢包率为0，说明已经ping通</li><li>图片2.2</li><li>尝试ping 192.168.1.4，发现也可以连通</li><li>图片2.3</li></ul></li><li>进入交换机查看有哪些可做的操作<ul><li>点击交换机，进入CLI选项</li><li>从用户模式进入特权模式(enable)，从特权模式进入配置模式(conf terminal)</li><li>进入接口界面(interface)</li><li>进入PC0接口(interface FastEthernet 0/1)</li><li>图片2.4</li><li>输入?查看接口模式下操作</li><li>接口描述<ul><li>description This port is for pc</li></ul></li><li>速度<ul><li>speed 10 强制接口在10M</li><li>speed 100 强制接口在100M</li><li>speed auto 自动协商</li></ul></li><li>全/半双工模式<ul><li>duplex half 半双工</li><li>duplex full 全双工</li><li>duplex auto 自动</li></ul></li><li>退出</li><li>图片2.6</li><li>在特权模式下显示0/1接口<ul><li>show interface f0/1</li><li>图片2.7</li></ul></li><li>显示运行配置<ul><li>running-config</li><li>图片2.8</li></ul></li><li></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络工程实践 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GUI编程学习</title>
      <link href="/archives/fc5a4007.html"/>
      <url>/archives/fc5a4007.html</url>
      
        <content type="html"><![CDATA[<h1 id="GUI编程"><a href="#GUI编程" class="headerlink" title="GUI编程"></a>GUI编程</h1><p>组件：</p><ul><li>窗口</li><li>弹窗</li><li>面板</li><li>文本框</li><li>列表框</li><li>按钮</li><li>图片</li><li>监听事件</li><li>鼠标</li><li>键盘事件</li></ul><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>GUI的核心技术：Swin、AWT</p><p>​    1、界面不美观</p><p>​    2、需要jre环境</p><p>为什么我们要学习？</p><p>​    1、了解MVC架构，了解监听</p><p>​    2、可以写出自己心中想要的小工具</p><p>​    3、工作时可能需要维护到swing界面，概率极小！</p><h2 id="2、AWT"><a href="#2、AWT" class="headerlink" title="2、AWT"></a>2、AWT</h2><h3 id="2-1、AWT介绍"><a href="#2-1、AWT介绍" class="headerlink" title="2.1、AWT介绍"></a>2.1、AWT介绍</h3><p>1、包含了很多的类和接口！</p><p>GUI(Graphical User Interface)：图形用户界面编程</p><p>2、元素：窗口，按钮，文本框</p><p>3、java.awt</p><p><img src="https://s6.jpg.cm/2022/09/22/Pbc41r.md.jpg" alt="awt"></p><h3 id="2-2、组件和容器"><a href="#2-2、组件和容器" class="headerlink" title="2.2、组件和容器"></a>2.2、组件和容器</h3><h4 id="1、Frame"><a href="#1、Frame" class="headerlink" title="1、Frame"></a>1、Frame</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GUI的第一个界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestFrame_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Frame, JDK, 看源码！</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"我的第一个Java图像界面窗口"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 需要设置可见性</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小 width height</span></span><br><span class="line">        frame.setSize(<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置背景颜色 Color</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">75</span>, <span class="number">167</span>, <span class="number">182</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 弹出的初始位置</span></span><br><span class="line">        frame.setLocation(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置大小固定</span></span><br><span class="line">        frame.setResizable(<span class="literal">false</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s6.jpg.cm/2022/09/22/Pbc0pR.md.jpg" alt="Frame"></p><p>问题：发现窗口关闭不掉，需要停止Java程序运行！</p><p>尝试回顾封装：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line">import java.awt.*;</span><br><span class="line"></span><br><span class="line">public class TestFrame_02 {</span><br><span class="line">    public static void main(String[] args) {</span><br><span class="line">        // 展示多个窗口 new</span><br><span class="line">        MyFrame myFrame1 = new MyFrame(100, 100, 200, 200, Color.blue);</span><br><span class="line">        MyFrame myFrame2 = new MyFrame(300, 100, 200, 200, Color.yellow);</span><br><span class="line">        MyFrame myFrame3 = new MyFrame(100, 300, 200, 200, Color.red);</span><br><span class="line">        MyFrame myFrame4 = new MyFrame(300, 300, 200, 200, Color.magenta);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">class MyFrame extends Frame{</span><br><span class="line">    static int id = 0; // 可能存在多个窗口，需要一个计数器</span><br><span class="line"></span><br><span class="line">    public MyFrame(int x, int y, int w, int h, Color color){</span><br><span class="line">        super("Myframe"+(++id));</span><br><span class="line">        setBackground(color);</span><br><span class="line">        setBounds(x,y,w,h);</span><br><span class="line">        setVisible(true);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s6.jpg.cm/2022/09/23/PbbD7h.md.jpg" alt="回顾封装"></p><h4 id="2、面板Panel"><a href="#2、面板Panel" class="headerlink" title="2、面板Panel"></a>2、面板Panel</h4><p>解决了关闭事件！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Panel 可以看成一个空间，但不能单独出现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPanel_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>();</span><br><span class="line">        <span class="comment">// 布局的概念</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">panel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置布局</span></span><br><span class="line">        frame.setLayout(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 坐标</span></span><br><span class="line">        frame.setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">500</span>);</span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">134</span>, <span class="number">134</span>, <span class="number">90</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// panel设置坐标，相对frame</span></span><br><span class="line">        panel.setBounds(<span class="number">50</span>,<span class="number">50</span>,<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">        panel.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">217</span>, <span class="number">24</span>, <span class="number">24</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// frame.add(panel) Panel extends Container; Container extends Component</span></span><br><span class="line">        frame.add(panel);</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听事件，监听窗口关闭事件 System.exit(0)</span></span><br><span class="line">        <span class="comment">// 适配器模式：</span></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="comment">// 窗口点击关闭的时候要做的事情</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                <span class="comment">// 结束程序</span></span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s1.ax1x.com/2022/09/23/xk2wpq.md.jpg" alt="面板Panel"></p><h4 id="3、布局管理器"><a href="#3、布局管理器" class="headerlink" title="3、布局管理器"></a>3、布局管理器</h4><ul><li><p>流式布局</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestFlowLayout</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组件-按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">button1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"button1"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"button2"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"button3"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置为流式布局</span></span><br><span class="line"><span class="comment">//        frame.setLayout(new FlowLayout());</span></span><br><span class="line"><span class="comment">//        frame.setLayout(new FlowLayout(FlowLayout.LEFT));</span></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>(FlowLayout.RIGHT));</span><br><span class="line">        frame.setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把按钮添加上去</span></span><br><span class="line">        frame.add(button1);</span><br><span class="line">        frame.add(button2);</span><br><span class="line">        frame.add(button3);</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>东西南北中</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestBorderLayout</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"TestBorderLayout"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">east</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"East"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">west</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"West"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">south</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"South"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">north</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"North"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">center</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"Center"</span>);</span><br><span class="line"></span><br><span class="line">        frame.add(east,BorderLayout.EAST);</span><br><span class="line">        frame.add(west,BorderLayout.WEST);</span><br><span class="line">        frame.add(south,BorderLayout.SOUTH);</span><br><span class="line">        frame.add(north,BorderLayout.NORTH);</span><br><span class="line">        frame.add(center,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        frame.setSize(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>表格布局Grid</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestGridLayout</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"TestGridLayout"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn1"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn2"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn3"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn4"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn5"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">btn6</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"btn5"</span>);</span><br><span class="line"></span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        frame.add(btn1);</span><br><span class="line">        frame.add(btn2);</span><br><span class="line">        frame.add(btn3);</span><br><span class="line">        frame.add(btn4);</span><br><span class="line">        frame.add(btn5);</span><br><span class="line">        frame.add(btn6);</span><br><span class="line"></span><br><span class="line">        frame.pack(); <span class="comment">// Java函数</span></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>Exercise</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExerciseDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 总</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"ExerciseDemo"</span>);</span><br><span class="line"></span><br><span class="line">        frame.setBounds(<span class="number">300</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        frame.setBackground(Color.BLACK);</span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 四个面板</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上面</span></span><br><span class="line">        p1.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"East-1"</span>),BorderLayout.EAST);</span><br><span class="line">        p1.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"West-1"</span>),BorderLayout.WEST);</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"p2-btn-1"</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"p2-btn-2"</span>));</span><br><span class="line">        p1.add(p2,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下面</span></span><br><span class="line">        p3.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"East-2"</span>),BorderLayout.EAST);</span><br><span class="line">        p3.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"West-2"</span>),BorderLayout.WEST);</span><br><span class="line">        <span class="comment">// 中间的四个</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) {</span><br><span class="line">            p4.add(<span class="keyword">new</span> <span class="title class_">Button</span>((<span class="string">"for-"</span>+i)));</span><br><span class="line">        }</span><br><span class="line">        p3.add(p4,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        frame.add(p1);</span><br><span class="line">        frame.add(p3);</span><br><span class="line"></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><p><img src="https://s1.ax1x.com/2022/09/23/xAi878.md.jpg" alt="Exercise"></p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><ul><li>Frame是一个顶级窗口</li><li>Panel无法单独显示，必须添加到某个容器中</li><li>布局管理器：<ul><li>流式</li><li>东西南北中</li><li>表格</li></ul></li><li>大小、定位、背景颜色、可见性、监听</li></ul><h4 id="4、事件监听"><a href="#4、事件监听" class="headerlink" title="4、事件监听"></a>4、事件监听</h4><p>事件监听：当某个事情发生的时候，干什么？</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestActionEvent</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 按下按钮，触发一些事件</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"TestActionEvent"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"This is a button"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 因为addActionListener需要ActionListener，所以我们需要构造一个ActionListener</span></span><br><span class="line">        <span class="type">MyActionListener</span> <span class="variable">myActionListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyActionListener</span>();</span><br><span class="line">        button.addActionListener(myActionListener);</span><br><span class="line"></span><br><span class="line">        frame.add(button,BorderLayout.CENTER);</span><br><span class="line">        frame.pack();</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        windowClose(frame); <span class="comment">// 关闭窗口</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 关闭窗体的事件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">windowClose</span><span class="params">(Frame frame)</span>{</span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件监听</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyActionListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> {</span><br><span class="line">        System.out.println(<span class="string">"aaa"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>多个按钮共享一个事件<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestActionEvent02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 两个按钮，实现同一个监听</span></span><br><span class="line">        <span class="comment">// 开始   停止</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>(<span class="string">"开始-停止"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"start"</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">"stop"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可以显示的定义触发会返回的命令，如果不显示定义，则会走默认的值！</span></span><br><span class="line">        <span class="comment">// 可以多个按钮只有一个监听类</span></span><br><span class="line">        button2.setActionCommand(<span class="string">"button2-stop"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MyMonitor</span> <span class="variable">myMonitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyMonitor</span>();</span><br><span class="line">        button1.addActionListener(myMonitor);</span><br><span class="line">        button2.addActionListener(myMonitor);</span><br><span class="line"></span><br><span class="line">        frame.add(button1,BorderLayout.NORTH);</span><br><span class="line">        frame.add(button2,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        frame.pack();</span><br><span class="line">        windowsClose(frame);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">windowsClose</span><span class="params">(Frame frame)</span>{</span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> {</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyMonitor</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> {</span><br><span class="line">        <span class="comment">// e.getActionCommand() 获得按钮的信息</span></span><br><span class="line">        System.out.println(<span class="string">"按钮被点击了：msg："</span>+e.getActionCommand());</span><br><span class="line">        <span class="keyword">if</span>(e.getActionCommand().equals(<span class="string">"start"</span>)){</span><br><span class="line">            System.out.println(<span class="string">"Button1 is clicked!"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><h2 id="3、Swin"><a href="#3、Swin" class="headerlink" title="3、Swin"></a>3、Swin</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GUI Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程学习笔记</title>
      <link href="/archives/5b5a394a.html"/>
      <url>/archives/5b5a394a.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于本文"><a href="#关于本文" class="headerlink" title="关于本文"></a>关于本文</h1><ul><li>本文章作为软件工程科目学习的笔记，依照本门课程要求，本篇博客将每周进行一次更新，在培养书写博客的习惯的同时，完成课堂笔记任务。其内容包含课上重点知识小结以及课后学堂在线相关课程的学习笔记，后续通过幕布app制作的思维导图也会以图片或者链接的方式保存于此。</li><li><a href="https://www.xuetangx.com/course/THU08091000367/12424539?channel=i.area.recent_search">学堂在线视频链接</a></li><li><a href="https://www.mubucm.com/doc/9phmPeCT4P">个人学习思维导图</a></li></ul><hr><h1 id="第一周个人学习清单"><a href="#第一周个人学习清单" class="headerlink" title="第一周个人学习清单"></a>第一周个人学习清单</h1><hr><p>1、学习清华软件工程第1章除1.5节以外的其他5节内容</p><ul><li><p>重点掌握概念和知识点：</p><ul><li>软件的定义及本质特征。</li></ul></li></ul><ul><li>软件工程发展历程及目前面临的主要挑战。</li></ul><ul><li>软件工程的基本概念及组成要素：过程、方法、工具。</li></ul><p>2、作业</p><ul><li><p>在线完成清华软件工程第1章后的<strong>测验题</strong>及<strong>讨论题。</strong></p></li><li><p>完成本章内容的学习笔记</p></li></ul><hr><h2 id="第一章：初识软件工程"><a href="#第一章：初识软件工程" class="headerlink" title="第一章：初识软件工程"></a>第一章：初识软件工程</h2><h3 id="1-1：软件工程无处不在"><a href="#1-1：软件工程无处不在" class="headerlink" title="1.1：软件工程无处不在"></a>1.1：软件工程无处不在</h3><ul><li>软件工程涵盖<font color="red"><strong>软件</strong></font>和<font color="red"><strong>工程</strong></font>两个部分<ul><li>软件是软件工程的研究对象，也是软件工程的产品形态与客观存在。</li><li>工程是将理论应用于实践的科学，目的是经济有效地解决实际问题。</li></ul></li></ul><ul><li><font color="red"><strong>软件工程：</strong></font>为了解决开发成本成本效益和软件质量的问题而产生的，倡导以工程的原理原则和方法进行软件开发，用系统的、可控的和有效的方式构建高质量的软件产品。</li></ul><ul><li>带着问题学习：<ul><li>软件具有哪些本质的特征？</li><li>软件开发面临哪些主要问题？</li><li>如何理解软件工程的基本概念和内涵？</li><li>软件开发应该遵循哪些工程化原则？</li><li>业内人士如何看待软件工程？</li></ul></li></ul><h3 id="1-2：软件的本质特征"><a href="#1-2：软件的本质特征" class="headerlink" title="1.2：软件的本质特征"></a>1.2：软件的本质特征</h3><ul><li>软件的定义：<font color="red"><strong>软件</strong></font> = <font color="green"><strong>程序</strong></font> + <font color="gray"><strong>数据</strong></font> + <font color="blue"><strong>文档</strong></font><ul><li>程序：计算机可以接受的一系列指令，运行时可以提供所要求的功能和性能。</li><li>数据：使得程序能够适当地操作信息的数据结构。</li><li>文档：描述程序的研制过程、方法和使用的图文资料。</li></ul></li></ul><ul><li>软件的行为只有通过<strong>运行</strong>才能呈现出来</li><li>在程序运行才能观察到软件的<strong>功能</strong>和<strong>性能</strong></li><li>软件更像是嵌入式的数字化知识、知识载体</li></ul><ul><li><p>软件的本质特性：软件具有<font color="red"><strong>复杂性</strong></font>、<font color="red"><strong>一致性</strong></font>和<font color="red"><strong>不可见性</strong></font>等固有的内在特性，这是造成软件开发困难的根本原因。</p><ul><li><font color="red"><strong>复杂性</strong></font>：软件可以说是人类创造的最复杂的物体</li><li><img src="https://s1.ax1x.com/2022/09/12/vXwtjH.md.png" alt="复杂性"></li><li><img src="https://s1.ax1x.com/2022/09/12/vXwUud.md.png" alt="复杂性"></li><li><font color="red"><strong>一致性</strong></font>：<ul><li>软件不能独立存在，需要依附于一定的环境（如硬件、网络以及其他软件）</li><li>软件必须遵从人为的惯例并适应已有的技术和系统</li><li>软件需要随接口不同而改变，随时间推移而变化，而这些变化都是不同人设计的结果</li></ul></li><li><font color="red"><strong>可变性</strong></font>：软件只要使用就会一直在变，而这个改变是随需而变。在理想情况下，随着软件使用，故障率逐渐下降，趋于稳定；但实际情况是，软件的每一次修改会造成故障率的升高，可能对软件结构造成破坏，最终可能导致软件发生退化，结束生命周期。<ul><li>人们总是认为软件是容易修改的，但忽视了修改所带来的副作用</li><li>不断地修改最终导致软件的退化，从而结束其生命周期</li><li>尽管如此，成功的软件都是会发生演变的，没有任何变化的软件一定是没有用的</li><li>软件的可变性给开发带来很多难题，但也给软件带来生命力</li><li>积极态度和有效方法控制变更，使软件在演化过程中保持高质量</li></ul></li><li><img src="https://s1.ax1x.com/2022/09/12/vXwaDA.md.png" alt="可变性"></li><li><font color="red"><strong>不可见性</strong></font>：<ul><li>软件是一种“看不见、摸不着”的逻辑实体，不具有空间的形体特征</li><li>开发人员可以直接看到程序代码，但是源代码并不是软件本身</li><li>软件是以机器代码的形式运行，但是开发人员无法看到源代码是如何执行的</li><li>不可见性限制软件的设计过程、严重阻碍相互之间的人与人的交流、对开发过程的管理造成困难</li></ul></li></ul></li></ul><h3 id="1-3：软件工程的产生与发展"><a href="#1-3：软件工程的产生与发展" class="headerlink" title="1.3：软件工程的产生与发展"></a>1.3：软件工程的产生与发展</h3><ul><li>Standish集团对软件项目跟踪调查的报告：<ul><li><img src="https://s1.ax1x.com/2022/09/12/vX0Vat.md.png" alt="vX0Vat.md.png"></li><li><img src="https://s1.ax1x.com/2022/09/12/vX0ZIP.md.png" alt="vX0ZIP.md.png"></li><li><img src="https://s1.ax1x.com/2022/09/12/vX0kqA.md.png" alt="vX0kqA.md.png"><ul><li><img src="https://s1.ax1x.com/2022/09/12/vX0EVI.md.png" alt="vX0EVI.md.png"></li></ul></li></ul></li></ul><ul><li>软件开发面临的挑战：</li></ul><p><img src="https://s1.ax1x.com/2022/09/12/vX0mPf.md.png" alt="vX0mPf.md.png"></p><ul><li>软件工程：致力于探索软件开发问题的解决之道</li></ul><p><img src="https://s1.ax1x.com/2022/09/12/vX0yIx.md.png" alt="vX0yIx.md.png"></p><h3 id="1-4：软件工程的基本概念"><a href="#1-4：软件工程的基本概念" class="headerlink" title="1.4：软件工程的基本概念"></a>1.4：软件工程的基本概念</h3><ul><li>工程的含义：应用有关的科学知识和技术手段，通过有组织的群体协作活动，建造具有预期使用价值的人造产品过程。工程是将理论和知识应用于实践的科学，一遍经济有效地解决问题。</li><li>工程活动具有以下特征：<ul><li>大规模的设计和建造</li><li>复杂问题与目标分解</li><li>团队协作与过程控制</li></ul></li><li>软件工程是：<ul><li>① 将系统性的、规范化的、可定量的方法应用于软件的开发、运行和维护，即工程化应用到软件上；</li><li>② 对①中所述方法的研究。</li></ul></li><li><p>软件工程的目标 ————- 创造出“足够好”的软件</p><ul><li>较低的开发成本</li><li>按时完成开发任务并及时交付</li><li>实现客户需要的功能</li><li>具有良好性能、可靠性、可拓展性、可移植性等</li><li>软件维护费用低</li></ul></li><li><p>软件工程的三个基本要素：</p><ul><li>过程：支持软件开发各个环节的控制和管理</li><li><img src="https://s1.ax1x.com/2022/09/12/vXsemQ.md.png" alt="vXsemQ.md.png"></li><li>方法：完成软件开发任务的技术手段</li><li><img src="https://s1.ax1x.com/2022/09/12/vXsnTs.md.png" alt="vXsnTs.md.png"></li><li>工具：为软件开发提供自动或半自动的软件支持环境</li><li><img src="https://s1.ax1x.com/2022/09/12/vXsmwj.md.png" alt="vXsmwj.md.png"></li></ul></li></ul><ul><li>软件开发的基本策略：<ul><li>软件复用：<ul><li>构造一个新的系统不必从零做起，直接复用已有的构件进行组装</li><li>构件是经过反复使用验证的，由其组成的新系统具有较高的质量</li></ul></li><li>分而治之：<ul><li>将一个复杂的问题分解成若干个简单的问题，然后逐个解决</li><li>来源于人们生活与工作经验，完全适合于技术领域</li></ul></li><li>逐步演进：<ul><li>软件开发是自底向上逐步有序的生长过程</li><li>小步快跑：每走完一步再调整并为下一步确定方向，直到终点</li></ul></li><li>优化折中：<ul><li>优化：优化软件的各个属性，如运行速度、资源利用、用户体验</li><li>折中：通过协调各个质量特征，实现整体质量最优</li></ul></li></ul></li></ul><h3 id="1-6：业界人士谈软件工程"><a href="#1-6：业界人士谈软件工程" class="headerlink" title="1.6：业界人士谈软件工程"></a>1.6：业界人士谈软件工程</h3><ul><li>业界人士如何看待软件工程<ul><li>在软件开发的过程中遇到的最大的困难是如何让大家<strong>并行地</strong>一起工作和一起解决，这就是软件工程涉及到的项目管理和项目协同地概念。</li><li>软件工程的开发<strong>不是一个人的工作</strong>，是很多人把自己的智慧和代码集合在一起，软件工程让很多人把自己的使用习惯都归结成一些规则，让每个人写出来的代码都是同样的思维，同样的思路，看起来像一个人写出来的代码，这就是软件工程的<strong>设计模式</strong>。</li></ul></li></ul><ul><li>业界人士认为程序员最重要的四个素质<ul><li>拥有极强的代码的阅读和理解的能力，以及<strong>书写代码</strong>的能力</li><li>有极强的<strong>责任心和责任感</strong>，对整个软件产业的<strong>敬畏之心</strong>（对前人和用户的体验的敬畏，自我反省，自我提升）</li><li>有<strong>职业道德</strong>，对代码的品质的保证和对整个公司秘密的保护</li><li>需要有和其他程序员<strong>协同的能力</strong>，人与人之间的相处，人与人之间如何交换自己的代码，开发的心得，开发的经验</li></ul></li></ul><h1 id="第二周个人学习清单"><a href="#第二周个人学习清单" class="headerlink" title="第二周个人学习清单"></a>第二周个人学习清单</h1><hr><ul><li>学习清华软件工程第8章中8.1、8.2、8.7共三节<ul><li>重点掌握概念和知识点：<ul><li>需求工程师的职责。</li><li>软件需求的定义。</li><li>获取软件需求的主要途径。</li><li>软件需求文档的框架。</li></ul></li></ul></li><li>学习清华软件工程第4章中4.1及4.2节<ul><li>重点掌握概念和知识点：<ul><li>软件过程概念及其组成。</li><li>传统软件工程模型如：瀑布、原型、增量模型的特点及其适用场合。</li><li>迭代模型特点及其适用场合。</li></ul></li></ul></li><li>个人作业：<ul><li>完成清华软件工程网课第4章课后测验题1-6。</li></ul></li></ul><h2 id="第八章：需求获取"><a href="#第八章：需求获取" class="headerlink" title="第八章：需求获取"></a>第八章：需求获取</h2><h3 id="8-1：需求工程师"><a href="#8-1：需求工程师" class="headerlink" title="8.1：需求工程师"></a>8.1：需求工程师</h3><ul><li>需求分析是软件工程中的重要步骤，是<font color="red">决定软件项目成败</font>的关键影响因素之一。</li><li>需求阶段的错误，在后期的纠错成本中将<strong>远远高于</strong>软件设计和实现阶段的错误的纠错成本。</li><li>在需求工程中，我们主要关注的是：软件和系统需求的<font color="red">获取、建模、分析、验证和管理</font>。</li><li>带着问题学习：<ul><li>如何产生软件产品的新的创意</li><li>如何和干系人进行有效地沟通</li><li>如何基于目标、场景和主体来建模软件系统的需求</li><li>如何用图形化的方法对软件系统的行为和结构进行分析</li></ul></li><li><font color="red">注意：</font><ul><li>将问题的分析和解决方案的生成区别开来</li><li>要根据软件项目本身的规模、人员的技能、客观的条件、项目的成本来选择合适的需求获取技术和建模方法，选择最合理的软件系统设计方案</li></ul></li></ul><ul><li>作为当代的需求工程师应该具有：<ul><li>分析问题和解决问题的能力</li><li>主动参与人机苟婷及交流的能力</li><li>软件工程的基本知识和技能</li><li>对应用领域有关知识的深厚了解</li><li>书面语言组织和表达能力</li></ul></li></ul><ul><li>优秀需求工程师的目标：<ul><li>识别错误假设</li><li>确保描述的一致性</li><li>对标准和规范的依从性</li><li>减少组织和个人的误解</li><li>提高支持人员的反映速度和效率</li><li>提升客户满意度</li><li>撰写优秀的需求文档</li></ul></li></ul><ul><li>需求分析师的<strong>七宗罪</strong>：<ul><li>干扰</li><li>沉默</li><li>过度规约</li><li>矛盾</li><li>含糊</li><li>向前引用</li><li>不切实际与一厢情愿</li></ul></li></ul><h3 id="8-2：需求定义"><a href="#8-2：需求定义" class="headerlink" title="8.2：需求定义"></a>8.2：需求定义</h3><ul><li>“需求”是对外可见的系统特征</li><li>“需求管理”有三项任务(Alan.M.Davis)：<ul><li>学习——需求获取</li><li>剪枝——需求优选</li><li>文档化——撰写需求规格说明书</li></ul></li></ul><ul><li>IEEE对需求定义的标准(IEEE 610.12,1990)：<ul><li>需求，是人们解决某个问题或达到某种目的的需要。是系统或其组成部分为满足某种<font color="red">书面规定</font>（合同，标准，规范等）所要具备的能力。需求将作为系统<font color="red">开发，测试，验收，提交的正式文档依据</font>。</li></ul></li></ul><ul><li>“需求”的定义(Herbert Simon)：<ul><li>每一个“<font color="red">人造物</font>”都是一个<font color="red">内部环境</font>与<font color="red">外部环境</font>的“<font color="red">接口</font>”。这里的内部环境指人造物本身的设计组成。外部环境指人造物的周遭及其作用环境。对这个接口的描述既是需求。</li></ul></li></ul><ul><li>需求描述的难点和挑战就在于，它是连接应用领域现象与机器领域现象的桥梁，我们要从应用领域的固有性质和用户待解决的需求描述转化为可以用计算机软件实现的系统行为的描述</li></ul><ul><li>需求是系统为满足客户期望的目标而完成的行为</li><li>需求要体现出对问题领域的清晰理解</li><li>给出系统的使用场景和上下文</li><li>在需求的定义中，要回答一下问题：<ul><li>问什么要设计这个系统</li><li>系统将由谁使用</li><li>系统要做什么</li><li>系统涉及哪些信息</li><li>对解决方案有何额外限制</li><li>如何使用该系统</li><li>质量指标约束要达到何种程度</li></ul></li><li><img src="https://s1.ax1x.com/2022/09/18/xpy95F.md.png" alt="举例"></li><li><img src="https://s1.ax1x.com/2022/09/18/xpyZb6.md.png" alt="举例"></li><li>将问题与解决方案分开<ul><li><img src="https://s1.ax1x.com/2022/09/18/xpynUO.md.png" alt="将问题与解决方案分开"></li></ul></li></ul><ul><li>什么是需求：<ul><li><img src="https://s1.ax1x.com/2022/09/18/xpyJqP.md.png" alt="什么是需求"></li><li><img src="https://s1.ax1x.com/2022/09/18/xpywGQ.md.png" alt="例一"></li></ul></li></ul><p>第二条领域性质的假设是存在问题的，“当飞机在跑道上移动时，轮胎转动”并没有覆盖客观世界的真实情况，在雨天路滑的时候，飞机在跑道上移动，但轮胎可能没有转动；此外，当飞机在跑到以外的地方移动是，轮胎也是转动的。所以这两种情况属于没有被我们现在的领域性质所覆盖的情况。因此，飞机的行为是与预期不符合的。</p><ul><li>存在问题的需求描述实例：<ul><li><font color="red">含糊的需求描述:</font><ul><li>工资总额由上一条记录获得</li><li>所有客户都具有同一控制域</li></ul></li><li><font color="red">错误的需求描述:</font><ul><li>所有的系统将九月作为财政年度的起始时间</li></ul></li><li><font color="red">不完整的需求描述:</font><ul><li>出错信息显示在屏幕的第24行</li></ul></li><li><font color="red">矛盾或不一致的描述需求:</font><ul><li>“C=A+B”; “C=A-B”</li></ul></li><li><font color="red">无法测试的需求:</font><ul><li>系统应具有友好的界面</li></ul></li></ul></li></ul><ul><li><p>需求规约：好的需求是可以度量的，能给出项目成功的必要条件</p><ul><li><p>单个需求项的质量：</p><ul><li>准确(Concise)</li><li>正确(Correcr)</li><li>明确(Non-ambiguous)</li><li>可行(Feasible)</li><li>可证(Verifiable)</li></ul></li><li><p>整个需求集合的质量：</p><ul><li>现实(Realistic)</li><li>精确(Concise)</li><li>全面(Complete)</li><li>一致(Consistent)</li></ul></li></ul></li></ul><h3 id="8-7：撰写需求文档"><a href="#8-7：撰写需求文档" class="headerlink" title="8.7：撰写需求文档"></a>8.7：撰写需求文档</h3><ul><li>软件需求规格说明(Software Requirement Specification SRS)<ul><li>是具有一定法律效力的合同文档</li><li>清楚地描述软件在什么情况下，需要做什么，以及不能做什么</li><li>以输入/输出、输入到输出之间的转换方式来描述功能性需求</li><li>描述经过干系人磋商达成的共识的非功能性需求</li><li>一般参考需求定义模板，覆盖标准模板中定义的所有条目</li><li>作为后续的软件评估依据和变更基准</li></ul></li></ul><ul><li>需求文档的组织形式<ul><li>文档需要有逻辑组织结构<ul><li>例如：参照IEEE的模板</li></ul></li><li>典型的组织包括：<ul><li>按系统能够响应的各种外部环境情况来组织</li><li>按系统特征来组织</li><li>按系统的响应方式来组织</li><li>按所管理的外部数据来组织</li><li>按用户类型来组织</li><li>按软件的工作模式来组织</li><li>按子系统的划分来组织</li></ul></li></ul></li></ul><ul><li><p>软件需求规格说明SRS的风格</p><ul><li><img src="https://s1.ax1x.com/2022/09/18/xpgfJS.md.png" alt="软件需求规格说明SRS的风格"></li></ul></li><li><p>选择合适的需求规格说明方式</p><ul><li><img src="https://s1.ax1x.com/2022/09/18/xpgXJU.md.png" alt="选择合适的需求规格说明方式"></li></ul></li><li>生成不同风格SRS的方法总览<ul><li><img src="https://s1.ax1x.com/2022/09/18/xp2ZSe.md.png" alt="生成不同风格SRS的方法总览"></li></ul></li><li><p>用户手册作为SRS</p><ul><li><img src="https://s1.ax1x.com/2022/09/18/xp2amn.md.png" alt="用户手册作为SRS"><br><img src="https://s1.ax1x.com/2022/09/18/xp2wT0.md.png" alt="用户手册大纲"></li></ul></li><li><p>需求规格说明的用户</p><ul><li><img src="https://s1.ax1x.com/2022/09/18/xp2dwq.md.png" alt="需求规格说明的用户"></li></ul></li><li>高质量需求规格说明：一个高质量的规格说明<ul><li>是所有需求的集合</li><li>描述产品要提供的所有功能</li><li>是软件解决方案的商业合同的基础</li><li>是测试计划的基础</li><li>定义产品需求的度量标准</li><li>是产品需求跟踪的先决条件</li><li>影响开发产品的项目计划</li></ul></li></ul><ul><li>高质量需求规格说明的评价标准<ul><li><img src="https://s1.ax1x.com/2022/09/18/xp2LnA.md.png" alt="高质量需求规格说明的评价标准"></li><li>正确性是指它真正表达了干系人的需求，也没有引入不必要的噪声需求</li><li>无歧义性是指对每一个需求项都只有一种合理的解释，不会导致误解</li><li>需求的完整性是指它涵盖了所有必要的功能，也给出了系统不应具有的行为，在概念上具有完整性，覆盖了所有可能的收入情况，在结构上也具有完整性，没有尚未添加的部分</li><li>可测试性是指每条需求他都是可证明的，有一个测试其满足度的过程</li><li>可跟踪性是指需求的来源清楚，每条需求都有唯一的索引号以备未来的引用</li><li>可修改性是指从结构和相互引用的逻辑上，具有清晰的条理，确保需求项的修改不会面临太大的困难，引入新的问题</li><li>易理解性是指它可以被非专业人士阅读理解</li><li>一致性是指需求的说法上不会存在自相矛盾的情况，术语的使用和引用也是一致的、连贯的</li><li>有序性是指需求之间按照重要程度或者稳定性，排有优先级的次序</li><li>建立<font color="red">高规格的需求规格说明</font>是未来项目<strong>成功的必要保证之一</strong>，但是建立<font color="red">完美的需求规格说明</font>也是<strong>不必要、不现实的</strong></li></ul></li></ul><ul><li>除以上的规约评价指标以外，我们还应该注意保证需求的规约是简洁的<ul><li>定义：一个需求描述是简洁的<ul><li>描述了系统的一个独立特征</li><li>除了必须的欣喜外没有包含其他信息</li><li>用清晰、简单、可理解的词表述</li><li>避免“应该”、“可以”、“可能”之类的用词</li></ul></li><li>举例：<ul><li>“急救电话的响应应本着先到先响应的原则” 相对 “急救电话应按照其拨入的次序存入一个先入先出的等待队列当中，并且按照进入队列的次序逐一应答”是简洁的</li></ul></li></ul></li></ul><ul><li>使用需求数据库时：<ul><li><img src="https://s1.ax1x.com/2022/09/18/xpW1xg.md.png" alt="使用需求数据库时"></li></ul></li></ul><ul><li><p>基于子系统划分来组织需求规格说明</p><ul><li><img src="https://s1.ax1x.com/2022/09/18/xpW8MQ.md.png" alt="xpW8MQ.md.png"></li></ul></li><li><p>需求规格说明SRS模板</p><ul><li>SRS需要根据预先定义的标准模式来组织，及根据模板来撰写</li><li>SRS的模板使得撰写统一的SRS变得简单</li><li>对于QA人员来说SRS指标变得简单</li><li>模板也适用于业务需求和系统需求</li><li>模板可以被用于半自动的从需求数据库或者用例模型生成SRS</li></ul></li></ul><ul><li>IEEE-830 SRS模板大纲<ul><li><img src="https://s1.ax1x.com/2022/09/18/xpW4zD.md.png" alt="IEEE-830 SRS模板大纲"></li><li><img src="https://s1.ax1x.com/2022/09/18/xpWhRO.md.png" alt="IEEE-830 SRS模板大纲"></li></ul></li><li>SRS模板的优缺点<ul><li>优点：<ul><li>模板提高效率</li><li>在有模板的情况下，面对一个完整的大纲，不容易遗漏重要的信息</li></ul></li><li>缺点：<ul><li>并非对于所有的系统，模板的章节设计都是类似的</li><li>如果仅仅为了满足标准，而填写模板的所有章节，会加入一些没有意义的内容</li><li>读者很难将这些无意义的文字和真正的需求分开</li></ul></li></ul></li></ul><ul><li>总结：<ul><li>尽快开始撰写需求</li><li>确定哪些属性将被用于分类和细化需求</li><li>产生一个初版本来刺激反馈</li><li>询问用户往往比咨询专家更有用</li><li>撰写需求时需要遵循的法则：<ul><li>使用简单、直接的语言</li><li>撰写可测试的需求</li><li>使用定义好的并达成共识的术语</li><li>一次只写一项需求</li></ul></li><li>随时准备迎接需求的变化<ul><li>这是一种态度</li><li>越多的干系人参与，将获得越多的需求特征</li><li>但不能通过减少干系人的方法来解决这个问题</li><li>干系人有改变他们想法的权利</li><li>不要问“这是你最终的需求吗？”</li><li>请将变化看成机会，不是威胁</li></ul></li></ul></li></ul><h2 id="第四章：软件开发过程"><a href="#第四章：软件开发过程" class="headerlink" title="第四章：软件开发过程"></a>第四章：软件开发过程</h2><h3 id="4-1：软件过程"><a href="#4-1：软件过程" class="headerlink" title="4.1：软件过程"></a>4.1：软件过程</h3><ul><li>带着问题学习：<ul><li>什么是过程？</li><li>过程在软件开发管理中起到什么作用？</li><li>软件过程又包括哪些基本活动？</li></ul></li></ul><ul><li><p>过程的含义：</p><ul><li><p><font color="red">过程</font>是一组将输入转化为输出的相互关联或相互作用的活动</p></li><li><p>客户需求  -&gt;  过程  -&gt;  客户满意的产品</p><p>[<img src="https://s1.ax1x.com/2022/09/18/xpoPPI.md.jpg" alt="过程的含义"></p></li></ul></li></ul><ul><li>过程方法：<ul><li><font color="red">过程方法</font>是系统地识别和管理组织内所使用的过程，保证更有效地获得期望的结果。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpoQGq.md.jpg" alt="过程方法"></li><li>其中实现过程是提供有价值产品或服务的关键性活动，这些活动负责吧输入转换为输出</li><li>支持活动负责提供所需要的资源和能力，从而使关键性的实现活动能够顺利进行</li><li>管理活动则是衡量和评价实现过程和支持效能的过程，建立起组织的质量管理体系</li></ul></li></ul><ul><li>软件过程<ul><li><img src="https://s1.ax1x.com/2022/09/18/xpozlV.md.jpg" alt="xpozlV.md.jpg"></li></ul></li></ul><ul><li>软件开发活动<ul><li><font color="red">问题定义：</font>人们通过开展技术探索和市场调查等活动，研究系统可行性和可能的解决方案，确定待开发系统的总体目标和范围</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTm6K.md.jpg" alt="问题定义"></li><li><font color="red">需求开发：</font>在可行性研究之后，分析、整理和提炼所收集到的用户需求，建立完整的需求分析模型，编写软件需求规格说明。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTypq.md.jpg" alt="需求开发"></li><li><font color="red">软件设计：</font>根据需求规格说明，确定软件体系结构，进一步设计每个系统部件的实现算法、数据结构及其接口等。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTw7Q.md.jpg" alt="软件设计"></li><li><font color="red">软件构造：</font>概括地说是将软件设计转换成程序代码，这是一个复杂而迭代的过程，要求根据设计模型进行程序设计以及正确而高效地编写和测试代码。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTDts.md.jpg" alt="软件构造"></li><li><font color="red">软件测试：</font>检查和验证所开发的系统是否符合客户期望，主要包括单元测试、子系统测试、集成测试和验收测试等活动。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTBkj.md.jpg" alt="软件测试"></li><li><font color="red">软件维护：</font>系统投入使用后对其进行改进，以适应不断变化的需求。完全从头开发的系统很少，将软件系统的开发和维护看成是一个连续过程更有意义。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpTrhn.md.jpg" alt="软件维护"></li></ul></li></ul><ul><li>软件开发管理<ul><li><font color="red">软件项目管理</font>是为了使软件项目能够按照预定的成本、进度、质量顺利完成，而对成本、人员、进度、质量和风险进行控制和管理的活动。</li><li><img src="https://s1.ax1x.com/2022/09/18/xp7e4s.md.jpg" alt="软件项目管理"></li><li><font color="red">软件配置管理</font>是通过执行版本控制、变更控制的规程，并且使用合适的配置管理软件，来保证所有产品配置项的完整性和可跟踪性。</li><li><img src="https://s1.ax1x.com/2022/09/18/xp7ZNj.md.jpg" alt="软件配置管理"></li></ul></li></ul><h3 id="4-2：软件过程模型"><a href="#4-2：软件过程模型" class="headerlink" title="4.2：软件过程模型"></a>4.2：软件过程模型</h3><ul><li><p>软件过程是为了获得高质量软件，所需要完成的一系列任务，它定义了完成各项任务的工作步骤，把任务、人员和工具，密切地结合在一起</p></li><li><p>软件过程模型就是对软件过程的抽象描述</p><ul><li><img src="https://s6.jpg.cm/2022/09/20/PUHeZL.jpg" alt="软件过程模型"></li><li><p>常见的软件过程模型包括：</p></li><li><p><img src="https://s1.ax1x.com/2022/09/19/x9TsR1.md.jpg" alt="常见的软件过程模型"></p></li><li>瀑布式模型<ul><li>将基本的活动开发看成是一系列界限分明的独立阶段，这些活动以线性的方式顺序执行，这是一种计划驱动的软件过程，有利于规范软件开发活动。</li><li><img src="https://s1.ax1x.com/2022/09/18/xpOM0f.md.jpg" alt="瀑布式模型"></li><li><img src="https://s1.ax1x.com/2022/09/18/xpOm6I.md.jpg" alt="瀑布式模型"></li><li>软件的行为只有在运行过程中，才能显现出来，因此瀑布模型只有到测试阶段才能真正地验证和确认软件的功能和性能，但是这个时候所有的代码都已经开发完成，很难返回去纠正需求的问题和设计的缺陷。显然这种模型虽然对各个阶段进行严格控制，但是却缺少了对变化的适应</li><li>瀑布模型看似美丽，却不现实，目前已经很少在业界使用。它的主要问题在于各个阶段的划分完全固定，阶段之间产生大量的文档，增加了开发工作量。由于开发过程是线性的，用户只有在整个过程结束时，才能看到开发成果，开发过程中间，很难相应用户的变更要求，早期的错误也要等到开发后期的测试阶段才能发现，这样会产生严重的后果</li><li>因此，瀑布模型仅适用于软件需求在开发初期就可以被完整地确定这样的软件项目，而且用户使用的环境也要很稳定，显然这样的要求是不现实的</li></ul></li><li><p>一般来说软件需要解决以前从未解决过的问题，或者当前的解决方案需要不断更新，以适应业务环境的不断变化，因此软件开发具有迭代性。</p><ul><li><p><img src="https://s1.ax1x.com/2022/09/18/xpOnXt.md.jpg" alt="软件开发的迭代性"></p></li><li><p>随着人们对问题的逐步理解，以及对可选方案的评估，软件在不断地演化。因此，软件开发是一个创造的过程，而不是一个制造的过程</p></li></ul></li><li><p>原型化模型</p><ul><li>主要是解决需求不确定的问题，原型是一个部分开发的产品，用于加强对系统的理解，有助于明确需求和选择可行的设计策略。</li><li><img src="https://s1.ax1x.com/2022/12/22/zXtKot.md.jpg" alt="原型化模型"></li><li>原型化模型需要迅速建造一个可运行的软件原型，使用户和开发人员对系统的相关方面进行检查，以决定是否合适和恰当</li></ul></li><li>迭代式开发<ul><li>将描述、开发和验证等不同活动交织在一起，在开发过程中建立一系列版本，将系统一部分一部分地逐步交付。</li><li><img src="https://s1.ax1x.com/2022/12/22/zXt1W8.md.jpg" alt="迭代式开发"></li><li><img src="https://s1.ax1x.com/2022/12/22/zXtudI.md.jpg" alt="迭代式开发"></li><li>迭代式的开发使得软件系统能够逐步的进行交付，开发人员在完成一部分功能之后，形成一个产品版本，然后将其发布给用户使用，当用户使用第一个版本的时候，开发人员继续开发下一个版本，如此迭代循环，这样做不仅可以缩短产品的开发周期，还可以更好的获得用户对产品的反馈</li><li><img src="https://s1.ax1x.com/2022/12/22/zXtlJf.md.jpg" alt="迭代式开发的两种方式"></li><li><img src="https://s1.ax1x.com/2022/12/22/zXtQFP.md.jpg" alt="迭代式开发的两种方式"></li></ul></li><li><p>可转换模型</p><ul><li><p>利用自动化的手段，通过一系列转化将需求规格说明转化为一个可交付使用的系统。</p></li><li><p><img src="https://s1.ax1x.com/2022/12/22/zXt8SS.md.jpg" alt="可转换模型"></p></li><li><p>犯错是人的天性，往往是因为犯错造成了软件的缺陷，因此，可转换模型是采用形式化的数学方法描述系统，并利用自动化手段通过一系列转换，将形式化的需求规格说明，变为可交付使用的系统。</p></li><li><p>建立形式化的数学描述是一个比较困难的工作，目前这种方法还是主要应用于有限状态的嵌入式系统中</p></li></ul></li><li>案例分析<ul><li><img src="https://s1.ax1x.com/2022/12/22/zXtGQg.md.jpg" alt="案例分析"></li><li><img src="https://s1.ax1x.com/2022/12/22/zXtJyQ.md.jpg" alt="案例一"></li><li><img src="https://s1.ax1x.com/2022/12/22/zXtNes.md.jpg" alt="案例二"></li></ul></li></ul></li></ul><h1 id="第三周个人学习清单"><a href="#第三周个人学习清单" class="headerlink" title="第三周个人学习清单"></a>第三周个人学习清单</h1><ul><li><p>软件需求管理（用例建模）</p><ul><li><p>学习清华软件工程第9章中9.1、9.2、9.3、9.4、9.5共五节</p></li><li><p>用例图中参与者、用例、系统边界的概念。</p></li></ul><ol><li><p>掌握用例的粒度。</p></li><li><p>使用UML建模工具绘制用例图，除EA外可以选择轻量级在线建模工具ProcessOn。</p></li><li><p>撰写简单用例文本。</p></li></ol></li><li><p>第9章测验题</p></li></ul><h2 id="第九章：用例建模"><a href="#第九章：用例建模" class="headerlink" title="第九章：用例建模"></a>第九章：用例建模</h2><h3 id="9-1：用例建模概念"><a href="#9-1：用例建模概念" class="headerlink" title="9.1：用例建模概念"></a>9.1：用例建模概念</h3><ul><li><img src="https://s1.ax1x.com/2022/09/28/xmWQFf.jpg" alt="用例在需求管理过程中的作用"></li><li><p>用例在需求管理过程中的作用：</p><ul><li>在产品开发过程中，需求的管理尤为重要，高效管理需求的工具多种多样，用例建模便是其中之一；随着项目的开展，我们可以通过一系列的需求活动管理去挖掘系统的相关信息，通过<font color="red">分析问题</font>理解干系人的需求，在<font color="red">定义系统</font>的过程中，我们可以利用简略的<font color="red">用例规约（提纲）</font>，对系统的功能和业务过程进行表示，融入<font color="red">领域相关信息</font>后对系统进行细化完善，形成更贱详细的<font color="red">用例规约</font>描述，在这个过程中，我们逐步形成了完整的用例模型，进而可以管理变化的需求</li></ul></li><li><p><img src="https://s1.ax1x.com/2022/09/28/xmWKTP.jpg" alt="为什么需要用例建模"></p></li><li><p>用例模型包含了系统哪些信息：</p><ul><li>通过用例模型将<strong>干系人的需求</strong>和<strong>软件的需求</strong>建立关联</li><li>确认与系统<strong>交互</strong>的人或者对象（即参与者）</li><li>定义系统的边界</li><li>捕捉和表达系统的<strong>理想行为（用例）</strong></li></ul></li><li>通过用例模型有利于对需求进行验证和确认，并辅助规划开发的过程</li><li>用例模型包含：<ul><li>文本描述<ul><li>给出了参与者和用例的具体信息</li><li>包含了用例模型概要以及用例规约描述</li><li>模型概要中简要介绍了系统的功能与意义，列出相关的参与者和用例</li><li>在每个用例规约中将详细描述用例中会发生什么操作或事件，涉及的非功能性需求和规则约束等，也就是要对每一个用例的事件流进行描述</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWneI.jpg" alt="文本描述"></li></ul></li><li>用例图描述<ul><li>有利于宏观地了解系统</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWuwt.jpg" alt="用例图"></li><li>用例图中的主要元素</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWeOA.jpg" alt="用例图中的主要元素"></li></ul></li></ul></li><li>什么是用例？<ul><li><img src="https://s1.ax1x.com/2022/09/28/xmWlY8.jpg" alt="什么是用例？"></li><li>用例定义了系统一系列行为</li><li>命名：动宾结构</li><li>代表功能性需求</li><li>代表参与者与系统的交互过程（原子性）</li><li>定义用例的对象一定是最终的使用用户</li><li>要有可观测的结果</li><li>注意用例的粒度</li><li><img src="https://s1.ax1x.com/2022/09/28/xmW1fS.jpg" alt="用例包含软件系统需求"></li><li>每个用例是一个细化的系统行为需求</li><li>穷举所有的用例可以得到完整的需求描述</li><li>作为黑箱测试设计的参考</li></ul></li><li>参与者的定义<ul><li><img src="https://s1.ax1x.com/2022/09/28/xmW8Sg.jpg" alt="参与者的定义"></li><li>不同的使用者用同样的模式与系统进行交互；同时一个使用者也以不同的身份使用相同的系统</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWGlQ.jpg" alt="参与者定义与角色划分"></li><li>参与者的定义是依据角色而划分的，我们需要将用户角色和用户实例进行区分</li></ul></li><li>关联<ul><li>表示参与者与用例之间的交互通道</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWJyj.jpg" alt="关联"></li><li>箭头的使用习惯</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWYOs.jpg" alt="箭头"><ul><li>如果图中标明了箭头相应的信息，也应该在用例文本描述中有所体现，标志在何种情况下进入用例</li><li>箭头表示并不是必须的，仅当需求中有明确的定义时才使用</li><li>一种异常的表示是如果有两个或两个以上的箭头指向了同一个用例</li><li>箭头的方向只表示消息的传递方向</li></ul></li></ul></li><li>交互<ul><li><img src="https://s1.ax1x.com/2022/09/28/xmWNmn.jpg" alt="交互"></li></ul></li><li>场景<ul><li>场景是用例的一个实例</li><li>一个用例会有不同的场景</li><li>需要将不同的场景分别进行描述</li><li><img src="https://s1.ax1x.com/2022/09/28/xmWUwq.jpg" alt="场景"></li></ul></li><li>用例建模的过程中，更重要的是对用例进行描述，而画图只是其中的一小部分工作</li></ul><h3 id="9-2：用例建模过程"><a href="#9-2：用例建模过程" class="headerlink" title="9.2：用例建模过程"></a>9.2：用例建模过程</h3><ul><li><p>用例建模包含两个步骤：</p><ul><li>第一步：找到参与者和用例</li><li>第二步：编写用例</li><li><img src="https://s1.ax1x.com/2022/09/29/xmXIO0.jpg" alt="用例建模"></li></ul></li><li><p>寻找参与者：</p><ul><li>谁/什么使用系统？</li></ul></li><li>谁/什么从系统中获取信息？<ul><li>谁/什么向系统提供信息？</li></ul></li><li>公司的哪个部门会使用系统<ul><li>谁/什么负责系统的维护</li></ul></li><li>还有哪些其他系统会使用系统？</li><li><p>识别参与者</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmXBQI.jpg" alt="识别参与者"></li></ul></li><li><p>参与者的描述</p><ul><li>参与者定义时考虑的是用户的身份</li><li><font color="red">注意：</font>参与者的命名要唯一</li><li><font color="red"><strong>抽象的特殊参与者：</strong></font>调度器（更好）或者时钟</li><li><img src="https://s1.ax1x.com/2022/09/29/xmX0SA.jpg" alt="参与者的描述"></li></ul></li><li><p>参与者的建模是否合理：</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmXdWd.jpg" alt="参与者的建模是否合理"></li></ul></li><li><p><font color="red">寻找用例：</font>在寻找参与者的同时，要描述系统为参与者提供的服务以及参与者如何与系统交互</p><ul><li>不要在开始就尝试捕捉所有细节</li><li>要以穷举的方式考虑每个参与者与系统的交互情况</li><li>寻找用例和寻找参与者的过程是不能完全分开的</li><li><img src="https://s1.ax1x.com/2022/09/29/xmXaJH.jpg" alt="寻找用例"></li></ul></li><li><p>识别用例：</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmXrOP.jpg" alt="识别用例"></li><li><font color="red">注意：</font>不要我忘记系统启动、终止或维护等这些用例，调度器根据时间触发的用例等；在设计过程中也要避免用例粒度过细或者过粗的现象</li></ul></li><li><p>文本描述</p><ul><li>用例的名称是唯一的（动宾结构）</li><li>简要描述中介绍了参与者和系统如何进行交互，系统需要进行哪些原子操作等</li><li><img src="https://s1.ax1x.com/2022/09/29/xmXDyt.jpg" alt="文本描述"></li></ul></li><li><p>用例的命名：</p><ul><li>表明参与者的目标或者作用</li><li>使用主动语态：用动词开始</li><li>设计一系列操作流程(to-do list)</li></ul></li><li><p>用例模型过程中的检查项</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmXyef.jpg" alt="用例模型过程中的检查项"></li></ul></li><li><p>构建模型的第二步：为每一个用例进行具体的文档描述</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmX6w8.jpg" alt="构建用例模型的步骤"></li><li><img src="https://s1.ax1x.com/2022/09/29/xmXcTS.jpg" alt="用例建模的过程"></li></ul></li><li><p>用例建模的过程是逐步扩充的、迭代细化的：</p><ul><li>通过需求识别到用例（识别用例 Discovered）</li><li>简要描述这个用例的意义（用例简述 Briefly Described）</li><li>把基础事件流抽取出来（用例提纲 Outlined）</li><li>将事件流中的选择条件、约束等进一步细化（用例详细规约 Fully Described）</li><li><img src="https://s1.ax1x.com/2022/09/29/xmXWWj.jpg" alt="用例的全生命周期"></li></ul></li><li><p>举例：</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmX2Fg.jpg" alt="举例"></li><li><img src="https://s1.ax1x.com/2022/09/29/xmXRYQ.jpg" alt="举例"></li><li><img src="https://s1.ax1x.com/2022/09/29/xmXhSs.jpg" alt="举例"></li></ul></li><li><p>用例文档模板</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmX4ln.jpg" alt="用例文档模板"></li></ul></li><li><p>总结</p><ul><li><img src="https://s1.ax1x.com/2022/09/29/xmX5yq.jpg" alt="总结"></li></ul></li></ul><h3 id="9-3：用例建模精讲"><a href="#9-3：用例建模精讲" class="headerlink" title="9.3：用例建模精讲"></a>9.3：用例建模精讲</h3><ul><li><p>一、设定系统边界：</p><ul><li><font color="red">系统边界：</font>一个系统所包含的所有系统成分与系统以外各事物的分界线</li><li>系统边界会对用例以及参与者的定义有所影响</li><li>举例：</li><li><img src="https://s1.ax1x.com/2022/10/08/x8gBZD.md.jpg" alt="举例"></li><li>第一种设计方案：将收银员和顾客同时设置为系统外部的参与者，在这种方式中，他们共同拥有的用例是购买商品、登录和退货三个用例<ul><li><img src="https://s1.ax1x.com/2022/10/08/x8gwqO.md.jpg" alt="第一种设计方案"></li></ul></li><li>第二种设计方案：将整个零售店作为系统内部结构，在这种情况下，只有客户作为外部参与者与这个系统进行交互，进行购物或退货两种操作<ul><li><img src="https://s1.ax1x.com/2022/10/08/x8gNxx.md.jpg" alt="第二种设计方案"></li></ul></li><li>第三种设计方案：涵盖了后台管理部分的描述，因此添加了管理员和经理的角色<ul><li><img src="https://s1.ax1x.com/2022/10/08/x8gaM6.md.jpg" alt="第三种设计方案"></li></ul></li><li>通过三个例子可以看出，不同系统边界定义决定了与系统交互的对象，参与者与系统交互的方式，进而影响了用例模型的设计</li></ul></li><li><p>二、不要把用例定义与功能分解相混淆</p><ul><li><p><font color="red">功能分解：</font>将问题分解为力度小，独立的部分。</p><ul><li>不同的模块协同工作，体现系统的功能。</li><li>通常，一些功能分解并没有实际的意义。</li></ul></li><li><font color="red">缺点：</font><ul><li>使得需求的每一个分解部分丧失了其上下文语境</li><li>划分的越详细每一个部分就约细小，就需要更多的接口连接</li></ul></li><li><p><font color="red">用例：</font><strong>非常需要上下文语境信息</strong></p><ul><li><font color="red"><strong>不是</strong></font>功能分解的过程！！！</li><li>综合所有功能一起描述系统如何使用</li><li>需要包含语境信息</li></ul></li><li><p>举例：</p><ul><li><p>功能分解：</p><p><img src="https://s1.ax1x.com/2022/10/08/x8gdsK.md.jpg" alt="功能分解"></p></li><li><p>用例建模：</p><p><img src="https://s1.ax1x.com/2022/10/08/x8gDde.md.jpg" alt="用例建模"></p></li></ul></li><li><p>如何避免功能分解：</p><ul><li><img src="https://s1.ax1x.com/2022/10/08/x8g6JA.md.jpg" alt="避免功能分解"></li></ul></li></ul></li><li><p>三、何时使用包含关系？</p><ul><li>当多个用例有共享行为是，使用包含关系</li><li>为共享行为单独创建用例，被相关用例“包含”</li><li><img src="https://s1.ax1x.com/2022/10/08/x8gyid.md.jpg" alt="包含关系"></li></ul></li><li><p>四、何时使用扩展关系？</p><ul><li>一个用例与另外一个用例近似，只有少许额外的活动</li><li>将代表普遍或基本行为的情况定义为一个用例</li><li>将特殊的、例外的部分定义为扩展用例</li><li><img src="https://s1.ax1x.com/2022/10/08/x8grIH.md.jpg" alt="扩展关系"></li></ul></li><li><p>五、主要图标</p><ul><li><img src="https://s1.ax1x.com/2022/10/08/x8gcRI.md.jpg" alt="主要图标"></li></ul></li></ul><h3 id="9-4：建模工具介绍"><a href="#9-4：建模工具介绍" class="headerlink" title="9.4：建模工具介绍"></a>9.4：建模工具介绍</h3><ul><li>详见视频讲解</li></ul><h3 id="9-5：微信抢票应用案例"><a href="#9-5：微信抢票应用案例" class="headerlink" title="9.5：微信抢票应用案例"></a>9.5：微信抢票应用案例</h3><ul><li>详见视频讲解</li></ul><h1 id="第七周个人学习清单"><a href="#第七周个人学习清单" class="headerlink" title="第七周个人学习清单"></a>第七周个人学习清单</h1><p>软件系统设计（上）</p><ul><li>12.8 数据库选择策略</li><li>12.1 软件体系结构概念</li><li>12.2 软件设计原则</li><li>12.3 软件体系结构风格（一）</li></ul><p>要点：</p><ul><li><ol><li>选择数据库应该考虑哪些因素？了解MySQL、Mongodb、Redis等数据库的特点及适用场合</li></ol></li><li><ol><li>了解软件体系结构概念、发展历程</li></ol></li><li><ol><li>了解软件体系结构风格、模式和框架</li></ol></li><li><ol><li>理解软件设计原则中模块化、内聚和耦合的概念</li></ol></li></ul><h2 id="第十二章：软件系统设计"><a href="#第十二章：软件系统设计" class="headerlink" title="第十二章：软件系统设计"></a>第十二章：软件系统设计</h2><h3 id="12-1：软件体系结构概念"><a href="#12-1：软件体系结构概念" class="headerlink" title="12.1：软件体系结构概念"></a>12.1：软件体系结构概念</h3><p>软件的复杂性：</p><ul><li>当系统的规模和复杂度不断增大的时候，构造整个系统的关键是什么？</li></ul><p>软件工程师需要考虑的关键问题是：对整个系统的结构和行为进行抽象，一方面是寻求更好的方法是系统的整体设计更容易理解；另一方面是寻求构建大型软件系统的有效方法，实现系统级的复用</p><p><img src="https://s1.ax1x.com/2022/11/09/xz6Oaj.md.jpg" alt="举例"></p><p>对该程序的设计我们主要考虑：</p><ul><li>选择合适的分词方法和查询算法</li><li>建立可以快速查找的数据结构</li><li>外部存储文件和数据库的构造</li></ul><p><img src="https://s1.ax1x.com/2022/11/09/xz6xGq.md.jpg" alt="举例"></p><p>我们可将该程序抽象为：网页搜索、预处理、检索服务三部分</p><p>整个系统可以划分成三个模块：</p><ul><li>信息采集模块：实现网页搜集功能</li><li>标引处理模块：实现预处理功能</li><li><p>信息检索模块：实现检索服务的功能</p></li><li><p><img src="https://s1.ax1x.com/2022/11/09/xz6vin.md.jpg" alt="图"></p></li></ul><font color="red">随着软件系统的规模和复杂性不断增加，对系统的全局结构设计和规划变得比算法的选择和数据结构的设计明显重要得多</font><hr><p>软件体系结构概念：</p><p><font color="blue">软件体系结构(Software Architecture)</font>包括构成系统的设计元素的描述、设计元素之间的交互、设计元素的组合模式以及在这些模式中的约束</p><p>其主要包含五个方面内容：</p><ul><li>构件：一组基本的构成要素</li><li>连接件：这些要素之间的连接关系</li><li>约束：作用于这些要素或连接关系上的限制条件</li><li>质量：性能</li><li>物理分布：这些要素连接之后形成的拓扑结构</li></ul><p>简单地说：软件体系结构 = 构件 + 连接件 + 约束</p><ul><li>如何将复杂的软件系统划分成模块</li><li>如何规范模块的构成</li><li>如何将这些模块组织成为完整的系统</li><li>如何保证系统的质量要求</li></ul><hr><p><font color="blue">构件</font>是具有某种功能的可复用的软件结构单元，表示系统中主要的计算元素和数据存储</p><ul><li>任何在系统运行中承担功能的软件体都可以看做构件</li><li>构件是封装实体，只能通过接口调用，并以服务呈现</li></ul><p><font color="blue">连接</font>是构件间建立和维护行为关联与信息传递的途径</p><ul><li>连接发生和维持的机制</li><li>连接协议</li></ul><p><font color="blue">连接件</font>表示构件之间的交互并实现构件之间的连接（可以看做特殊的构件）</p><ul><li>一般构件是软件功能设计和实现的承载体</li><li>连接件是负值完成构件之间信息交换和行为联系的专用构件</li></ul><hr><p>软件体系结构的目标</p><p>可重用性：复用已经实现证明的体系结构，或提供可重用资产</p><p>可扩展性：易于增加新的功能</p><p>可改变性：易于适应需求变更</p><p>简单性：将复杂问题简单化，使系统更加容易理解和实现</p><p>有效性：体现早期设计决策，展现系统满足需求的能力</p><hr><p>软件体系结构的发展</p><p><img src="https://s1.ax1x.com/2022/11/09/xz6XIs.md.jpg" alt="图"></p><ul><li><font color="blue">体系结构风格：</font>用于描述某一特定应用领域中系统组织的惯用模式，反映了领域中众多系统所共有的结构和语义特性。</li><li><font color="blue">设计模式：</font>描述了软件系统设计过程中常见问题的一些解决方法，通常是从大量成功实践中总结出来并被广泛公认的实践和知识</li><li><font color="blue">软件框架：</font>软件框架是由开发人员定制的应用系统的股价，是整个或部分系统的可重用设计，由一组抽象构件和构件实例间的交互方式组成</li><li><p><font color="blue">框架和体系结构的关系</font></p><ul><li>体系结构的呈现形式是一个设计规约，而框架则是“半成品”的软件</li><li>体系结构的目的是指导软件系统的开发，而框架的目的是设计复用</li></ul></li><li><p><font color="blue">框架和设计模式的关系：</font></p><ul><li>框架给出的是整个应用的体系结构；而设计模式则给出了但以涉及问题的解决方案，且可以在不同的应用程序或者框架中进行应用</li><li>设计模式的目标是改善代码结构，提高程序的结构质量；框架强调的是设计的重用性和系统的可扩展性，以缩短开发周期，提高开发质量。</li></ul></li></ul><h3 id="12-2软件设计原则"><a href="#12-2软件设计原则" class="headerlink" title="12.2软件设计原则"></a>12.2软件设计原则</h3><p>设计原则是系统分解和模块设计的基本标准，应用这些原则可以使代码更加灵活、易于维护和扩展</p><p>通用原则：</p><ul><li>抽象<ul><li>关注事物中与问题相关部分而忽略其他无关部分的一种思考方法</li></ul></li><li>封装和信息隐藏<ul><li>指每个软件单元对其他所有单元都隐藏只记得设计决策，各个单元的特性通过其外部可见的接口来描述</li><li><font color="red">要求：</font>应将单元接口设计得尽可能简单，并将单元对于环境的假设和要求将至最低</li></ul></li><li>模块化<ul><li>在逻辑和物理上将整个系统分解成多个更小的部分，其实质是“分而治之”，即将一个复杂的问题分解成若干个简单问题，然后逐个解决</li><li>系统分解的目标：<font color="red">高内聚、低耦合</font><ul><li>内聚性是一个模块或子系统内部的依赖程度</li><li>耦合性是两个模块或子系统之间依赖关系的强度</li></ul></li></ul></li><li><p>层次化</p><ul><li><p>分层(Layering)</p><ul><li>每一层可以访问下一层，不能访问上一层</li><li>封闭式结构：每一层只能访问与其相邻的下一层</li><li>开放式结构：每一层还可以访问下面更低的层次</li><li>层次的数目不应超过7+-2层</li></ul></li><li><p>划分(Partitioning)</p><ul><li>系统被分解成相互对等的若干模块单元</li><li>每个模块之间依赖较少，可以独立运行</li></ul></li><li><p><font color="red">注意：</font>模块单元增加了处理开销，过渡分层或划分会增加复杂性</p></li></ul></li><li><p>复用</p><ul><li>利用某些已开发的、对建立新系统有用的软件元素来生成新的软件系统，其好处在于提高生产效率，提高软件质量<ul><li>源代码复用：对构件库中的源代码构件进行复用</li><li>软件体系结构复用：对已有的软件体系结构进行复用</li><li>框架复用：对特定领域中存在的一个公共体系结构及其构件进行复用</li><li>设计模式：通过为对象协作提供思想和返利来强调方法的复用</li></ul></li></ul></li></ul><h3 id="12-3软件体系结构风格（一）"><a href="#12-3软件体系结构风格（一）" class="headerlink" title="12.3软件体系结构风格（一）"></a>12.3软件体系结构风格（一）</h3>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模学习</title>
      <link href="/archives/ae67057d.html"/>
      <url>/archives/ae67057d.html</url>
      
        <content type="html"><![CDATA[<h1 id="数学建模学习"><a href="#数学建模学习" class="headerlink" title="数学建模学习"></a>数学建模学习</h1><ul><li><a href="(https://www.bilibili.com/video/BV1kC4y1a7Ee?p=1&amp;vd_source=605fdf76b89347cc08747ed724ad5651">学习视频资源</a>)</li><li>观看指南：<br>p1——p2基础<br>p3——p36算法<br>p37——56建模（MATLAB）<br>p57——65写作<br>p66——69，p81——83，p108——111获奖指南总结性的东西<br>p70——80国赛<br>p84——107美赛<br>p112——120实战</li></ul><h1 id="数学建模基础入门与组队策略"><a href="#数学建模基础入门与组队策略" class="headerlink" title="数学建模基础入门与组队策略"></a>数学建模基础入门与组队策略</h1><h2 id="数学建模的分类"><a href="#数学建模的分类" class="headerlink" title="数学建模的分类"></a>数学建模的分类</h2><ol><li>按所用数学知识分类：</li></ol><ul><li>初等模型、几何模型、微积分模型、微分方程模型、图论模型、概率统计模型、规划论模型等。</li></ul><ol><li>按所解决的问题领域分类：</li></ol><ul><li>物理模型：自然科学领域内的问题。</li><li>非物理模型：经济模型、交通模型、人口模型、生态模型、环境模型、医学模型、社会学模型。</li></ul><ol><li>按所建模目的分类：</li></ol><ul><li>描述模型、分析模型、预报模型、优化模型、决策模型、控制模型等。</li></ul><ol><li>按模型的表现特性分类：</li></ol><ul><li>确定模型、随机模型；静态模型、动态模型、离散模型、连续模型</li></ul><h2 id="数学模型有哪些模块？"><a href="#数学模型有哪些模块？" class="headerlink" title="数学模型有哪些模块？"></a>数学模型有哪些模块？</h2><h3 id="数学建模的一般步骤"><a href="#数学建模的一般步骤" class="headerlink" title="数学建模的一般步骤"></a>数学建模的一般步骤</h3><h4 id="1、模型假设"><a href="#1、模型假设" class="headerlink" title="1、模型假设"></a>1、模型假设</h4><blockquote><p>针对问题特点和建模目的作出合理的、简化的假设</p></blockquote><p>在合理和简化之中作出折中</p><h4 id="2、建立模型"><a href="#2、建立模型" class="headerlink" title="2、建立模型"></a>2、建立模型</h4><blockquote><p>用数学的语言、符号描述问题</p><p>发挥想象力</p></blockquote><p>尽量采用简单的数学工具</p><p><img src="https://s2.loli.net/2022/08/07/GOgQestmKZHoX4i.png" alt="数学建模全过程"></p><ul><li><strong>表述（问题重述）</strong>：根据建模目的和信息将实际问题“翻译”成数学问题</li></ul><p>【注意】问题重述不是简单的将原问题复制粘贴，要将现实世界的问题通过表述归纳的方法利用数学公式或算法建立一定的数学模型</p><ul><li><strong>求解</strong>：选择适当的数学方法利用软件对数学模型进行求解</li><li><strong>解释</strong>：将数学语言表述的解答“翻译”回实际对象（结果的好坏、得到什么信息、浅层？深层？）</li><li><strong>验证</strong>：用现实对象的信息检验得到的解答（以此来检验该模型是否准确）</li></ul><h2 id="完整的数学建模论文的要素"><a href="#完整的数学建模论文的要素" class="headerlink" title="完整的数学建模论文的要素"></a>完整的数学建模论文的要素</h2><p><img src="https://s2.loli.net/2022/08/07/CQx5GbcifyHDmrU.png" alt="完整的数学建模论文的要素"></p><ul><li><strong>题目</strong>：点睛之笔</li><li><strong>摘要、关键词（关键）</strong>：整个评审的关键，要传递出基本信息</li><li><strong>问题重述</strong>：用自己的语言，将题目中的问题转述称数学语言</li><li><strong>问题假设</strong>：要对模型作出合理的假设或对全文作出一个合理假设</li><li><strong>问题分析</strong>：针对这个问题，你打算怎么做、怎么解？用什么模型来求解？你的思路是什么？</li><li><strong>符号说明</strong>：常用符号为了避免冗余可以将其意写在符号说明中</li><li><strong>模型建立</strong>：通过数学符号和公式建立一个实现某一功能的数学模型</li><li><strong>模型求解</strong>：利用计算软件等对模型求解的过程</li><li><strong>模型优缺点评价</strong>：评价模型优劣，有哪些优缺点，是否经得起考验</li><li><strong>参考文献</strong>：<a href="(https://baike.baidu.com/item/参考文献标准格式/15571284?fr=aladdin">参照标准文献写作格式</a>)</li></ul><h2 id="分模块学习"><a href="#分模块学习" class="headerlink" title="分模块学习"></a>分模块学习</h2><h3 id="题目备战："><a href="#题目备战：" class="headerlink" title="题目备战："></a>题目备战：</h3><ul><li>掌握固定模式即可</li><li>基于<strong><strong>模型的</strong></strong>研究与分析</li><li>也可以使用比较诙谐可爱的题目（正经）</li></ul><h3 id="摘要备战："><a href="#摘要备战：" class="headerlink" title="摘要备战："></a>摘要备战：</h3><ul><li>总结归纳能力，通过看高水平论文或优秀论文掌握</li><li>切忌大段描述，一般摘要不超过整个页面的四分之三</li></ul><h3 id="问题重述："><a href="#问题重述：" class="headerlink" title="问题重述："></a>问题重述：</h3><ul><li>切忌直接抄袭问题，对描述简短的拆建，描述复杂的精炼</li></ul><h3 id="问题假设："><a href="#问题假设：" class="headerlink" title="问题假设："></a>问题假设：</h3><ul><li>明确假设点是关键，只要对我们的结果有影响，但又是小概率事件；或者对结果有影响，难以计算获取这类的</li><li>考察对问题的理解以及对模型的适用性能力的评价</li></ul><h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><ul><li>动脑能力是关键，现将问题进行定性，然后说明如何求解这类问题</li><li>考察对问题的求解能力，不要求写具体的模型和算法，而是要提供一个思路</li><li>写思路：分析问题、拆解问题、匹配模型</li><li>最好做一个流程图，能更加直观地显示</li></ul><h3 id="符号说明："><a href="#符号说明：" class="headerlink" title="符号说明："></a>符号说明：</h3><ul><li>文中出现的符号均需说清楚，用希腊字母</li></ul><h3 id="模型建立："><a href="#模型建立：" class="headerlink" title="模型建立："></a>模型建立：</h3><ul><li>将常见模型进行归纳整理，形成算法库</li></ul><h3 id="模型求解："><a href="#模型求解：" class="headerlink" title="模型求解："></a>模型求解：</h3><ul><li>对编程语言熟练掌握</li></ul><h3 id="模型优缺点评价："><a href="#模型优缺点评价：" class="headerlink" title="模型优缺点评价："></a>模型优缺点评价：</h3><ul><li>对模型的不足提前掌握，并应用于不足阐述</li></ul><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><ul><li>按标准格式书写</li></ul><h2 id="数学建模备战应该准备什么？"><a href="#数学建模备战应该准备什么？" class="headerlink" title="数学建模备战应该准备什么？"></a>数学建模备战应该准备什么？</h2><ul><li>（1）必须找好两个靠谱的队友，定期组织研讨和交流</li><li>（2）必须每三天看一篇优秀的数模论文，重点看摘要和问题分析及建模过程</li><li>（3）必须明确三人的分工，确保写作、建模、编程 团队都具备</li><li>（4）必须清晰地明白建模各部分到底应该写什么</li><li>（5）必须对所有常见算法进行系统的学习，明确算法用途和实现过程</li><li>备战时间建议：</li><li>每天拿出两个小时学习数学建模：按照算法、编程、写作、排版的顺序进行</li><li>算法：课程+《数学建模书籍（司守奎）》，编程（Matlab自学一本通2018版本即可），写作（整理优秀论文对语言进行学习），排版（学习LATEX软件）</li><li>每人每三天阅读完一篇获奖优秀论文，并和队友沟通分享经验</li><li>每半个月适当开一次总结会，发表自己的学习收获和下一步的工作中心</li><li><p>每月进行一次全真模拟，找老师进行论文评估</p></li><li><p>比赛开始后，三人应首先集中一切力量准备一套切实可行的思路，不可盲目直接建模，一旦敲定思路，论文写作成员要尽快寻找该模型所涉及到的原理知识，编程人员即使调试对应代码，建模人员要及时找出赛题与该模型的结合点</p></li><li>建模与论文撰写应该是同步的，队长要做好信息汇总与结果结论反馈工作，确保不会出现信息延迟等失误</li></ul><h1 id="线性规划模型基本原理与案例分享"><a href="#线性规划模型基本原理与案例分享" class="headerlink" title="线性规划模型基本原理与案例分享"></a>线性规划模型基本原理与案例分享</h1><h2 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h2><h3 id="例-1-1"><a href="#例-1-1" class="headerlink" title="例 1.1"></a>例 1.1</h3><p><img src="https://s1.ax1x.com/2022/08/31/v4Ijxg.jpg" alt="例1.1"></p><p>上述问题的数学模型：设该厂生产x1台甲机床和x2台乙机床时总利润z最大，则x1，x2应满足：</p><blockquote><p>max    z = 4x1 + 3x2        (1.1)</p><p>2x1 + x2 &lt; 10</p><p>x1 + x2  &lt;= 8</p><p>x2 &lt;= 7</p><p>x1, x2 &gt;= 0</p></blockquote><p>变量x1,x2称之为决策向量，(1.1)式被称之为问题的目标函数，(1.2)中几个不等式是问题的约束条件，记为s.t.(即 subject to)</p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 例1.1</span></span><br><span class="line">f = [<span class="number">-4</span>,<span class="number">-3</span>];</span><br><span class="line">a = [<span class="number">2</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">1</span>;<span class="number">0</span>,<span class="number">1</span>;<span class="number">-1</span>,<span class="number">-1</span>];</span><br><span class="line">b = [<span class="number">10</span>;<span class="number">8</span>;<span class="number">7</span>;<span class="number">0</span>];</span><br><span class="line">[x,y] = linprog(f,a,b)</span><br><span class="line">x,y=-y</span><br></pre></td></tr></tbody></table></figure><font color="red">目标函数及约束条件均为线性函数，故被称为线性规划问题</font><h3 id="线性规划问题的解的概念"><a href="#线性规划问题的解的概念" class="headerlink" title="线性规划问题的解的概念"></a>线性规划问题的解的概念</h3><p>对比MATLAB解决线性规划问题的标准模型和数学标准模型</p><p>MATLAB标准模型为：</p><p>其中c，x，b，beq，lb，ub为列向量，c称为价值向量，b称为资源向量，A，Aeq为矩阵</p><p><a href="https://imgse.com/i/v4Tg1O"><img src="https://s1.ax1x.com/2022/08/31/v4Tg1O.png" alt="v4Tg1O.png"></a>数学标准模型为：</p><p>将数学模型转换为MATLAB标准模型才能编程使用（最大值加”-“改为最小值）</p><p><img src="https://s1.ax1x.com/2022/08/31/v4Tc9K.png" alt="v4Tc9K.png"></p><font color="red">可行解：</font>满足约束条件(1.4)的解x=[x1,L,xn]<sup>T</sup> ，称为线性规划的可行解，而使目标函数(1.3)达到最大值的可行解叫做最优解。<font color="red">可行域：</font>所有可行解构成的集合称为问题的可行域，记为R。---MATLAB 中求解线性规划的命令为：<figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[x,faval] = linprog(c,A,b)</span><br><span class="line">[x,faval] = linprog(c,A,b,Aeq,beq)</span><br><span class="line">[x,faval] = linprog(c,A,b,Aeq,beq,lb,ub)</span><br></pre></td></tr></tbody></table></figure>其中x返回的是决策向量的取值，fval返回的是目标函数的最优值，c为价值向量，A，b对应的是线性不等式约束，Aeq，beq对应的是线性等式约束，lb和ub分别对应的是决策向量的下界向量和上界向量。### 例1.2![例1.2](https://s1.ax1x.com/2022/08/31/v4Oy4A.png)<figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 例1.2</span></span><br><span class="line">f = [<span class="number">-2</span>;<span class="number">-3</span>;<span class="number">5</span>];</span><br><span class="line">a = [<span class="number">-2</span>,<span class="number">5</span>,<span class="number">-1</span>;<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>];</span><br><span class="line">b = [<span class="number">-10</span>;<span class="number">12</span>];</span><br><span class="line">aeq = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">beq = <span class="number">7</span>;</span><br><span class="line">[x,y] = linprog(f,a,b,aeq,beq,<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">1</span>));</span><br><span class="line">x,y=-y</span><br></pre></td></tr></tbody></table></figure>### 可以转换为线性规划的问题![v4xFvq.png](https://s1.ax1x.com/2022/08/31/v4xFvq.png)### 1.2投资的收益和风险![问题](https://s1.ax1x.com/2022/09/04/vTeiwD.png)表1.1 投资的相关数据更多操作| s<sub>i</sub> | r<sub>i</sub>(%) | q<sub>i</sub>(%) | p<sub>i</sub>(%) | u<sub>i</sub>(元) || ------------- | ---------------- | ---------------- | ---------------- | ----------------- || s<sub>1</sub> | 28               | 2.5              | 1                | 103               || s<sub>2</sub> | 21               | 1.5              | 2                | 198               || s<sub>3</sub> | 23               | 5.5              | 4.5              | 52                || s<sub>4</sub> | 25               | 2.6              | 6.5              | 40                |试给该公司设计一种投资组合方案，即用给点资金M，有选择的购买若干种资产或存银行生息，使净收益尽可能大，使总体风险尽可能小。![符号规定](https://s1.ax1x.com/2022/09/04/vTnfFe.png)![基本假设](https://s1.ax1x.com/2022/09/04/vTnoQI.png)![模型的分析与建立](https://s1.ax1x.com/2022/09/04/vTnvWj.png)![](https://s1.ax1x.com/2022/09/04/vTuPmV.md.png)其中目标函数第一项，就是净收益，我们要使净收益最大；目标函数第二项，先看后半部分max{q<sub>i</sub>x<sub>i</sub>}，首先找出最大的风险损失率，然后使其最小（因为我们在假设时是将最大的风险损失率当做整体的风险损失率）约束条件第一项指的是，你所真正投资的钱加上投资所需的费用，总和应该等于你的总资金。<font color="red">三种方法将多目标规划转换为线性规划：</font><ul><li><p>a)在实际投资中，投资者承受风险的程度是不一样的，若给定风险一个界限a，使最大的一个风险</p><p>q<sub>i</sub>x<sub>i</sub>/M &lt;= a，可找到相应的投资方案。这样把多目标规划变成一个线性规划。</p><p><img src="https://s1.ax1x.com/2022/09/04/vTKeUS.md.png" alt="vTKeUS.md.png"></p></li></ul><p>将原先需要最小化的损失限界，只要小于该比例即可</p><ul><li>b)固定盈利水平，只要使得我的盈利不小于k就可以</li></ul><p><img src="https://s1.ax1x.com/2022/09/04/vTKYUU.md.png" alt="vTKYUU.md.png"></p><ul><li>c)投资者在权衡投资风险和预期收益两方面时，希望选择一个令自己满意的投资组合，对风险、收益分别赋予权重s(0&lt;s&lt;=1)，s称为投资偏好系数。</li></ul><p><img src="https://s1.ax1x.com/2022/09/04/vTKBK1.md.png" alt="vTKBK1.md.png"></p><p>其中第一项：使得总风险减去总收益最小即可（也可以写作总收益减去总风险最大）</p><font color="red">模型一求解：</font><p><img src="https://s1.ax1x.com/2022/09/04/vTMpZV.md.png" alt="vTMpZV.md.png"></p><figure class="highlight matlab"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 模型一</span></span><br><span class="line">clc,clear</span><br><span class="line">a = <span class="number">0</span>;<span class="built_in">hold</span> on</span><br><span class="line"><span class="keyword">while</span> a&lt;<span class="number">0.05</span></span><br><span class="line">    c = [<span class="number">-0.05</span>,<span class="number">-0.27</span>,<span class="number">-0.19</span>,<span class="number">-0.185</span>,<span class="number">-0.185</span>];</span><br><span class="line">    <span class="comment">% 四行一列的零矩阵代表银行存款投资为0</span></span><br><span class="line">    A = [<span class="built_in">zeros</span>(<span class="number">4</span>,<span class="number">1</span>),<span class="built_in">diag</span>([<span class="number">0.025</span>,<span class="number">0.015</span>,<span class="number">0.055</span>,<span class="number">0.026</span>])];</span><br><span class="line">    b = a*<span class="built_in">ones</span>(<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line">    Aeq = [<span class="number">1</span>,<span class="number">1.01</span>,<span class="number">1.02</span>,<span class="number">1.045</span>,<span class="number">1.065</span>];</span><br><span class="line">    beq = <span class="number">1</span>;</span><br><span class="line">    LB = <span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">    [x,Q] = linprog(c,A,b,Aeq,beq,LB);</span><br><span class="line">    Q = -Q;</span><br><span class="line">    <span class="built_in">plot</span>(a,Q,<span class="string">'*k'</span>);</span><br><span class="line">    a = a+<span class="number">0.001</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">xlabel(<span class="string">'a'</span>),ylabel(<span class="string">'Q'</span>)</span><br><span class="line">title(<span class="string">'风险与收益关系图'</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s1.ax1x.com/2022/09/04/vTMvfe.md.png" alt="风险与收益关系图"></p><p><img src="https://s1.ax1x.com/2022/09/04/vTQ9OI.md.png" alt=""></p><h2 id="整数规划基本原理与编程实践"><a href="#整数规划基本原理与编程实践" class="headerlink" title="整数规划基本原理与编程实践"></a>整数规划基本原理与编程实践</h2> <font color="red">整数规划模型(IP)：</font><p>在数学规划中（部分或全部）限制为整数时，称为整数规划。若在线性规划中，变量限制为整数，则称为整数线性规划。目前所流行的求解整数规划的方法，往往只适用于整数线性规划。</p><font color="red">整数规划分类：</font><ul><li>变量全部限制为整数时，称为纯（完全）整数规划。</li><li>变量部分限制为整数时，称为混合整数规划。</li></ul><font color="red">整数规划特点：</font><ul><li>原线性规划有最优解，当自变量限制为整数后，其整数规划解出现下述情况：<ul><li>原线性规划最优解全是整数，则整数规划最优解和线性规划最优解一致。</li><li>整数规划无可行解。</li><li>有可行解（当然就存在最优解），但最优解值变差。</li></ul></li><li>整数规划最优解不能按照实数最优解简单取整获得。</li></ul><p><img src="https://s1.ax1x.com/2022/09/05/vTN8Nn.md.png" alt="例一"></p><p><img src="https://s1.ax1x.com/2022/09/05/vTNGhq.md.png" alt="例一"></p><p>其中A代表零件的不同类型，B代表不同的下料（加工）方式，a代表使用该下料方式下生产出该零件的数量，b代表所需的该零件的总量。</p><p>该模型为：</p><p><img src="https://s1.ax1x.com/2022/09/05/vTNrNR.md.jpg" alt="vTNrNR.md.jpg"></p><p>第一项使得原材料最小，第二项使得每种下料方式获取的不同种类的零件其总和大于等于该零件的需求量。</p><p><img src="https://s1.ax1x.com/2022/09/05/vTN2jO.md.png" alt="例二"></p><p><img src="https://s1.ax1x.com/2022/09/05/vTNo4I.md.png" alt=""></p><p><img src="https://s1.ax1x.com/2022/09/05/vTUUPI.md.png" alt=""></p><p>其中最小值指所需费用：第一项为工厂的运量乘以运往某地的单价即运输费用；第二项为建厂的费用。</p><p>限制条件第一项指的是该工厂的运量应该小于该工厂的生产量</p><p><img src="https://s1.ax1x.com/2022/09/05/vTU5sU.md.png" alt="vTU5sU.md.png"></p><p><img src="https://s1.ax1x.com/2022/09/05/vTUqiR.md.png" alt="vTUqiR.md.png"></p><p>（ILP）即整数规划</p><h3 id="分支定界算法求解整数规划原理及编程实现"><a href="#分支定界算法求解整数规划原理及编程实现" class="headerlink" title="分支定界算法求解整数规划原理及编程实现"></a>分支定界算法求解整数规划原理及编程实现</h3>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习</title>
      <link href="/archives/8df0ec14.html"/>
      <url>/archives/8df0ec14.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习指南"><a href="#学习指南" class="headerlink" title="学习指南"></a>学习指南</h1><p><a href="https://www.bilibili.com/video/BV12J41137hu?share_source=copy_web&amp;vd_source=125214e0a845d5ec0516cfb855085d1c">学习视频</a></p><h1 id="chapter-01"><a href="#chapter-01" class="headerlink" title="chapter 01"></a>chapter 01</h1><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><ol><li>建立一个新文件夹，用于存放代码 (Creat a new directory for your code)</li><li><p>新建一个java文件 (Creat a new java file)</p><ul><li>文件名后缀为.java (The file name extension is .java)</li><li>Hello.java</li><li><p>【注意】系统可能没有显示文件后缀名，需要手动打开 </p><p>[Attention] The system may not display the file name extension. You need to open the file manually</p></li></ul></li><li>编写代码 (Edit code)</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>{</span><br><span class="line">        System.out.print(<span class="string">"Hello,World!"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><p>编译javac java文件，会生成一个class文件</p><p>compiling the javac java file generates a “class file”</p></li><li><p>运行class文件，java class文件</p><p>Run the class file, java “class file”</p></li></ol><p><img src="https://s2.loli.net/2022/08/05/orV8EYXvzCS2ApI.png" alt="java01.png"></p><h2 id="可能遇到的情况-What-you-might-encounter"><a href="#可能遇到的情况-What-you-might-encounter" class="headerlink" title="可能遇到的情况 (What you might encounter)"></a>可能遇到的情况 (What you might encounter)</h2><ol><li><p>每个单词的大小写不能出现问题，<strong>java是大小写敏感的</strong></p><p>The case of each word should not be incorrect. <strong>java is case sensitive</strong></p></li><li><p>尽量使用英文 (Try to use English)</p></li><li><p><strong>文件名</strong> 和 <strong>类名</strong> 必须保证一致 (<strong>File name</strong> and <strong>Class name</strong> must be the same)</p></li><li><p>符号不能使用中文 (The symbol cannot be in Chinese)</p></li></ol><h2 id="注释-（comment）"><a href="#注释-（comment）" class="headerlink" title="注释 （comment）"></a>注释 （comment）</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 单行注释 Single-line comments</span></span><br><span class="line">        <span class="comment">// 输出一个Hello,World! Output a "Hello,World!"</span></span><br><span class="line">        System.out.println(<span class="string">"HelloWorld!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 多行注释 Multiline comment /* 注释 */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//JavaDoc：文档注释</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Description</span> HelloWorld!</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Author</span> 聂千龙</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *                    _ooOoo_</span></span><br><span class="line"><span class="comment"> *                   o8888888o</span></span><br><span class="line"><span class="comment"> *                   88" . "88</span></span><br><span class="line"><span class="comment"> *                   (| -_- |)</span></span><br><span class="line"><span class="comment"> *                    O\ = /O</span></span><br><span class="line"><span class="comment"> *                ____/`---'\____</span></span><br><span class="line"><span class="comment"> *              .   ' \\| |// `.</span></span><br><span class="line"><span class="comment"> *               / \\||| : |||// \</span></span><br><span class="line"><span class="comment"> *             / _||||| -:- |||||- \</span></span><br><span class="line"><span class="comment"> *               | | \\\ - /// | |</span></span><br><span class="line"><span class="comment"> *             | \_| ''\---/'' | |</span></span><br><span class="line"><span class="comment"> *              \ .-\__ `-` ___/-. /</span></span><br><span class="line"><span class="comment"> *           ___`. .' /--.--\ `. . __</span></span><br><span class="line"><span class="comment"> *        ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".</span></span><br><span class="line"><span class="comment"> *       | | : `- \`.;`\ _ /`;.`/ - ` : | |</span></span><br><span class="line"><span class="comment"> *         \ \ `-. \_ __\ /__ _/ .-` / /</span></span><br><span class="line"><span class="comment"> * ======`-.____`-.___\_____/___.-`____.-'======</span></span><br><span class="line"><span class="comment"> *                    `=---='</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * .............................................</span></span><br><span class="line"><span class="comment"> *          佛祖保佑             永无BUG</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *  佛曰:</span></span><br><span class="line"><span class="comment"> *          写字楼里写字间，写字间里程序员；</span></span><br><span class="line"><span class="comment"> *          程序人员写程序，又拿程序换酒钱。</span></span><br><span class="line"><span class="comment"> *          酒醒只在网上坐，酒醉还来网下眠；</span></span><br><span class="line"><span class="comment"> *          酒醉酒醒日复日，网上网下年复年。</span></span><br><span class="line"><span class="comment"> *          但愿老死电脑间，不愿鞠躬老板前；</span></span><br><span class="line"><span class="comment"> *          奔驰宝马贵者趣，公交自行程序员。</span></span><br><span class="line"><span class="comment"> *          别人笑我忒疯癫，我笑自己命太贱；</span></span><br><span class="line"><span class="comment"> *          不见满街漂亮妹，哪个归得程序员？</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * _ooOoo_</span></span><br><span class="line"><span class="comment"> * o8888888o</span></span><br><span class="line"><span class="comment"> * 88" . "88</span></span><br><span class="line"><span class="comment"> * (| -_- |)</span></span><br><span class="line"><span class="comment"> *  O\ = /O</span></span><br><span class="line"><span class="comment"> * ___/`---'\____</span></span><br><span class="line"><span class="comment"> * .   ' \\| |// `.</span></span><br><span class="line"><span class="comment"> * / \\||| : |||// \</span></span><br><span class="line"><span class="comment"> * / _||||| -:- |||||- \</span></span><br><span class="line"><span class="comment"> * | | \\\ - /// | |</span></span><br><span class="line"><span class="comment"> * | \_| ''\---/'' | |</span></span><br><span class="line"><span class="comment"> * \ .-\__ `-` ___/-. /</span></span><br><span class="line"><span class="comment"> * ___`. .' /--.--\ `. . __</span></span><br><span class="line"><span class="comment"> * ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".</span></span><br><span class="line"><span class="comment"> * | | : `- \`.;`\ _ /`;.`/ - ` : | |</span></span><br><span class="line"><span class="comment"> * \ \ `-. \_ __\ /__ _/ .-` / /</span></span><br><span class="line"><span class="comment"> * ======`-.____`-.___\_____/___.-`____.-'======</span></span><br><span class="line"><span class="comment"> * `=---='</span></span><br><span class="line"><span class="comment"> * .............................................</span></span><br><span class="line"><span class="comment"> *           佛曰：bug 泛滥，我已瘫痪！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="标识符注意"><a href="#标识符注意" class="headerlink" title="标识符注意"></a>标识符注意</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        所有标识符都应以字母（A-Z或者a-z），美元符（&amp;）或者下划线（_）开始</span></span><br><span class="line"><span class="comment">        首字母之后可以是字母（A-Z或者a-z），美元符（&amp;）或者下划线（_）或数字的任何字符组合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">$Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">_Hello</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">_1</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line"><span class="comment">//        String _# = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String _% = "Nieqianlong";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        String 1Hello = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String #Hello = "Nieqianlong";</span></span><br><span class="line"><span class="comment">//        String *Hello = "Nieqianlong";</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不能使用关键字作为变量名或方法名</span></span><br><span class="line">        <span class="comment">// 标识符是大小写敏感的!!!</span></span><br><span class="line"><span class="comment">//        String class = "Nieqianlong";</span></span><br><span class="line">        <span class="comment">// 合法标识符举例：age、&amp;salary、_value、__1_value</span></span><br><span class="line">        <span class="comment">// 非法标识符举例：123abc、-salary、#abc</span></span><br><span class="line">        <span class="comment">//可以使用中文命名，但是一般不建议这样去用，也不建议用拼音，很Low</span></span><br><span class="line">        String 王者荣耀 = <span class="string">"百星王者"</span>;</span><br><span class="line">        System.out.println(王者荣耀);</span><br><span class="line">        <span class="type">String</span> <span class="variable">mingzi</span> <span class="operator">=</span> <span class="string">"Nieqianlong"</span>;</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-02"><a href="#Chapter-02" class="headerlink" title="Chapter 02"></a>Chapter 02</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="Java是强类型语言"><a href="#Java是强类型语言" class="headerlink" title="Java是强类型语言"></a>Java是强类型语言</h3><ul><li>要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用</li></ul><h3 id="Java的数据类型分为两大类"><a href="#Java的数据类型分为两大类" class="headerlink" title="Java的数据类型分为两大类"></a>Java的数据类型分为两大类</h3><ul><li>基本类型(primitive type)</li><li>引用类型(reference type)</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 整数</span></span><br><span class="line"><span class="comment">//        String a = 10;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">"Hello"</span>;</span><br><span class="line"><span class="comment">//        int num = "Hello";</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(num);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 八大基本数据类型</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">// 最常用</span></span><br><span class="line"><span class="comment">//        byte num2 = 200;</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">num3</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> <span class="number">40L</span>; <span class="comment">//Long类型要在数字后边加L</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浮点数</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">num5</span> <span class="operator">=</span> <span class="number">50.1F</span>; <span class="comment">// float类型要在数字后面加上一个F</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num6</span> <span class="operator">=</span> <span class="number">3.141592653589793238462643</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">'A'</span>;</span><br><span class="line"><span class="comment">//        char name = '聂千龙';</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">name1</span> <span class="operator">=</span> <span class="string">'聂'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串,String不是关键字，而是类</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">namea</span> <span class="operator">=</span> <span class="string">"聂千龙"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 布尔值：是非</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 整数拓展     进制      二进制0b     十进制    八进制0     十六进制0x</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">010</span>;   <span class="comment">//八进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">0x10</span>;  <span class="comment">//十六进制  A~F</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(i3);</span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">// 浮点数拓展   银行业务怎么表示？</span></span><br><span class="line">        <span class="comment">// BigDecimal</span></span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">//float 有限  离散  舍入误差    大约  接近但不等于</span></span><br><span class="line">        <span class="comment">//double</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="comment">// 最好完全避免使用浮点数进行比较</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.1f</span>; <span class="comment">//0.1</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.0</span>/<span class="number">10</span>;  <span class="comment">//0.1</span></span><br><span class="line"></span><br><span class="line">        System.out.println(f == d);</span><br><span class="line">        System.out.println(f);</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">21313131311313313f</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">d2</span> <span class="operator">=</span> d1 + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(d1 == d2);</span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="comment">// 字符拓展</span></span><br><span class="line">        <span class="comment">//==================================================================</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">'a'</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">'中'</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c1); <span class="comment">//强制类型转换</span></span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c2); <span class="comment">//强制类型转换</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">// 编码 Unicode 2字节 65536 Excel 2^16 = 65536</span></span><br><span class="line">        <span class="comment">// U0000 UFFFF</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">'\u0061'</span>;</span><br><span class="line">        System.out.println(c3); <span class="comment">//a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转义字符</span></span><br><span class="line">        <span class="comment">// \t   制表符</span></span><br><span class="line">        <span class="comment">// \n   换行</span></span><br><span class="line">        System.out.println(<span class="string">"Hello\tWorld!"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello\nWorld!"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对象 从内存分析</span></span><br><span class="line">        System.out.println(<span class="string">"//=========================================================="</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"Hello,world!"</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"Hello,world!"</span>);</span><br><span class="line">        System.out.println(sa == sb);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="string">"Hello,world!"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sd</span> <span class="operator">=</span> <span class="string">"Hello,world!"</span>;</span><br><span class="line">        System.out.println(sc == sd);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 布尔值拓展</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="literal">true</span>){}     <span class="comment">// 新手</span></span><br><span class="line">        <span class="keyword">if</span> (flag){}     <span class="comment">// 老手</span></span><br><span class="line">        <span class="comment">// Less is More!    代码要精简已读</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li>由于Java是强类型语言，所以要进行有些运算的时候，需要用到类型转换。</li></ul><p>低    ———————————————————————————&gt;    高</p><p>byte , short , char -&gt; int -&gt; long -&gt; float -&gt; double</p><ul><li><p>运算中，不同类型的数据先转换为同一类型，然后再运算。</p></li><li><p>强制类型转换</p></li><li>自动类型转换</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_04</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 强制转换     (类型)变量名     高-低</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">128</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)i;   <span class="comment">//内存溢出</span></span><br><span class="line"></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自动类型转换   低-高</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span>  <span class="operator">=</span> i;</span><br><span class="line"></span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意点：</span></span><br><span class="line"><span class="comment">        1、不能对布尔值进行转换</span></span><br><span class="line"><span class="comment">        2、不能把对象类型转换为不相干的类型</span></span><br><span class="line"><span class="comment">        3、再把高容量转换到低容量的时候，强制转换</span></span><br><span class="line"><span class="comment">        4、转换的时候可能存在内存溢出，或者精度问题！</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        System.out.println((<span class="type">int</span>)<span class="number">23.7</span>);      <span class="comment">// 23</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)-<span class="number">45.89f</span>);   <span class="comment">// -45</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">d</span> <span class="operator">=</span> <span class="string">'a'</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">e</span> <span class="operator">=</span> d + <span class="number">1</span>;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">        System.out.println((<span class="type">char</span>)e);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 操作比较大的数的时候，注意溢出问题</span></span><br><span class="line">        <span class="comment">// JDK7新特性，数字之间可以用下划线分割</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1_000_000_000</span>;</span><br><span class="line">        System.out.println(money);</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> money * year;   <span class="comment">//-1474836480，计算的时候溢出了</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> money * year; <span class="comment">//默认是int，转换前已经溢出了</span></span><br><span class="line">        System.out.println(total);</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">total3</span> <span class="operator">=</span> money * ((<span class="type">long</span>)year);</span><br><span class="line">        System.out.println(total3);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>变量就是可以变化的量</li><li>Java是一种强类型语言，每个变量都必须声明其类型</li><li>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和<strong>作用域</strong></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type varName [=value] [{,varName[=value]}];</span><br><span class="line"><span class="comment">// 数据类型 变量名 = 值；可以用逗号隔开来声明多个同类型的量</span></span><br></pre></td></tr></tbody></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>每个变量都有类型，类型可以是基本类型，也可以说是引用类型</li><li>变量名必须是合法的标识符</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</li></ul><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ul><li>类变量</li><li>实例变量</li><li>局部变量</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_07</span> {</span><br><span class="line">    <span class="comment">// 类变量 static</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">2500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性：变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例变量：从属于对象；如果不进行初始化，会变成这个类型的默认值 0 0.0</span></span><br><span class="line">    <span class="comment">// 布尔值：默认是false</span></span><br><span class="line">    <span class="comment">// 除了基本类型，其余的都是null；</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 局部变量；必须声明和初始化值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//变量类型  变量名字 = new Demo_07</span></span><br><span class="line">        <span class="type">Demo_07</span> <span class="variable">demo_07</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo_07</span>();</span><br><span class="line">        System.out.println(demo_07.age);</span><br><span class="line">        System.out.println(demo_07.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 类变量 static</span></span><br><span class="line">        System.out.println(salary);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>{</span><br><span class="line"><span class="comment">//        System.out.println(i);</span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><ul><li>常量(Constant)：初始化(initialize)后不能改变值！不会变动的值。</li><li>所谓的常量可以理解成一种特殊的变量，它的值被设定后，在程序运行过程中不允许被改变。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> 常量名 = 值;</span><br><span class="line"><span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br></pre></td></tr></tbody></table></figure><ul><li>常量名一般用大写字符。</li></ul><h2 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h2><ul><li>所有变量、方法、类名：<strong>见名知义</strong></li><li>类成员变量：首字母小写和驼峰原则：monthSalary</li><li>局部变量：首字母小写和驼峰原则</li><li>常量：大写字母和下划线：MAX_VALUE</li><li>类名：首字母大写和驼峰原则：Man,GoodMan</li><li>方法名：首字母小写和驼峰原则：run(),runRun()</li><li></li></ul><h1 id="Chapter-03"><a href="#Chapter-03" class="headerlink" title="Chapter 03"></a>Chapter 03</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li>算数运算符：+, -, *, /, %, ++, —</li><li>赋值运算符：=</li><li>关系运算符：&gt;, &lt;, &gt;=, &lt;=, ==, !=, instanceof</li><li>逻辑运算符：&amp;&amp;, ||, !</li><li>位运算符：&amp;, |, ^, ~, &gt;&gt;, &lt;&lt;, &gt;&gt;&gt;</li><li>条件运算符：? :</li><li>扩展赋值运算符：+=, -=, *=, /=</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二元运算符</span></span><br><span class="line">      <span class="comment">//Ctrl + D：复制当前行到下一行</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">      System.out.println(a+b);</span><br><span class="line">      System.out.println(a-b);</span><br><span class="line">      System.out.println(a*b);</span><br><span class="line">      System.out.println(a/(<span class="type">double</span>)b);</span><br><span class="line"></span><br><span class="line">      <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">123123123123123L</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">      <span class="type">short</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">byte</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">      System.out.println(a+b+c+d);    <span class="comment">//Long</span></span><br><span class="line">      System.out.println(b+c+d);      <span class="comment">//Int</span></span><br><span class="line">      System.out.println(c+d);        <span class="comment">//Short</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 关系运算符返回的结果：  正确，错误   布尔值</span></span><br><span class="line"></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">21</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 取余，模运算</span></span><br><span class="line">      System.out.println(c%a); <span class="comment">// c / a    21 / 10 = 2 ... 1</span></span><br><span class="line"></span><br><span class="line">      System.out.println(a&gt;b);</span><br><span class="line">      System.out.println(a&lt;b);</span><br><span class="line">      System.out.println(a==b);</span><br><span class="line">      System.out.println(a!=b);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ++   --  自增，自减   一元运算符</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a++; <span class="comment">// 执行完这行代码后，先给b赋值，再自增</span></span><br><span class="line">      <span class="comment">// a++     a = a + 1</span></span><br><span class="line">      System.out.println(a);</span><br><span class="line">      <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++a; <span class="comment">// 执行完这行代码前，再自增，先给c赋值</span></span><br><span class="line">      <span class="comment">// ++a     a = a + 1</span></span><br><span class="line"></span><br><span class="line">      System.out.println(a);</span><br><span class="line">      System.out.println(b);</span><br><span class="line">      System.out.println(c);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 幂运算 2^3  2*2*2 = 8   很多运算，我们会使用一些工具类来操作</span></span><br><span class="line">      <span class="type">double</span> <span class="variable">pow</span> <span class="operator">=</span> Math.pow(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">      System.out.println(pow);</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逻辑运算符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//  与（and）   或（or）   非（取反）</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">a</span>  <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"a &amp;&amp; b:"</span>+(a &amp;&amp; b));</span><br><span class="line">        <span class="comment">// 逻辑与运算：两个变量都为真，结果才为true</span></span><br><span class="line">        System.out.println(<span class="string">"a || b:"</span>+(a || b));</span><br><span class="line">        <span class="comment">// 逻辑或运算：两个变量有一个为真，结果才为true</span></span><br><span class="line">        System.out.println(<span class="string">"!(a &amp;&amp; b):"</span>+!(a &amp;&amp; b));</span><br><span class="line">        <span class="comment">// 如果是真，则为假；如果是假，则为真</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 短路运算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">d</span> <span class="operator">=</span> (c&lt;<span class="number">4</span>)&amp;&amp;(c++&lt;<span class="number">4</span>); <span class="comment">//c&lt;4为false，短路，不再运行后面的代码，所以c还是5</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 位运算符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_06</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        A = 0011 1100</span></span><br><span class="line"><span class="comment">        B = 0000 1101</span></span><br><span class="line"><span class="comment">        -------------------------</span></span><br><span class="line"><span class="comment">        A&amp;B = 0000 1100</span></span><br><span class="line"><span class="comment">        A|B = 0011 1101</span></span><br><span class="line"><span class="comment">        A^B = 0011 0001</span></span><br><span class="line"><span class="comment">        ~B  = 1111 0010</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        2*8 = 16    2*2*2*2</span></span><br><span class="line"><span class="comment">        &lt;&lt;      *2</span></span><br><span class="line"><span class="comment">        &gt;&gt;      /2</span></span><br><span class="line"><span class="comment">        0000 0000   0</span></span><br><span class="line"><span class="comment">        0000 0001   1</span></span><br><span class="line"><span class="comment">        0000 0010   2</span></span><br><span class="line"><span class="comment">        0000 0011   3</span></span><br><span class="line"><span class="comment">        0000 0100   4</span></span><br><span class="line"><span class="comment">        0000 1000   8</span></span><br><span class="line"><span class="comment">        0001 0000   16</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_08</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// x ? y : z</span></span><br><span class="line">        <span class="comment">// 如果x == ture，结果为y，否则为z</span></span><br><span class="line"><span class="comment">//        int score = 80;</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">type</span> <span class="operator">=</span> score &lt; <span class="number">60</span> ? <span class="string">"不及格"</span> : <span class="string">"及格"</span>;</span><br><span class="line">        System.out.println(type);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h2><ul><li>为了更好地组织类，Java提供了包机制，用于区别类名的命名空间。</li><li>包语句的语法格式为：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pkg[. pkg2[. pkg3...]];</span><br></pre></td></tr></tbody></table></figure><ul><li>包就是文件夹</li><li><font color="red"><strong>一般利用公司域名倒置作为包名</strong></font>cn.nieqianlong.www</li><li>为了能够使用某一个包的成员，我们需要在Java程序中明确导入该包。使用”import”语句可以完成此功能</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> packae1[. package2...].(classname|*);</span><br><span class="line"><span class="keyword">import</span> cn.nieqianlong.base.Demo_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入这个包下所有的类！</span></span><br><span class="line"><span class="keyword">import</span> cn.nieqianlong.base.*;</span><br></pre></td></tr></tbody></table></figure><h2 id="Java-Doc"><a href="#Java-Doc" class="headerlink" title="Java Doc"></a>Java Doc</h2><ul><li>javadoc命令是用来生成自己API文档的</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.base;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Nieqianlong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Doc</span> {</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Nieqianlong</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>参数信息：</li><li>@author 作者名</li><li>@version 版本号</li><li>@since 指明需要最早使用jdk版本</li><li>@param 参数名</li><li>@return 返回值情况</li><li>@throws 异常抛出情况</li></ul><p><img src="../../../%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5/%E5%9B%BE%E5%BA%8A/java02.png" alt="cmd生成JavaDoc"></p><p><a href="https://blog.csdn.net/m0_47176679/article/details/125381816">生成JavaDoc的两种方法</a></p><h1 id="Chapter04"><a href="#Chapter04" class="headerlink" title="Chapter04"></a>Chapter04</h1><h2 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h2><ul><li><strong>java.util.Scanner，<font color="red">可以通过Scanner类来获取用户的输入</font></strong></li><li>基本语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br></pre></td></tr></tbody></table></figure><ul><li>通过Scanner类的next()与nextLine()方法获取输入的字符串，在读取前我们一般需要使用hasNext()与hasNextLine()判断是否还有输入的数据。</li></ul><ul><li><p>next():</p><ul><li>1、一定要读取到有效字符后才可以结束输入。</li><li>2、对输入有效字符之前遇到的空白，next()方法会自动将其去掉。</li><li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li>4、<strong><font color="red">next()不能得到带有空格的字符串。</font></strong></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"使用next方法接收："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户有没有输入字符串</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()){</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 凡是IO流的类如果不关闭会一直占用资源，要养成好习惯用完就关掉</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>nextLine():</p><ul><li>1、以Enter为结束符，也就是说nextLine()方法返回的是输入回车之前的所有字符。</li><li>2、可以获得空白。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"使用nextLine方式接收："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextLine()){</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入数据："</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"输入的内容为："</span>+str);</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 我们可以输入多个数字，并求其总和与平均数，每输入一个数字用回车确认，通过输入非数字来结束输入并输出执行结果：</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 和</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 计算输入了多少数字</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过循环判断是否还有输入，并在里面对每一次进行求和统计</span></span><br><span class="line">        System.out.println(<span class="string">"请输入第1个数字："</span>);</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNextDouble()){</span><br><span class="line">            <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">            m = m + <span class="number">1</span>;  <span class="comment">//m++</span></span><br><span class="line">            sum = sum + x;</span><br><span class="line">            System.out.println(<span class="string">"你已输入了"</span> + m + <span class="string">"个数据，当前总和为："</span> + sum);</span><br><span class="line">            System.out.println(<span class="string">"请输入第"</span>+(m+<span class="number">1</span>)+<span class="string">"个数字："</span>);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(m + <span class="string">"个数的和为："</span> + sum);</span><br><span class="line">        System.out.println(m + <span class="string">"个数的平均数是"</span> + (sum /m));</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><ul><li>Java的最基本结构就是顺序结构，除非特别指明，否则就按顺序一句一句执行。</li><li>顺序结构是最简单的算法结构。</li><li>语句与语句之间，框与框之间是按从上到下的顺序进行的，它是由若干个依次执行的处理步骤组成的，<strong><font color="red">它是任何一个算法都离不开的一种基本算法结构。</font></strong></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sequence</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        System.out.println(<span class="string">"Hello1"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello2"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello3"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello4"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Hello5"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h2><ul><li>if单选择结构</li><li>if双选择结构</li><li>if多选择结构</li><li>嵌套的if结构</li><li>switch多选择结构</li></ul><h3 id="if单选择结构"><a href="#if单选择结构" class="headerlink" title="if单选择结构"></a>if单选择结构</h3><ul><li><p>我们很多时候需要去判断一个东西是否可行，然后我们才去执行，这样一个过程在程序中用if语句来表示</p></li><li><p>语法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 如果布尔表达式为true将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入内容："</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="comment">// equals:判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span>(s.equals(<span class="string">"Hello"</span>)){</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"End"</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="if双选择结构"><a href="#if双选择结构" class="headerlink" title="if双选择结构"></a>if双选择结构</h3><ul><li>语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 如果布尔表达式为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">    <span class="comment">// 如果布尔表达式为false将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 考试分数大于60分就是及格，小于60分就是不及格</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"请输入成绩："</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">60</span>){</span><br><span class="line">            System.out.println(<span class="string">"及格"</span>);</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"不及格"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="if多选择结构"><a href="#if多选择结构" class="headerlink" title="if多选择结构"></a>if多选择结构</h3><ul><li>语法：</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 1为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 2为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(布尔表达式 <span class="number">3</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 3为true将执行的语句</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line">    <span class="comment">// 如果以上布尔表达式都不为true将执行的语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 考试分数大于60分就是及格，小于60分就是不及格</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        if 语句至多有 1 个 else 语句，else语句在所有的else if 语句之后。</span></span><br><span class="line"><span class="comment">        if 语句可以有若干个 else if 语句，它们必须在 else 语句之前。</span></span><br><span class="line"><span class="comment">        一旦其中的一个 else if 语句检测为 true，其他的 else if 以及 else 语句都将跳过执行。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">"请输入成绩："</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(score == <span class="number">100</span>){</span><br><span class="line">            System.out.println(<span class="string">"恭喜满分"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">90</span> &amp;&amp; score&lt;<span class="number">100</span>) {</span><br><span class="line">            System.out.println(<span class="string">"A级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">80</span> &amp;&amp; score&lt;<span class="number">90</span>) {</span><br><span class="line">            System.out.println(<span class="string">"B级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">70</span> &amp;&amp; score&lt;<span class="number">80</span>) {</span><br><span class="line">            System.out.println(<span class="string">"C级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&gt;=<span class="number">60</span> &amp;&amp; score&lt;<span class="number">70</span>) {</span><br><span class="line">            System.out.println(<span class="string">"D级"</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (score&lt;<span class="number">60</span> &amp;&amp; score&gt;=<span class="number">0</span>) {</span><br><span class="line">            System.out.println(<span class="string">"不及格"</span>);</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"成绩不合法"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="嵌套的if结构"><a href="#嵌套的if结构" class="headerlink" title="嵌套的if结构"></a>嵌套的if结构</h3><ul><li><p>使用嵌套的 if … else 语句是合法的。也就是说你可以在另一个 if 或者 else if 语句中使用 if 或者 else if 语句。你可以像 if 语句一样嵌套 else if … else 。</p></li><li><p>语法：</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(布尔表达式 <span class="number">1</span>){</span><br><span class="line">    <span class="comment">// 如果布尔表达式 1的值为true执行代码</span></span><br><span class="line">    <span class="keyword">if</span>(布尔表达式 <span class="number">2</span>){</span><br><span class="line">        <span class="comment">// 如果布尔表达式 2的值为true执行代码</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h3><ul><li><p>多选择结构还有一个实现方式就是switch case语句。</p></li><li><p>switch case 语句判断一个变量与一系列值中某个值是否相等，每一个值称为一个分支。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression){</span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="keyword">case</span> value:</span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 可选</span></span><br><span class="line">    <span class="comment">// 你可以有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">// 可选</span></span><br><span class="line">        <span class="comment">// 语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>switch case语句中的变量类型可以是：</strong></p><ul><li>byte、short、int或者char。</li><li><font color="red">从Java SE 7 开始</font></li><li><font color="red">switch 支持字符串String类型了</font></li><li>同时 case 标签必须为字符串常量或者字面量。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">'F'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(grade){</span><br><span class="line">            <span class="keyword">case</span><span class="string">'A'</span>:</span><br><span class="line">                System.out.println(<span class="string">"优秀"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'B'</span>:</span><br><span class="line">                System.out.println(<span class="string">"良好"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'C'</span>:</span><br><span class="line">                System.out.println(<span class="string">"及格"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'D'</span>:</span><br><span class="line">                System.out.println(<span class="string">"再接再厉"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">case</span><span class="string">'E'</span>:</span><br><span class="line">                System.out.println(<span class="string">"挂科"</span>);</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 可选</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"未知等级"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">"肥龙"</span>;</span><br><span class="line">        <span class="comment">// JDK7的新特性，表达式结果可以是字符串！！！</span></span><br><span class="line">        <span class="comment">// 字符的本质还是数字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反编译  java---class（字节码文件）---反编译（IDEA）</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (name){</span><br><span class="line">            <span class="keyword">case</span><span class="string">"肥龙"</span>:</span><br><span class="line">                System.out.println(<span class="string">"肥龙"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"聂千龙"</span>:</span><br><span class="line">                System.out.println(<span class="string">"聂千龙"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"弄啥嘞！"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ul><li>while循环</li><li>do…while循环</li><li>for循环</li><li>在Java5中引入了一种主要用于数组增强型的for循环</li></ul><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><ul><li><p>while是最基本的循环，它的结构为：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(布尔表达式){</span><br><span class="line">    <span class="comment">// 循环内容</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>只要布尔表达式为true，循环就会一直执行下去</p></li><li><font color="red">我们大多数情况是会让循环停止下来的，我们需要一个表达式失效的方式来结束循环。</font></li><li><p>少部分情况需要循环一直执行，比如服务器的请求响应监听等。</p></li><li><p>循环条件一直为true就会造成无限循环【死循环】，我们正常的业务编程中应该尽量避免死循环。会影响程序性能或者造成程序卡死崩溃！</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出1~100</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>){</span><br><span class="line">            <span class="comment">// 等待客户端连接</span></span><br><span class="line">            <span class="comment">// 定时检查</span></span><br><span class="line">            <span class="comment">// ......</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 计算1+2+3+...+100=?</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i&lt;=<span class="number">100</span>){</span><br><span class="line">            sum = sum + i;</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 高斯算法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        sum2 = ((<span class="number">1</span>+<span class="number">100</span>))*(i/<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum2);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h3><ul><li><p>对于while语句而言，如果条件不满足，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。</p></li><li><p>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>{</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">}<span class="keyword">while</span>(布尔表达式);</span><br></pre></td></tr></tbody></table></figure></li><li><p>while 和 do-while的区别：</p><ul><li>while先判断后执行。do-while是先执行后判断！</li><li>Do…while总是保证循环体会被至少执行一次！这是他们的主要差别。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoWhileDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a&lt;<span class="number">0</span>){</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            a++;</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"==============="</span>);</span><br><span class="line">        <span class="keyword">do</span>{</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            a++;</span><br><span class="line">        }<span class="keyword">while</span>(a&lt;<span class="number">0</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a><font color="red">For循环</font></h3><ul><li><p>虽然所有循环结构都可以用while或者do…while表示，但Java提供了另一种语句——for循环，使一些循环结构变得更加简单。</p></li><li><p>for循环语句是支持迭代的一种通用结构，<font color="red">是最有效、最灵活的循环结构。</font></p></li><li><p>for循环执行的次数是在执行前就确定的。语句格式如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化;布尔表达式;更新){</span><br><span class="line">    <span class="comment">// 代码语句</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 初始化条件</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (a&lt;=<span class="number">100</span>){ <span class="comment">// 条件判断</span></span><br><span class="line">            System.out.println(a); <span class="comment">// 循环体</span></span><br><span class="line">            a += <span class="number">2</span>; <span class="comment">//迭代</span></span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"while循环结束"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++){  <span class="comment">//100.for</span></span><br><span class="line">            System.out.println(i);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"for循环结束"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        关于 for 循环有以下几点说明：</span></span><br><span class="line"><span class="comment">        最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。</span></span><br><span class="line"><span class="comment">        然后，检测布尔表达式的值。如果为 true ，循环体被执行。如果 false ，循环终止，开始执行循坏体后面的语句。执行一次循坏后，</span></span><br><span class="line"><span class="comment">        再次检测布尔表达式。循环执行上面的过程。</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 计算0到100之间的奇数和偶数的和</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">oddSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">evenSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>){</span><br><span class="line">                oddSum += i;</span><br><span class="line">            }<span class="keyword">else</span> {</span><br><span class="line">                evenSum += i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"奇数的和："</span>+oddSum);</span><br><span class="line">        System.out.println(<span class="string">"偶数的和："</span>+evenSum);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 用while或for循环输出1-1000之间能被5整除的数，并且每行输出3个</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">1000</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// printlin 换行</span></span><br><span class="line">        <span class="comment">// print 不换行</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=<span class="number">1000</span>){</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(count==<span class="number">3</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h3><ul><li><p>Java增强型for循环语法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句：表达式){</span><br><span class="line">    <span class="comment">// 代码句子</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>声明语句：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。</p></li><li><p>表达式：表达式是要访问的数组名，或者是返回值为数组的方法。</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] numbers = {<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>}; <span class="comment">// 定义了一个数组</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) {</span><br><span class="line">            System.out.println(numbers[i]);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"============="</span>);</span><br><span class="line">        <span class="comment">// 遍历数组的元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:numbers){</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="break-continue"><a href="#break-continue" class="headerlink" title="break    continue"></a>break    continue</h3><ul><li>break 在任何循环语句的主体部分，均可用 break 控制循环的流程。 break 用于强行退出循环，不执行循环中剩余的语句。( break 语句也在 switch 语句中使用）</li><li>continue 语句用在循环语句体中，用于终止某次循环过程，即跳过循环体中尚未执行的语句，接着进行下一次是否执行循环的判定。</li></ul><ul><li>关于 goto 关键字<ul><li>goto 关键字很早就在程序设计语言中出现。尽管 goto 仍是 Java 的一个保留字，但并未在语言中得到正式使用； Java 没有 goto 。然而，在 break 和 continue 这两个关键字的身上，我们仍然能看出一些 goto 的影子﹣-﹣带标签的 break 和 continue 。</li><li>“标签”是指后面跟一个冒号的标识符，例如： label :</li><li>对 Java 来说唯一用到标签的地方是在循环语句之前。而在循环之前设置标签的唯一理由是：我们希望在其中嵌套另个循环，由于 break 和 continue 关键字通常只中断当前循环，但若随同标签使用，它们就会中断到存在标签的地方。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">30</span>){</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"123"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContinueDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>){</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LabelDemo</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 打印101~150之间所有的质数</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        outer:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">101</span>; i &lt; <span class="number">150</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j&lt; i/<span class="number">2</span>; j++){</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span>){</span><br><span class="line">                    <span class="keyword">continue</span> outer;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            System.out.print(i+<span class="string">" "</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDemo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 打印三角形    5行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法一：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt;= i; j--) {</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; i; j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法二：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++){</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">5</span>; j &gt; i; j--) {</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; (<span class="number">2</span>*i-<span class="number">1</span>); j++) {</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-04"><a href="#Chapter-04" class="headerlink" title="Chapter 04"></a>Chapter 04</h1><h2 id="Java方法详解"><a href="#Java方法详解" class="headerlink" title="Java方法详解"></a>Java方法详解</h2><h3 id="何谓方法？"><a href="#何谓方法？" class="headerlink" title="何谓方法？"></a>何谓方法？</h3><ul><li><p>System.out.printlin()</p><p>类.对象.方法</p></li><li><p>Java方法是语句的合集，它们在一起执行一个功能。</p><ul><li>方法是解决一类问题的步骤的有序组合</li><li>方法包含于类或对象中</li><li>方法在程序中被创建，在其他地方被引用</li></ul></li><li>设计方法的原则：方法的本意是功能块，就是实现某个功能的语句块的集合。我们设计方法的时候，最好保持方法的原子性，<font color="red">就是一个方法只能完成一个功能，这样利于我们后期扩展。</font></li><li>方法的命名规则：<font color="red">首字母小写和驼峰原则：run(),runRun()</font></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        test();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>{</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">1000</span>; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.print(i+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span>==<span class="number">0</span>){</span><br><span class="line">                System.out.println();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h3><ul><li><p>Java的方法类似于其他语言的函数，是一段<font color="red">用来完成特殊功能的代码片段</font>，一般情况下，定义一个方法包含以下语法：</p></li><li><p><font color="red">方法包含一个方法头和一个方法体。</font>下面是一个方法的所有部分：</p><ul><li><p><font color="red">修饰符</font>：修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</p><ul><li><font color="red">返回值类型</font>：方法可能会返回值。returnValueType是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType是关键字void。</li></ul></li><li><p><font color="red">方法名</font>：是方法的实际名称。方法名和参数表共同构成方法签名。</p></li><li><p><font color="red">参数类型</font>：参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。</p><p>形式参数：在方法被调用时用于接收外界输入的数据。</p><p>实参：调用时实际传给方法的数据。</p></li><li><p><font color="red">方法体</font>：方法体包含具体的语句，定义该方法的功能。</p></li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰符返回值类型 方法名(参数类型 参数名){</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><ul><li><p>调用方法：对象名.方法名(实参列表)</p></li><li><p>Java支持两种调用方法，根据方法是否返回值来选择。</p></li><li><p>当方法返回一个值的时候，方法调用通常是被当做一个值。例如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">larger</span> <span class="operator">=</span> max(<span class="number">30</span>, <span class="number">40</span>);</span><br></pre></td></tr></tbody></table></figure></li><li><p>如果方法返回值是void，方法调用一定是一条语句。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Hello,nieqianlong!"</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><font color="red" size="4">Java是值传递</font></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line"><span class="comment">//        int max = max(10, 20);</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 比大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> num1,<span class="type">int</span> num2)</span>{</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num1&gt;num2){</span><br><span class="line">            result = num1;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;num1) {</span><br><span class="line">            result = num2;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"num1==num2"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 终止方法</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h3><ul><li>重载就是在一个类中，有相同的函数名称，但是形参不同的函数。</li><li>方法的重载的规则：<ul><li>方法名称必须相同。</li><li>参数列表必须不同（个数不同、或类型不同、参数排列顺序不同等）。</li><li>方法的返回类型可以相同也可以不相同。</li><li>仅仅返回类型不同不足已成为方法的重载。</li></ul></li><li>实现理论：<ul><li>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line"><span class="comment">//        int max = max(10, 20);</span></span><br><span class="line"><span class="comment">//        int max = max(10, 10);</span></span><br><span class="line"><span class="comment">//        double max = max(10.0, 20.0);</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">max</span> <span class="operator">=</span> max(<span class="number">10.0</span>, <span class="number">10.0</span>);</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 比大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> num1,<span class="type">double</span> num2)</span>{</span><br><span class="line">        <span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num1&gt;num2){</span><br><span class="line">            result = num1;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;num1) {</span><br><span class="line">            result = num2;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"num1==num2"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 终止方法</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 比大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> num1,<span class="type">int</span> num2)</span>{</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (num1&gt;num2){</span><br><span class="line">            result = num1;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (num2&gt;num1) {</span><br><span class="line">            result = num2;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            System.out.println(<span class="string">"num1==num2"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 终止方法</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span> add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(sum2);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>{</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 加法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span>{</span><br><span class="line">        <span class="keyword">return</span> a+b+c;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h3><ul><li>有时候你希望运行一个程序时候再传递给它消息。这要靠传递命令行参数给main()函数实现。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++){</span><br><span class="line">            System.out.println(<span class="string">"args["</span>+i+<span class="string">"]:"</span>+args[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s2.loli.net/2022/08/16/yaXmWnsL42cqI6l.png" alt="命令行传参"></p><h3 id="可变参数（不定项参数）"><a href="#可变参数（不定项参数）" class="headerlink" title="可变参数（不定项参数）"></a>可变参数（不定项参数）</h3><ul><li>JDK1.5开始，Java支持传递同类型的可变参数给一个方法。</li><li>在方法声明中，在指定参数类型后加一个省略号(…)。</li><li>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数，任何普通的参数必须在它之前声明。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_04</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Demo_04</span> <span class="variable">demo_04</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo_04</span>();</span><br><span class="line">        demo_04.test(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        printMax(<span class="number">34</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">56.5</span>);</span><br><span class="line">        printMax(<span class="keyword">new</span> <span class="title class_">double</span>[]{<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>});</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span>... i)</span>{</span><br><span class="line">        System.out.println(i[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(i[<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">double</span>...numbers)</span>{</span><br><span class="line">        <span class="keyword">if</span>(numbers.length==<span class="number">0</span>){</span><br><span class="line">            System.out.println(<span class="string">"No argument passed"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 排序!</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; numbers.length; i++) {</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] &gt; result){</span><br><span class="line">                result = numbers[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"The max value is "</span> + result);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><ul><li>递归就是：A方法调用A方法！就是自己调用自己</li><li>利用递归可以用简单的程序来解决一些复杂的问题。它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需要少量的程序就可描述出解题过程所需的多次重复计算，大大减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。</li><li><font color="red">递归结构包括两个部分：</font>- <font color="red">递归头：什么时候不调用自身方法。如果没有头，将陷入死循环。</font>- <font color="red">递归体：什么时候需要调用自身方法。</font></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_06</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        System.out.println(f(<span class="number">10</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1! 1</span></span><br><span class="line">    <span class="comment">// 2! 2*1</span></span><br><span class="line">    <span class="comment">// 5! 5*4*3*2*1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2  2*f(1)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span>{</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>){</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="Java实现简易计算器"><a href="#Java实现简易计算器" class="headerlink" title="Java实现简易计算器"></a>Java实现简易计算器</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_07</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            System.out.println(<span class="string">"输入y继续，输入n退出"</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">"y"</span>)) {</span><br><span class="line">                System.out.println(<span class="string">"请输入第一个数字"</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">numb1</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"请输入运算符号"</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">operator</span> <span class="operator">=</span> scanner.next();</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"请输入第二个数字"</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">numb2</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> (operator) {</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                        add(numb1, numb2);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                        subtract(numb1, numb2);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                        multiply(numb1, numb2);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                        divide(numb1, numb2);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                scanner.close();</span><br><span class="line">                System.out.println(<span class="string">"正在退出!!"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">add</span> <span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span>{</span><br><span class="line">            System.out.println(<span class="string">"numb 1 + numb 2 = "</span> + (a + b));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">subtract</span> <span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span>{</span><br><span class="line">            System.out.println(<span class="string">"numb 1 - numb 2 = "</span> + (a - b));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">multiply</span> <span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span>{</span><br><span class="line">            System.out.println(<span class="string">"numb 1 * numb 2 = "</span> + a * b);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">divide</span> <span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span>{</span><br><span class="line">            System.out.println(<span class="string">"numb 1 / numb 2 = "</span> + a / b);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-05"><a href="#Chapter-05" class="headerlink" title="Chapter 05"></a>Chapter 05</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h3><ul><li>数组是相同类型数据的有序集合</li><li>数组描述的是相同类型的若干个数据，按照一定的先后次序排列组合而成。</li><li>其中，每一个数据称作一个数组元素，每个数组元素可以通过一个下标来访问他们。</li></ul><h3 id="数组声明创建"><a href="#数组声明创建" class="headerlink" title="数组声明创建"></a>数组声明创建</h3><ul><li><p>首先必须声明数组变量，才能在程序中使用数组。下面是声明数组变量的语法：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar;<span class="comment">// 首选的方法</span></span><br><span class="line">或</span><br><span class="line">dataType arrayReVar[];<span class="comment">// 效果相同，但不是首选方法</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>Java语言使用new操作符来创建数组，语法如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayReVar = <span class="keyword">new</span> <span class="title class_">dataType</span>[arraySize];</span><br></pre></td></tr></tbody></table></figure></li><li><p>数组的元素是通过索引访问的，数组索引从0开始。</p></li><li><p>获取数组长度：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrays.length</span><br></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_01</span> {</span><br><span class="line">    <span class="comment">// 变量的类型     变量的名字   =   变量的值</span></span><br><span class="line">    <span class="comment">// 数组类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] nums; <span class="comment">// 1、声明一个数组</span></span><br><span class="line">        <span class="type">int</span> nums2[];</span><br><span class="line"></span><br><span class="line">        nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>]; <span class="comment">// 2、创建一个数组，这里边可以存放10个int类型的数字</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span>[] nums3 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3、给数组元素中赋值</span></span><br><span class="line">        nums[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        nums[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">        nums[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">        nums[<span class="number">3</span>] = <span class="number">4</span>;</span><br><span class="line">        nums[<span class="number">4</span>] = <span class="number">5</span>;</span><br><span class="line">        nums[<span class="number">5</span>] = <span class="number">6</span>;</span><br><span class="line">        nums[<span class="number">6</span>] = <span class="number">7</span>;</span><br><span class="line">        nums[<span class="number">7</span>] = <span class="number">8</span>;</span><br><span class="line">        nums[<span class="number">8</span>] = <span class="number">9</span>;</span><br><span class="line">        nums[<span class="number">9</span>] = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(nums[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算所有元素的和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 获取数组长度：  arrays.length</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) {</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        }</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h3><p><img src="https://s2.loli.net/2022/08/18/MqOZJUWT5mFAN34.png" alt="内存分析"></p><h3 id="数组的初始化"><a href="#数组的初始化" class="headerlink" title="数组的初始化"></a>数组的初始化</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_02</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 静态初始化：创建 + 赋值</span></span><br><span class="line">        <span class="type">int</span>[] a = {<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>};</span><br><span class="line">        Man[] men = {<span class="keyword">new</span> <span class="title class_">Man</span>(), <span class="keyword">new</span> <span class="title class_">Man</span>()};</span><br><span class="line">        System.out.println(a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态初始化：包含默认初始化</span></span><br><span class="line">        <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        b[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">        b[<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        System.out.println(b[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(b[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(b[<span class="number">2</span>]);</span><br><span class="line">        System.out.println(b[<span class="number">3</span>]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="数组的四个基本点"><a href="#数组的四个基本点" class="headerlink" title="数组的四个基本点"></a>数组的四个基本点</h3><ul><li><p>其长度是确定的。数组一旦被创建，它的大小就是不可以改变的。</p></li><li><p>其元素必须是相同类型，不允许出现混合类型。</p></li><li><p>数组中的元素可以是任何数据类型，包括基本类型和引用类型。</p></li><li><p>数组变量属引用类型，数组也可以看成是对象，数组中的每个元素相当于该对象的成员变量。</p><p>数组本身就是对象，Java中对象是在堆中的，因此数组无论保存原始类型还是其他对象类型，<font color="red">数组对象本身是在堆中的。</font></p></li></ul><h3 id="数组使用"><a href="#数组使用" class="headerlink" title="数组使用"></a>数组使用</h3><ul><li><p>普通的For循环</p></li><li><p>For-Each 循环（主要用于打印数组元素）</p></li><li>数组作方法入参</li><li>数组作返回值</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_04</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] arrays = {<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>};</span><br><span class="line"></span><br><span class="line">        <span class="comment">// JDK1.5 没有下标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> array : arrays) {</span><br><span class="line">            System.out.println(array);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"==========="</span>);</span><br><span class="line">        printArray(arrays);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"==========="</span>);</span><br><span class="line">        printArray(reverse(arrays));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印数组元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arrays)</span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays.length; i++) {</span><br><span class="line">            System.out.print(arrays[i]+<span class="string">" "</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反转数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] reverse(<span class="type">int</span>[] arrays){</span><br><span class="line">        <span class="type">int</span>[] result = <span class="keyword">new</span> <span class="title class_">int</span>[arrays.length];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 反转的操作</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j = result.length-<span class="number">1</span>; i &lt; arrays.length ; i++,j--) {</span><br><span class="line">            result[j] = arrays[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3><ul><li><p>多维数组可以看成是数组的数组，比如二维数组就是一个特殊的一维数组，其每一个元素都是一个一维数组。</p></li><li><p>二维数组</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[][] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure></li><li><p>解析：以上二维数组a可以看成一个两行五列的数组。</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">//[4][2]</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1,2     array[0]</span></span><br><span class="line"><span class="comment">            2,3     array[1]</span></span><br><span class="line"><span class="comment">            3,4     array[2]</span></span><br><span class="line"><span class="comment">            4,5     array[3]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">int</span>[][] array = {{<span class="number">1</span>,<span class="number">2</span>},{<span class="number">2</span>,<span class="number">3</span>},{<span class="number">3</span>,<span class="number">4</span>},{<span class="number">4</span>,<span class="number">5</span>}};</span><br><span class="line"></span><br><span class="line">        printArray(array[<span class="number">0</span>]);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"=========="</span>);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        System.out.println(<span class="string">"=========="</span>);</span><br><span class="line">        System.out.println(array.length);</span><br><span class="line">        System.out.println(array[<span class="number">0</span>].length);</span><br><span class="line">        System.out.println(<span class="string">"=========="</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array[i].length; j++) {</span><br><span class="line">                System.out.println(array[i][j]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arrays)</span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays.length; i++) {</span><br><span class="line">            System.out.print(arrays[i]+<span class="string">" "</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h3><ul><li>数组类工具java.util.Arrays</li><li>由于数组对象本身并没有什么方法可以供我们调用，但API中提供了一个工具类Arrays供我们使用，从而可以对数据对象进行一些基本的操作。</li><li><font color="red">查看JDK帮助文档</font></li><li>Arrays类中的方法都是static修饰的静态方法，在使用的时候可以直接使用类名进行调用，而“不用”使用对象来调用（注意：是“不用”不是“不能”）</li></ul><ul><li>通常具有以下常用功能：<ul><li>给数组赋值：通过fill方法。</li><li>对数组排序：通过sort方法，按升序。</li><li>比较数组：通过equals方法比较数组中元素值是否相等。</li><li>查找数组元素：通过binarySearch方法能对排序好的数组进行二分查找法操作。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_06</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] a ={<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9090</span>,<span class="number">321</span>,<span class="number">54532</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">56</span>};</span><br><span class="line">        System.out.println(a); <span class="comment">// [I@776ec8df</span></span><br><span class="line">        <span class="comment">// 打印数组元素</span></span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        Arrays.sort(a); <span class="comment">// 对数组进行排序：升序</span></span><br><span class="line">        printArray(a);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">        Arrays.fill(a,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        Arrays.fill(a,<span class="number">0</span>);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] a)</span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) {</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                System.out.print(<span class="string">"["</span>+a[i]+<span class="string">", "</span>);</span><br><span class="line">            }<span class="keyword">else</span> <span class="keyword">if</span>(i==a.length-<span class="number">1</span>){</span><br><span class="line">                System.out.print(a[i]+<span class="string">"]"</span>);</span><br><span class="line">            }<span class="keyword">else</span> {</span><br><span class="line">                System.out.print(a[i]+<span class="string">", "</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_07</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] a = {<span class="number">1</span>,<span class="number">45</span>,<span class="number">68</span>,<span class="number">234</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">123</span>,<span class="number">54</span>};</span><br><span class="line">        <span class="type">int</span>[] sort = sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(sort));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 冒泡排序</span></span><br><span class="line">    <span class="comment">// 1、比较数组中两个相邻的元素，如果第一个比第二个大，就交换他们；</span></span><br><span class="line">    <span class="comment">// 2、每次比较，都会产生一个最大或者最小的数字；</span></span><br><span class="line">    <span class="comment">// 3、下一轮则可少一次排序</span></span><br><span class="line">    <span class="comment">// 4、依次循环，直到结束。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] array){</span><br><span class="line">        <span class="comment">// 临时变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 外层循环，判断要走多少次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) {</span><br><span class="line">            <span class="comment">// 内层循环，比较两个数，如果第一个比第二个大，则交换位置</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length-<span class="number">1</span>-i; j++) {</span><br><span class="line">                <span class="keyword">if</span>(array[j+<span class="number">1</span>]&lt;array[j]){</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                    array[j+<span class="number">1</span>] = temp;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>这个算法的时间复杂度为<font color="red" size="5"><strong>O(n2)。</strong></font></p></li><li><p>优化</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_07</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span>[] a = {<span class="number">1</span>,<span class="number">45</span>,<span class="number">68</span>,<span class="number">234</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">123</span>,<span class="number">54</span>};</span><br><span class="line">        <span class="type">int</span>[] sort = sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(sort));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 冒泡排序</span></span><br><span class="line">    <span class="comment">// 1、比较数组中两个相邻的元素，如果第一个比第二个大，就交换他们；</span></span><br><span class="line">    <span class="comment">// 2、每次比较，都会产生一个最大或者最小的数字；</span></span><br><span class="line">    <span class="comment">// 3、下一轮则可少一次排序</span></span><br><span class="line">    <span class="comment">// 4、依次循环，直到结束。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] array){</span><br><span class="line">        <span class="comment">// 临时变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 外层循环，判断要走多少次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) {</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 内层循环，比较两个数，如果第一个比第二个大，则交换位置</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length-<span class="number">1</span>-i; j++) {</span><br><span class="line">                <span class="keyword">if</span>(array[j+<span class="number">1</span>]&lt;array[j]){</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                    array[j+<span class="number">1</span>] = temp;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="literal">false</span>){</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="稀疏数组（一种数据结构）"><a href="#稀疏数组（一种数据结构）" class="headerlink" title="稀疏数组（一种数据结构）"></a>稀疏数组（一种数据结构）</h3><ul><li>当一个数组中大部分元素为0，或者为同一值的数组时，可以使用稀疏数组来保存该数组。</li><li>稀疏数组的处理方式是：<ul><li>记录数组一共有几行几列，有多少格不同值</li><li>把具有不同值的元素和行列值记录在一个小规模数组中，从而缩小程序的规模</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo_08</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 1、创建一个二维数组 11*11  0：没有棋子    1：黑棋    2：白棋</span></span><br><span class="line">        <span class="type">int</span>[][] array1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 输出原始数组</span></span><br><span class="line">        System.out.println(<span class="string">"输出原始数组"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array1) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints) {</span><br><span class="line">                System.out.print(anInt+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"================================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转换为稀疏数组保存</span></span><br><span class="line">        <span class="comment">// 获取有效值的个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) {</span><br><span class="line">                <span class="keyword">if</span> (array1[i][j]!=<span class="number">0</span>){</span><br><span class="line">                    sum++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"有效值的个数："</span>+sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、创建一个稀疏数组的数组</span></span><br><span class="line">        <span class="type">int</span>[][]array2 = <span class="keyword">new</span> <span class="title class_">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历二维数组，将非零的值，存放稀疏数组中</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array1.length; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array1[i].length; j++) {</span><br><span class="line">                <span class="keyword">if</span> (array1[i][j]!=<span class="number">0</span>){</span><br><span class="line">                    count++;</span><br><span class="line">                    array2[count][<span class="number">0</span>] = i;</span><br><span class="line">                    array2[count][<span class="number">1</span>] = j;</span><br><span class="line">                    array2[count][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 输出稀疏数组</span></span><br><span class="line">        System.out.println(<span class="string">"稀疏数组"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array2.length; i++) {</span><br><span class="line">            System.out.println(array2[i][<span class="number">0</span>] + <span class="string">"\t"</span> +</span><br><span class="line">                    array2[i][<span class="number">1</span>] + <span class="string">"\t"</span> +</span><br><span class="line">                    array2[i][<span class="number">2</span>]);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"================================="</span>);</span><br><span class="line">        System.out.println(<span class="string">"还原"</span>);</span><br><span class="line">        <span class="comment">// 1、读取稀疏数组</span></span><br><span class="line">        <span class="type">int</span>[][] array3 = <span class="keyword">new</span> <span class="title class_">int</span>[array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、给其中的元素还原值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; array2.length; i++) {</span><br><span class="line">            array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]] = array2[i][<span class="number">2</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 3、打印</span></span><br><span class="line">        <span class="comment">// 输出还原数组</span></span><br><span class="line">        System.out.println(<span class="string">"输出还原数组"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array3) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints) {</span><br><span class="line">                System.out.print(anInt+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-06"><a href="#Chapter-06" class="headerlink" title="Chapter 06"></a>Chapter 06</h1><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="面向过程-amp-面向对象"><a href="#面向过程-amp-面向对象" class="headerlink" title="面向过程 &amp; 面向对象"></a>面向过程 &amp; 面向对象</h3><ul><li>面向过程思想<ul><li>步骤清晰简单，第一步做什么，第二步做什么……</li><li>面向过程适合处理一些较为简单的问题</li></ul></li><li>面向对象思想<ul><li>物以类聚，<font color="red">分类</font>的思维模式，思考问题首先解决问题需要哪些分类，然后对这些分类进行单独思考。最后，才对某个分类下的细节进行面向过程的思索。</li><li>面向对象适合处理复杂的问题，适合处理需要多人协作的问题！</li></ul></li><li><font color="red">对于描述复杂的事物，为了从宏观上把握、从整体上合理分析，我们需要使用面向对象的思路来分析整个系统。但是，具体到微观操作，仍需要面向过程的思路去处理。</font></li></ul><h3 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h3><ul><li>面向对象编程(Object-Oriented Programming, OOP)</li><li>面向对象编程的本质就是：<font color="red" size="5"><strong>以类的方式组织代码，以对象的组织（封装）数据</strong></font></li></ul><ul><li>抽象</li></ul><ul><li>三大特性：<ul><li><font color="red" size="5">**封装**</font></li><li><font color="red" size="5">**继承**</font></li><li><font color="red" size="5">**多态**</font></li></ul></li></ul><ul><li>从认识论角度考虑是先有对象后有类。对象，是具体的事物。类，是抽象的，是对对象的抽象。</li><li>从代码运行角度考虑是先有类后有对象。类是对象的模板。</li></ul><h3 id="回顾方法及加深"><a href="#回顾方法及加深" class="headerlink" title="回顾方法及加深"></a>回顾方法及加深</h3><ul><li>方法的定义<ul><li>修饰符</li><li>返回类型</li><li>break：跳出switch，结束循环和return区别</li><li>方法名：注意驼峰规则，见名知义</li><li>参数列表：（参数类型，参数名）…</li><li>异常抛出</li></ul></li><li>方法的调用：<ul><li>静态方法</li><li>非静态方法</li><li>形参和实参</li><li>值传递和引用传递</li><li>this关键字</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOError;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Demo_01 类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="comment">// main 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    修饰符 返回值类型   方法名（...）{</span></span><br><span class="line"><span class="comment">        // 方法名</span></span><br><span class="line"><span class="comment">        return 返回值;</span></span><br><span class="line"><span class="comment">    }</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// return 结束方法，返回一个结果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sayHello</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello,world!"</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>{</span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b; <span class="comment">// 三元运算符</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readFile</span><span class="params">(String file)</span> <span class="keyword">throws</span> IOError{</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_02</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 static</span></span><br><span class="line">    <span class="comment">// 非静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 实例化这个类 new</span></span><br><span class="line">        <span class="comment">// 对象类型 对象名 = 对象值；</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.say();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 和类一起加载的</span></span><br><span class="line"><span class="comment">//    public static void a(){</span></span><br><span class="line"><span class="comment">//        b();</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"><span class="comment">//    // 类实例化 之后才存在</span></span><br><span class="line"><span class="comment">//    public void b(){</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"学生说话了"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_03</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 实际参数和形式参数的类型要对应！</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">add</span> <span class="operator">=</span> Demo_03.add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(add);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>{</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"><span class="comment">// 值传递</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_04</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        System.out.println(a); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">        Demo_04.change(a);</span><br><span class="line">        System.out.println(a); <span class="comment">// 1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回值为空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> a)</span>{</span><br><span class="line">        a = <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"><span class="comment">// 引用传递：对象，本质还是值传递</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_05</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(person.name); <span class="comment">// null</span></span><br><span class="line">        Demo_05.change(person);</span><br><span class="line">        System.out.println(person.name); <span class="comment">// 聂千龙</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(Person person)</span>{</span><br><span class="line">        <span class="comment">// person是一个对象，指向的 ---&gt; Person person = new Person();这是一个具体的人，可以改变属性！</span></span><br><span class="line">        person.name = <span class="string">"聂千龙"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义了一个Person类，有一个属性：name</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>{</span><br><span class="line">    String name;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="类与对象的关系"><a href="#类与对象的关系" class="headerlink" title="类与对象的关系"></a>类与对象的关系</h3><ul><li><font color="red">类是一种抽象的数据类型，他是对某一类事物整体描述/定义，但是并不能代表一个具体的事物。</font><ul><li>动物、植物、手机、电脑…</li><li>Person类、Pet类、Car类等，这些都是用来描述/定义某一类具体的事物应该具备的特点和行为</li></ul></li><li><font color="red">对象是抽象概念的具体实例</font><ul><li>张三就是人的一个具体实例，张三家里的旺财就是狗的一个具体实例。</li><li>能够体现出特点，展现出功能的是具体的实例，而不是一个抽象的概念。</li></ul></li></ul><h3 id="创建与初始化对象"><a href="#创建与初始化对象" class="headerlink" title="创建与初始化对象"></a>创建与初始化对象</h3><ul><li><font color="red">使用new关键字创建对象</font></li><li>使用new关键字创建的时候，除了分配内存空间之外，还会给创建好的对象进行默认的初始化以及对类的构造器的调用。</li><li>类的构造器也称为类的构造方法，是在进行创建对象的时候必须要调用的，并且构造器有以下两个特点：<ul><li>1、必须和类的名字相同</li><li>2、必须没有返回类型，也不能写void</li></ul></li><li><font color="red">构造器必须要掌握</font></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_02;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 类：抽象的，需要实例化</span></span><br><span class="line">        <span class="comment">// 类实例化后会返回一个自己的对象!</span></span><br><span class="line">        <span class="comment">// student对象就是一个Student类的具体实例！</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">xiaoming</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">xh</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        xiaoming.name = <span class="string">"小明"</span>;</span><br><span class="line">        xiaoming.age = <span class="number">3</span>;</span><br><span class="line">        System.out.println(xiaoming.name);</span><br><span class="line">        System.out.println(xiaoming.age);</span><br><span class="line"></span><br><span class="line">        xh.name = <span class="string">"小红"</span>;</span><br><span class="line">        xh.age = <span class="number">3</span>;</span><br><span class="line">        System.out.println(xh.name);</span><br><span class="line">        System.out.println(xh.age);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_02;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> {</span><br><span class="line">    <span class="comment">// 属性：字段</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name+<span class="string">"在学习"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_02;</span><br><span class="line"><span class="comment">// java ---&gt; class</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="comment">// 一个类即使什么也不写，它也会存在一个方法</span></span><br><span class="line">    <span class="comment">// 显示的定义构造器</span></span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化初始值</span></span><br><span class="line">    <span class="comment">//1、使用new关键字，必须是在调用构造器</span></span><br><span class="line">    <span class="comment">//2、用来初始化值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>{</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">"聂千龙"</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有参构造:一旦定义了有参构造，无参构造必须显示定义</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span>{</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// alt + insert</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> {</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        // new 实例化了一个对象</span></span><br><span class="line"><span class="comment">        Person person = new Person("nieqianlong");</span></span><br><span class="line"><span class="comment">        System.out.println(person.name); //聂千龙</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        构造器：</span></span><br><span class="line"><span class="comment">            1、和类名相同</span></span><br><span class="line"><span class="comment">            2、没有返回值</span></span><br><span class="line"><span class="comment">        作用：</span></span><br><span class="line"><span class="comment">            1、new本质在调用构造器</span></span><br><span class="line"><span class="comment">            2、初始化对象的值</span></span><br><span class="line"><span class="comment">        注意点：</span></span><br><span class="line"><span class="comment">            1、定义了有参构造后，如果想使用无参构造，显示的定义一个无参的构造</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            Alt + Insert</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><font color="red" size="5">快捷键：Alt + Insert</font><p><img src="https://s2.loli.net/2022/08/20/h6Xzq41PFIgtLau.png" alt="快捷键：Alt + Insert"></p><font color="red" size="5">选择参数创建有参构造器，如果创建无参构造器则选择"Select None"</font><h3 id="对象内存分析"><a href="#对象内存分析" class="headerlink" title="对象内存分析"></a>对象内存分析</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_03.Pet;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Pet</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pet</span>();</span><br><span class="line">        dog.name = <span class="string">"旺财"</span>;</span><br><span class="line">        dog.age = <span class="number">3</span>;</span><br><span class="line">        dog.shout();</span><br><span class="line">        System.out.println(dog.name);</span><br><span class="line">        System.out.println(dog.age);</span><br><span class="line"></span><br><span class="line">        <span class="type">Pet</span> <span class="variable">cat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pet</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pet</span> {</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参构造</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"叫了一声"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s2.loli.net/2022/08/21/WNdv8R5JQpbnKPA.png" alt="对象内存分析"></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_03.Pet;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1、类与对象：</span></span><br><span class="line"><span class="comment">        类是一个模板：抽象，对象是一个具体的实例</span></span><br><span class="line"><span class="comment">    2、方法：</span></span><br><span class="line"><span class="comment">        定义、调用！</span></span><br><span class="line"><span class="comment">    3、对象的引用：</span></span><br><span class="line"><span class="comment">        引用类型：   基本类型（8）</span></span><br><span class="line"><span class="comment">          对象是通过引用来操作的：栈 --&gt; 堆</span></span><br><span class="line"><span class="comment">    4、属性：字段Field 成员变量</span></span><br><span class="line"><span class="comment">        默认初始化：</span></span><br><span class="line"><span class="comment">            数字：0    0.0</span></span><br><span class="line"><span class="comment">            char：u0000</span></span><br><span class="line"><span class="comment">            boolean：false</span></span><br><span class="line"><span class="comment">            引用：null</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        修饰符 属性类型 属性名 = 属性值！</span></span><br><span class="line"><span class="comment">    5、对象的创建和使用：</span></span><br><span class="line"><span class="comment">        - 必须使用new 关键字创建对象，构造器   Person nieqianlong = new Person();</span></span><br><span class="line"><span class="comment">        - 对象的属性 nieqianlong.name</span></span><br><span class="line"><span class="comment">        - 对象的方法 nieqianlong.sleep()</span></span><br><span class="line"><span class="comment">    6、类：</span></span><br><span class="line"><span class="comment">        静态的属性   属性</span></span><br><span class="line"><span class="comment">        动态的行为   方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><ul><li>该露的露，该藏的藏<ul><li>我们程序设计要追求<font color="red">“高内聚，低耦合”</font>。高内聚就是类的内部数据操作细节自己完成，不允许外部干涉；低耦合：仅暴露少部分方法给外部使用。</li></ul></li><li>封装（数据的隐藏）<ul><li>通常，应禁止直接访问一个对象中数据的实际表示，而通过操作接口来访问，这称为信息隐藏。</li></ul></li><li><font color="red">私有属性，get/set</font></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_04.Student;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    1.提高程序的安全性，保护数据</span></span><br><span class="line"><span class="comment">    2.隐藏代码的实现细节</span></span><br><span class="line"><span class="comment">    3.统一接口</span></span><br><span class="line"><span class="comment">    4.提高了系统的可维护性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.setName(<span class="string">"聂千龙"</span>);</span><br><span class="line">        System.out.println(s1.getName());</span><br><span class="line"></span><br><span class="line">        s1.setAge(<span class="number">999</span>); <span class="comment">// 不合法的</span></span><br><span class="line">        System.out.println(s1.getAge());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_04;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类    private:私有</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性私有</span></span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">// 名字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id; <span class="comment">// 学号</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> sex; <span class="comment">// 性别</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供一些可以操作这个属性的方法！</span></span><br><span class="line">    <span class="comment">// 提供一些public的get、set方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// get 获得这个数据</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// set 给这个数据设置值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>{</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> {</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getSex</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">char</span> sex)</span> {</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> {</span><br><span class="line">        <span class="keyword">if</span> (age &gt; <span class="number">120</span> || age &lt; <span class="number">0</span>){ <span class="comment">// 不合法的</span></span><br><span class="line">            <span class="built_in">this</span>.age = <span class="number">3</span>;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Alt + Insert 快捷键自动生成get、set方法</span></span><br><span class="line">    <span class="comment">// 学习（）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 睡觉（）</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><ul><li>继承的本质是对某一批类的抽象，从而实现对现实世界更好的建模。</li><li><font color="red">extands</font>的意思是“扩展”。子类是父类的扩展。</li><li>JAVA中类只有单继承，没有多继承！一个儿子只能有一个爸爸，一个爸爸可以有多个儿子。</li><li>继承是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等。</li><li>继承关系的两个类，一个为子类（派生类），一个为父类（基类）。子类继承父类，使用关键字extends来表示。</li><li>子类和父类之间，从意义上讲应该具有“is a”的关系</li></ul><ul><li>object类</li><li>super - this</li><li>方法重写：重点 —-&gt; 多态</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_05.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.say();</span><br><span class="line">        System.out.println(student.getMoney());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生 is 人      派生类，子类</span></span><br><span class="line"><span class="comment">// 子类继承了父类，就会拥有父类的全部方法！</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ctrl + H</span></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在Java中，所有的类，都默认直接或间接继承Object</span></span><br><span class="line"><span class="comment">// Person  人</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// public  公有</span></span><br><span class="line">    <span class="comment">// protected 受保护的</span></span><br><span class="line">    <span class="comment">// default 默认</span></span><br><span class="line">    <span class="comment">// private 私有</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1_000_000_000</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"说了一句话"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMoney</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMoney</span><span class="params">(<span class="type">int</span> money)</span> {</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_05.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.test(<span class="string">"聂千龙"</span>);</span><br><span class="line">        System.out.println(<span class="string">"============="</span>);</span><br><span class="line">        student.test1();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生 is 人      派生类，子类</span></span><br><span class="line"><span class="comment">// 子类继承了父类，就会拥有父类的全部方法！</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// 隐藏代码：调用了父类的无参构造</span></span><br><span class="line">        <span class="built_in">super</span>(); <span class="comment">// 调用父类的构造器必须在子类构造器的第一行</span></span><br><span class="line"><span class="comment">//        this("聂千龙");</span></span><br><span class="line">        System.out.println(<span class="string">"Student无参执行了"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> {</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">"feilong"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(String name)</span>{</span><br><span class="line">        System.out.println(name);   <span class="comment">//聂千龙</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name); <span class="comment">// feilong</span></span><br><span class="line">        System.out.println(<span class="built_in">super</span>.name); <span class="comment">// nieqianlong</span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"Student"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>{</span><br><span class="line">        print();</span><br><span class="line">        <span class="built_in">this</span>.print();</span><br><span class="line">        <span class="built_in">super</span>.print();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在Java中，所有的类，都默认直接或间接继承Object</span></span><br><span class="line"><span class="comment">// Person  人</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"Person无参执行了"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">"nieqianlong"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有的东西无法被继承</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"Person"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>super注意点：</p><pre><code>1、super调用父类的构造方法，必须在构造方法的第一个2、super必须只能出现在子类的方法或者构造方法中3、super和this不能同时调用构造方法</code></pre></li><li><p>VS this：</p><pre><code>代表的对象不同：    this：本身调用者这个对象    super：代表父类对象的引用前提：    this：没有继承也可以使用    super：只能在继承条件下才可以使用构造方法：    this();本类的构造    super();父类的构造！</code></pre></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_05.A;</span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_05.B;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="comment">// 静态方法和非静态方法区别很大！</span></span><br><span class="line">        <span class="comment">// 静态方法： 方法的调用只和左边，定义的数据类型有关</span></span><br><span class="line">    <span class="comment">// 非静态：重写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.test(); <span class="comment">// A类</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 父类的引用指向了子类</span></span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(); <span class="comment">// 子类重写了父类的方法</span></span><br><span class="line">        b.test(); <span class="comment">// B类</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>{</span><br><span class="line"><span class="comment">//    public  void test(){</span></span><br><span class="line"><span class="comment">//        System.out.println("A =&gt; test()");</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Override 重写</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//注解：有功能的注释</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"A =&gt; test()"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_05;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写都是方法的重写，和属性无关</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"B =&gt; test()"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>重写：需要有继承关系，子类重写父类的方法！</p><pre><code>1、方法名必须相同2、参数列表必须相同3、修饰符：范围可以扩大    public&gt;protected&gt;default&gt;private4、抛出的异常：范围可以被缩小，但不能扩大</code></pre></li><li><p>重写，子类的方法和父类必须一致，方法体不同！</p></li><li><p>为什么需要重写：</p><pre><code>1、父类的功能，子类不一定需要，或者不一定满足！Alt + Insert : Override</code></pre></li></ul><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><ul><li><p>动态编译：类型</p></li><li><p>多态即同一方法可以根据发送对象的不同而采用多种不同的行为方式。</p></li><li>一个对象的实际类型是确定的，但可以指向对象的引用的类型有很多（父类，有关系的类）</li><li>多态存在的条件：<ul><li>有继承关系</li><li>子类重写父类的方法</li><li>父类引用指向子类对象</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Person;</span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 一个对象的实际类型是确定的</span></span><br><span class="line">        <span class="comment">// 可以指向的引用类型就不确定了：父类的引用指向子类</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Student 能调用的方法都是自己的或者继承父类的！</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">// Person 父类型，可以指向子类，但是不能调用子类独有的方法</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对象能执行哪些方法，主要看对象左边的类型，和右边关系不大</span></span><br><span class="line">        s2.run(); <span class="comment">// 子类重写了父类的方法，执行子类的方法</span></span><br><span class="line">        s1.run();</span><br><span class="line">        s1.eat();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"son"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"eat"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"run"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多态注意事项：</span></span><br><span class="line"><span class="comment">1、多态是方法的多态，属性没有多态</span></span><br><span class="line"><span class="comment">2、父类和子类，有联系 没有父子关系会报类型转换异常！ClassCastException!</span></span><br><span class="line"><span class="comment">3、存在条件：继承关系；方法需要重写；父类的引用指向子类对象！ Father f1 = new Son();</span></span><br><span class="line"><span class="comment">4、不能被重写的方法类型：</span></span><br><span class="line"><span class="comment">    1、static 静态方法，属于类，不属于实例</span></span><br><span class="line"><span class="comment">    2、final  常量，无法改变，在常量池；</span></span><br><span class="line"><span class="comment">    4、private 私有方法</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure><ul><li>注意：多态是方法的多态，属性没有多态性</li><li><font color="red">instanceof</font>    （类型转换）-&gt; 引用类型    判断一个对象是什么类型（有没有父子类型）</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Person;</span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Student;</span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Teacher;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// Object &gt; String</span></span><br><span class="line">        <span class="comment">// Object &gt; Person &gt; Teacher</span></span><br><span class="line">        <span class="comment">// Object &gt; Person &gt; Student</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// instanceof主要的作用，是为了测试左边的对象，是不是右边的类的实例</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Student);  <span class="comment">// true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Person);   <span class="comment">// true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Object);   <span class="comment">// true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Teacher);  <span class="comment">// false</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> String);   <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Student);  <span class="comment">// true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Person);   <span class="comment">// true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Object);   <span class="comment">// true</span></span><br><span class="line"><span class="comment">//        System.out.println(person instanceof Teacher);  // 编译报错</span></span><br><span class="line"><span class="comment">//        System.out.println(person instanceof String);   // 编译报错</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Student);  <span class="comment">// true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Person);   <span class="comment">// true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Object);   <span class="comment">// true</span></span><br><span class="line"><span class="comment">//        System.out.println(student instanceof Teacher);  // 编译报错</span></span><br><span class="line"><span class="comment">//        System.out.println(student instanceof String);   // 编译报错</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"run"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>编译能不能通过首先看X和Y的类型是否有父子（继承）关系，如果存在则可同编译，如果没有则编译报错；</li></ul><p>其次，如果X和Y的类型存在继承关系，则不会报错，此时再判断X的实际类型，是不是Y的子类，如果是便为true，</p><p>不是就是false。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Person;</span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_06.Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="comment">// 类型之间的转换：基本类型转换 -&gt; 高低：64 32 16 8</span></span><br><span class="line">        <span class="comment">//                       父 -&gt; 子</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 高                    低</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"><span class="comment">//        student.go(); Person类中没有go方法</span></span><br><span class="line">        <span class="comment">// 将Person类型的student对象转换为Student类型，就可以使用Student类型的方法了！</span></span><br><span class="line">        ((Student)student).go();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 子类转换为父类，可能丢失自己的本来的一些方法！</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> student;</span><br><span class="line"><span class="comment">//        person.go();</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、父类引用指向子类的对象</span></span><br><span class="line"><span class="comment">2、把子类转换为父类，向上转型：强制转换 可能会丢失方法</span></span><br><span class="line"><span class="comment">3、把父类转换为子类，向下转型：自动转换</span></span><br><span class="line"><span class="comment">4、方便方法的调用，减少重复的代码！可以使代码变得更加简洁</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"run"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">go</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"go"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="Static"><a href="#Static" class="headerlink" title="Static"></a>Static</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_07;</span><br><span class="line"></span><br><span class="line"><span class="comment">// static</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> age; <span class="comment">// 静态变量  多线程！</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;  <span class="comment">// 非静态变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>{</span><br><span class="line">        go();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">go</span><span class="params">()</span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(Student.age);</span><br><span class="line">        System.out.println(s1.age);</span><br><span class="line">        System.out.println(s1.score);</span><br><span class="line"></span><br><span class="line">        go();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Student</span>().run();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_07;</span><br><span class="line"><span class="comment">// 如果Person使用final修饰则无法继承（final断子绝孙）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> {</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">// 2、代码块（匿名代码块）</span></span><br><span class="line">        <span class="comment">// 可以用来赋初始值</span></span><br><span class="line">        System.out.println(<span class="string">"匿名代码块"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> {</span><br><span class="line">        <span class="comment">//1、 静态代码块（第一个执行，和类一起加载）</span></span><br><span class="line">        System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> {</span><br><span class="line">        System.out.println(<span class="string">"构造方法"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(<span class="string">"==================="</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_07;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态导入包</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.PI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        System.out.println(Math.random());</span><br><span class="line">        System.out.println(random());</span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><ul><li><font color="red">abstract</font>修饰符可以用来修饰方法也可以用来修饰类，如果修饰方法，该方法就是抽象方法；如果修饰类，那么该类就是抽象类。</li><li>抽象类中可以没有抽象方法，但是有抽象方法的类一定要声明为抽象类。</li><li>抽象类，不能使用new关键字来创建对象，它是用来让子类继承的。</li><li>抽象方法：只有方法的声明，没有方法的实现，它是让子类实现的。</li><li>子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_08;</span><br><span class="line"></span><br><span class="line"><span class="comment">// abstract 抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Action</span> {</span><br><span class="line">    <span class="comment">// 约束-有人帮我们实现</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1、不能new这个抽象类，只能靠子类去实现它：约束！</span></span><br><span class="line"><span class="comment">    2、抽象类里可以写普通方法</span></span><br><span class="line"><span class="comment">    3、抽象方法必须在抽象类中</span></span><br><span class="line"><span class="comment">    抽象的抽象：就是一个约束</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_08;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类的所有方法，继承了它的子类，都必须要实现它的方法-除非它的子类也是abstract（父债子偿）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">Action</span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>思考题：</p><ul><li>抽象类不能new，那么它存在构造器吗？</li></ul><p>答：存在构造器，子类在继承父类后，需要通过父类的构造器来实例化，所以抽象类也需要构造器</p><p><img src="https://s2.loli.net/2022/08/23/ThHqa9Lu4oP8yjU.png" alt="抽象类Action的class文件"></p><ul><li>抽象类存在的意义是什么？</li></ul><p>答：将拥有相同属性的东西抽象起来，对其自特有的则使用抽象方法，进而提高开发效率</p></li></ul><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><ul><li>普通类：只有具体实现</li><li>抽象类：具体实现和规范（抽象方法）都有！</li><li>接口：只有规范！自己无法写方法 ~ 专业的约束！  约束和实现的分离：面向接口编程</li></ul><ul><li>接口就是规范，定义的是，体现了现实世界中“如果你是……则必须能……”的思想。例如：如果你是天使，则必须能飞；如果你是汽车，则必须能跑；如果你是好人，则必须干掉坏人；如果你是坏人，则必须欺负好人。</li><li><font color="red">接口的本质是契约，</font>就像我们的法律一样，制定好了大家遵守。</li><li>OO的精髓，是对对象的抽象，最能体现这一点的就是接口为什么我们讨论设计模式都只针对了具备了抽象能力的语言（比如C++、Java、C#等），就是因为设计模式所研究的实际上就是如何合理的去抽象。</li><li>声明类的关键字是class，声明接口的关键字是interface</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_09;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类 extends 单继承</span></span><br><span class="line"><span class="comment">// 类 可以实现接口 implements 接口 可以调用多接口</span></span><br><span class="line"><span class="comment">// 实现了接口的类，就需要重写接口的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多继承，利用接口实现多继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span>, TimeService {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">timer</span><span class="params">()</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_09;</span><br><span class="line"></span><br><span class="line"><span class="comment">// interface定义的关键字，接口都需要实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 常量 public static final</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">AGE</span> <span class="operator">=</span> <span class="number">99</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接口中所有定义的方法其实都是抽象的 public abstract</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_09;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TimeService</span> {</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">timer</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>作用：<pre><code>1、约束2、定义一些方法，让不同的人实现3、public abstract4、public static final5、接口不能被实例化，接口中没有构造方法6、implement可以实现多个接口7、必须要重写接口中的方法</code></pre></li></ul><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><ul><li>内部类就是在一个类的内部再定义一个类，比如：A类中定义一个B类，那么B类相对A类来说就称为内部类，而A类对于B类来说就是外部类。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.oop.Demo_10.Outer;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Outer</span> <span class="variable">outer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过这个外部类来实例化内部类</span></span><br><span class="line">        Outer.<span class="type">Inner</span> <span class="variable">inner</span> <span class="operator">=</span> outer.<span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br><span class="line">        inner.in();</span><br><span class="line">        inner.getID();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.oop.Demo_10;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">out</span><span class="params">()</span>{</span><br><span class="line">        System.out.println(<span class="string">"这是外部类的方法"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span>{</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">in</span><span class="params">()</span>{</span><br><span class="line">            System.out.println(<span class="string">"这是内部类方法"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获得外部类的私有属性</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getID</span><span class="params">()</span>{</span><br><span class="line">            System.out.println(id);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 局部内部类</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span>{</span><br><span class="line"></span><br><span class="line">            <span class="keyword">class</span> <span class="title class_">Inner2</span>{</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">in</span><span class="params">()</span>{</span><br><span class="line"></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个java类中可以有多个class类，但是只能有一个public class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>{</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Chapter-07"><a href="#Chapter-07" class="headerlink" title="Chapter 07"></a>Chapter 07</h1><h2 id="异常机制"><a href="#异常机制" class="headerlink" title="异常机制"></a>异常机制</h2><h3 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h3><ul><li>实际工作中，遇到的情况不可能是十分完美的。比如：你写的某个模块，用户输入不一定符合你的要求、你的程序要打开某个文件，这个文件可能不存在或者格式不对，你要读取数据库的数据，数据库可能是空的等。我们的程序在跑着，内存或者硬盘可能满了，等等。</li><li>软件程序在运行过程中，非常可能遇到刚刚提到的这些异常问题，我们叫异常，英文是：<font color="red">Exception</font>，意思是例外，这些例外情况（异常），怎么让我们写出的程序做出合理的处理，而不至于程序崩溃。</li><li>异常指程序运行过程中出现的不期而至的各种情况，如：文件找不到、网络连接失败、非法参数等。</li><li>异常发生在程序运行期间，他影响了正常的程序执行流程。</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo_01</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line"><span class="comment">//        new Demo_01().a();</span></span><br><span class="line">        System.out.println(<span class="number">11</span>/<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//    public void a(){</span></span><br><span class="line"><span class="comment">//        b();</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"><span class="comment">//    public void b(){</span></span><br><span class="line"><span class="comment">//        a();</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="简单分类"><a href="#简单分类" class="headerlink" title="简单分类"></a>简单分类</h3><ul><li>要理解Java异常是如何工作的，你需要掌握以下三种类型的异常：</li><li>检查性异常：最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在的文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。</li><li>运行时异常：运行时异常是可能被程序避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。</li><li>错误<font color="red">ERROR</font>：错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，再编译也检查不到的。</li></ul><h3 id="异常体系结构"><a href="#异常体系结构" class="headerlink" title="异常体系结构"></a>异常体系结构</h3><ul><li>Java把异常当做对象来处理，并定义一个基类java.lang.Throwable作为所有异常的超类。</li><li>在Java API中已经定义了许多异常类，这些异常类分为两大类，错误<font color="red">ERROR</font>和异常<font color="red">Exception</font></li></ul><h3 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h3><ul><li>Error类对象有Java虚拟机生成并抛出，大多数错误与代码编写者所执行的操作无关。</li><li>Java虚拟机运行错误(Virtual MachineError)，当JVM不再有执行操作所需的内存资源时，将出现<font color="red">OutOfMemoryError</font>。这些异常发生时，Java虚拟机（JVM）一般会选择线程终止；</li><li>还有发生在虚拟机试图执行应用时，如类定义错误(NoClassDefFoundError)、链接错误(LinkageError)。这些错误是不可查的，因为他们在应用程序的控制和处理能力之外，而且绝大多数是程序运行时不允许出现的状况。</li></ul><h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><ul><li>在Exception分支中有一个重要的子类RuntimeException（运行时异常）<ul><li>ArrayIndexOutOfBoundsException（数组下标越界）</li><li>NullPointerException（空指针异常）</li><li>ArithmaticException（算术异常）</li><li>MissingResourceException（丢失资源）</li><li>ClassNotFoundException（找不到类）等异常，这些异常是不检查异常，程序中可以选择捕获处理，也可以不处理。</li></ul></li><li>这些异常一般是由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生；</li><li>Error和Exception的区别：Error一般是灾难性的致命的错误，是程序无法控制和处理的，当出现这些异常时，Java虚拟机（JVM）一般会选择终止线程；Exception一般情况下是可以被程序处理的，并且在程序中应该尽可能的去处理这些异常。</li></ul><h3 id="异常处理机制"><a href="#异常处理机制" class="headerlink" title="异常处理机制"></a>异常处理机制</h3><ul><li>抛出异常</li><li>捕获异常</li></ul><ul><li>异常处理五个关键字<ul><li>try、catch、finally、throw、throws</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> { <span class="comment">//try监控区域</span></span><br><span class="line">            System.out.println(a/b);</span><br><span class="line">        }<span class="keyword">catch</span> (ArithmeticException e){ <span class="comment">// catch捕获异常</span></span><br><span class="line">            System.out.println(<span class="string">"程序出现异常，变量b不能为0"</span>);</span><br><span class="line">        }<span class="keyword">finally</span> { <span class="comment">// 处理善后</span></span><br><span class="line">            System.out.println(<span class="string">"finally"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// finally 可以不要finally，IO，资源，关闭！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> { <span class="comment">//try监控区域</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Test</span>().a();</span><br><span class="line">        }<span class="keyword">catch</span> (Throwable e){ <span class="comment">// （想要捕获的异常的类型！）catch捕获异常</span></span><br><span class="line">            System.out.println(<span class="string">"程序出现异常"</span>);</span><br><span class="line">        }<span class="keyword">finally</span> {</span><br><span class="line">            System.out.println(<span class="string">"finally"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 假设要捕获多个异常：从小到大！</span></span><br><span class="line">        <span class="keyword">try</span> { <span class="comment">//try监控区域</span></span><br><span class="line">            System.out.println(a/b);</span><br><span class="line">        }<span class="keyword">catch</span> (Error e){</span><br><span class="line">            System.out.println(<span class="string">"Error"</span>);</span><br><span class="line">        }<span class="keyword">catch</span> (Exception e){</span><br><span class="line">            System.out.println(<span class="string">"Exception"</span>);</span><br><span class="line">        }<span class="keyword">catch</span> (Throwable t){</span><br><span class="line">            System.out.println(<span class="string">"Throwable"</span>);</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            System.out.println(<span class="string">"finally"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">()</span>{</span><br><span class="line">        b();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">()</span>{</span><br><span class="line">        a();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Ctrl + Alt + T</span></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            System.out.println(a/b);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace(); <span class="comment">//打印错误的栈信息</span></span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Test</span>().test(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (ArithmeticException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 假设这个方法中，处理不了这个异常，方法上抛出异常</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="keyword">throws</span> ArithmeticException{</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">0</span>){ <span class="comment">// 主动抛出异常 throw throws</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArithmeticException</span>(); <span class="comment">// 主动抛出异常，一般在方法中使用</span></span><br><span class="line">        }</span><br><span class="line">        System.out.println(a/b);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h3><ul><li>使用Java内置的异常类可以描述在编程是出现的大部分异常情况。除此之外，用户还可以自定义异常，用户自定义异常，只需继承Exception即可。</li><li>在程序中使用自定义异常类，大体可分为以下几个步骤：<ul><li>1、创建自定义异常类</li><li>2、在方法中通过throw关键字抛出异常</li><li>3、如果在当前抛出异常的方法中处理异常，可以使用try-catch语句捕获并处理；否则在方法的声明处通过throws关键字指明要抛出给方法调用者的异常，继续进行下一步操作。</li><li>4、在出现异常方法的调用者中捕获并处理异常。</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.exception.Demo_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> {</span><br><span class="line">    <span class="comment">// 可能会存在异常的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a)</span> <span class="keyword">throws</span> MyException {</span><br><span class="line">        System.out.println(<span class="string">"传递的参数为："</span>+ a);</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">10</span>){</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(a); <span class="comment">// 抛出</span></span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"OK"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            test(<span class="number">11</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (MyException e) {</span><br><span class="line">            System.out.println(<span class="string">"MyException=&gt;"</span>+e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nieqianlong.exception.Demo_02;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义的异常类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>{</span><br><span class="line">    <span class="comment">// 传递数组&gt;10抛出异常</span></span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> detail;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyException</span><span class="params">(<span class="type">int</span> detail)</span> {</span><br><span class="line">        <span class="built_in">this</span>.detail = detail;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// toString：异常的打印信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"MyException{"</span> + detail + <span class="string">'}'</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="实际应用中的经验总结"><a href="#实际应用中的经验总结" class="headerlink" title="实际应用中的经验总结"></a>实际应用中的经验总结</h3><ul><li>处理运行时异常时，采用逻辑去合理规避try-catch处理</li><li>在多重catch块后面，可以加上一个catch(Exception)来处理可能会被遗漏的异常</li><li>对于不确定的代码，也可以加上try-catch处理潜在的异常</li><li>尽量去处理异常，切忌只是简单地调用printStackTrace()去打印输出</li><li>具体如何处理异常，要根据不同业务需求和异常类型去决定</li><li>尽量添加finally语句块去释放占用的资源</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dos命令学习</title>
      <link href="/archives/4d22d848.html"/>
      <url>/archives/4d22d848.html</url>
      
        <content type="html"><![CDATA[<h1 id="打开CMD的方式"><a href="#打开CMD的方式" class="headerlink" title="打开CMD的方式"></a>打开CMD的方式</h1><ol><li>开始 + 系统 + 命令提示符</li><li>Win键 + R 输入cmd打开控制台（推荐）</li><li>在任意文件夹下，按住shift键 + 鼠标右键，在此处打开命令窗口</li><li>资源管理器的地址导航栏前面加上cmd路径</li></ol><p>管理员方式运行：选择以管理员方式运行</p><h1 id="常用的Dos命令："><a href="#常用的Dos命令：" class="headerlink" title="常用的Dos命令："></a>常用的Dos命令：</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 盘符切换</span></span><br><span class="line">C:</span><br><span class="line">D:</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 查看当前目录下的所有文件</span></span><br><span class="line"><span class="built_in">dir</span></span><br><span class="line">D:\&gt;<span class="built_in">dir</span> <span class="comment"># 查看D盘下所有文件</span></span><br><span class="line"><span class="comment"># 切换目录 </span></span><br><span class="line"><span class="built_in">cd</span> <span class="comment"># change directory</span></span><br><span class="line"><span class="comment">## 跨盘符</span></span><br><span class="line">E:\&gt;<span class="built_in">cd</span> /d f: <span class="comment">#在E盘下切换到F盘</span></span><br><span class="line">F:\&gt;<span class="built_in">cd</span> /d E:\IDE <span class="comment">#在F盘下切换到E盘的IDE目录</span></span><br><span class="line"><span class="comment">## 同一盘符下</span></span><br><span class="line">E:\&gt;<span class="built_in">cd</span> IDE <span class="comment"># 打开E盘吓的IDE目录</span></span><br><span class="line"><span class="comment">## 返回上一级</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 清理屏幕</span></span><br><span class="line">cls <span class="comment"># clear screen</span></span><br><span class="line"><span class="comment"># 退出终端</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 查看电脑ip</span></span><br><span class="line">ipconfig</span><br><span class="line"><span class="comment"># 打开应用</span></span><br><span class="line"><span class="comment">##计算器</span></span><br><span class="line">calc</span><br><span class="line"><span class="comment">##画图</span></span><br><span class="line">mspaint</span><br><span class="line"><span class="comment">##记事本</span></span><br><span class="line">notpad</span><br><span class="line"><span class="comment">#ping 命令</span></span><br><span class="line">ping www.baidu.com</span><br><span class="line"><span class="comment">#文件操作命令</span></span><br><span class="line"><span class="comment">## 创建目录</span></span><br><span class="line">md 目录名</span><br><span class="line"><span class="comment">## 删除目录</span></span><br><span class="line">rd 目录名</span><br><span class="line"><span class="comment">## 创建文件</span></span><br><span class="line"><span class="built_in">cd</span>&gt; 文件名</span><br><span class="line"><span class="comment">## 删除文件</span></span><br><span class="line">del 文件名</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown测试</title>
      <link href="/archives/45babedb.html"/>
      <url>/archives/45babedb.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown学习"><a href="#Markdown学习" class="headerlink" title="Markdown学习"></a>Markdown学习</h1><p>标题：</p><h1 id="一级标题-一级标题"><a href="#一级标题-一级标题" class="headerlink" title="一级标题(#一级标题)"></a>一级标题(#一级标题)</h1><h2 id="二级标题-二级标题"><a href="#二级标题-二级标题" class="headerlink" title="二级标题(##二级标题)"></a>二级标题(##二级标题)</h2><h3 id="三级标题-三级标题"><a href="#三级标题-三级标题" class="headerlink" title="三级标题(###三级标题)"></a>三级标题(###三级标题)</h3><h4 id="四级标题-四级标题"><a href="#四级标题-四级标题" class="headerlink" title="四级标题(####四级标题)"></a>四级标题(####四级标题)</h4><p>Markdown最多支持到六级标题</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><strong>Hello,Word!</strong></p><p><em>Hello,Word!</em></p><p><strong><em>Hello,Word!</em></strong></p><p><del>Hello,Word!</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>该文档用于markdown学习</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><p>（—-或者<em>*</em>）</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://pic3.zhimg.com/v2-e80c8023fd727e099f5846faf5435eac_1440w.jpg?source=172ae18b" alt="图片测试1"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/a68314308cc0cd101bfc44abb176dd10.png" alt="图片测试2"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="(https://www.nieqianlong.cn/">点击跳转到我的博客</a>)</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>A</li><li>B</li><li>C</li></ol><ul><li>A</li><li>B</li><li>C</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><div class="table-container"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>1994.1.1</td><td></td></tr></tbody></table></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客搭建历程</title>
      <link href="/archives/4d8c90f.html"/>
      <url>/archives/4d8c90f.html</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09-24</p></div></div><div class="timeline-item-content"><p>1、修改关于界面，希望你能更好地认识我！</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09-23</p></div></div><div class="timeline-item-content"><p>1、增加侧边电子钟配置</p><p>2、添加GitHub贡献图</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09-22</p></div></div><div class="timeline-item-content"><p>1、安装pwa</p><p>2、自定义css，实现一图流</p><p>3、添加外挂标签</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09-21</p></div></div><div class="timeline-item-content"><p>1、修复网站（原因是月日顺序写错7/25/2022写成了25/7/2022）</p><p>2、记得备份网站</p><p>3、wowjs与留言板的配置</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>09-20</p></div></div><div class="timeline-item-content"><p>1、网站崩了（搞了一晚上，愁死我了😭）</p><p>2、得到大佬<a href="[关于 | 安知鱼 (https://anzhiy.cn">安知鱼</a>的帮忙</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>07-25</p></div></div><div class="timeline-item-content"><p>1、发现更适合自己的主题</p><p>2、使用Hexo Butterfly重建博客</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>07-24</p></div></div><div class="timeline-item-content"><p>1、使用Hexo matery重建博客</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>07-20</p></div></div><div class="timeline-item-content"><p>1、暑假了，终于想起来自己还有个博客</p><p>2、感觉WordPress好归好，但是不适合自己高级CV工程师的称号</p><p>3、初始化服务器，重头再来</p><p>4、开始尝试Hexo</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>03-04至07-20</p></div></div><div class="timeline-item-content"><p>1、我也不确定自己干了啥，懵懵懂懂进了门，一堆bug</p><p>2、感谢好心人帮助，期间遇到了很多不计回报的大佬深夜还在帮助我</p><p>3、疫情封城加上学业繁重，博客几经停更</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>03-04</p></div></div><div class="timeline-item-content"><p>1、确定使用WordPress建站</p><p>2、开始备案</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>03-03</p></div></div><div class="timeline-item-content"><p>1、购买云服务器，准备实操</p><p>2、购买域名www.nieqianlong.cn</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>03-01</p></div></div><div class="timeline-item-content"><p>1、上海封校，闲暇之际想起来自己还没有博客</p><p>2、上B站<del>摸鱼</del>学习，准备创建博客</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 我的日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于Butterfly的外挂标签引入</title>
      <link href="/archives/615e2dec.html"/>
      <url>/archives/615e2dec.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>本文档为<a href="https://jq.qq.com/?_wv=1027&amp;k=EF1Elvqp">🧊Akilarの糖果屋🍭</a>出品，转载需注明出处。</p><p>如有使用了本站的外挂标签插件的读者，请确保自己的配置内容为最新。</p><p>同理，若您在使用本帖教程后，发现样式无法完全还原文档内效果，请重点排查您的其余第三方魔改css样式，例如css中是否存在<strong>circle</strong>、<strong>square</strong>等易重class名。</p></div><details class="folding-tag" red=""><summary> 点开查看开发记录 </summary>              <div class="content">              <div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>本文所涉及的样式，主要参考的是各类已有主题，并对相应styl文件进行样式修改以及添加夜间模式适配。已尽可能追根溯源找到了各部分魔改内容最初的作者，如有错误和遗漏还请联系我修改。</p></div><div class="timeline green"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>开发记录</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-04-29:发布插件版v1.0.17</p></div></div><div class="timeline-item-content"><ol><li>在bubble气泡外挂标签基础上新增reference引用文献标签</li><li>修复了bubble气泡外挂标签层级过高遮挡提示框的bug</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-04-28:发布插件版v1.0.16</p></div></div><div class="timeline-item-content"><ol><li>移除timeline外挂标签，请使用butterfly新版自带的timeline标签，效果更好。</li><li>修复tip标签自定义图标无效的bug</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-04-07:发布插件版v1.0.15</p></div></div><div class="timeline-item-content"><ol><li>调整气泡显隐动画逻辑，避免透明度变换瞬间遮挡到正文。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-04-07:发布插件版v1.0.14</p></div></div><div class="timeline-item-content"><ol><li>新增气泡注释bubble标签样式。效果比nota标签更好。</li><li>支持自定义气泡背景色。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-03-03:发布插件版v1.0.13</p></div></div><div class="timeline-item-content"><ol><li>新增开关逻辑，iconfont，carousel设为false则不引入。</li><li>site标签新增灯箱屏蔽，不再支持点击放大图片。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-02-14:发布插件版v1.0.12</p></div></div><div class="timeline-item-content"><ol><li>剔除了link卡片的无效css</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2022-01-26:发布插件版v1.0.11</p></div></div><div class="timeline-item-content"><ol><li>butterfly_v4.0新增了<code>timeline</code>标签，与本插件标签名冲突。可以选择改用标签文档中的源码配置方案并剔除timeline标签或者删除主题原有的timeline标签文件<code>Blogroot\themes\butterfly\scripts\tag\timeline.js</code>和<code>Blogroot\themes\butterfly\source\css\_tags\timeline.styl</code>。（总之不能共存）</li><li>修复了carousel标签刷新后不加载的bug。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-12-23:发布插件版v1.0.10</p></div></div><div class="timeline-item-content"><ol><li>将所有CDN链接迁移至<code>unpkg.zhimg.com</code></li><li>外露所有CDN配置项，支持读者自行更改CDN源</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-12-09:发布插件版v1.0.9</p></div></div><div class="timeline-item-content"><ol><li>调整<code>link</code>标签的默认图片缺省值适配，新增<code>tag_plugins.link.placeholder</code>配置项。</li><li>因为新增了默认图片，新增配置项，所以需要更新版本。如果本身使用link标签就有自己加图片的习惯的，无需升级。<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus@1.0.9 --save</span><br></pre></td></tr></tbody></table></figure></li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-12-07:发布插件版v1.0.5</p></div></div><div class="timeline-item-content"><ol><li>调整<code>folding</code>标签，解决与twikoo设置面板样式的冲突问题</li><li>因为调整了<code>folding</code>标签的编译函数，低版本会出现folding样式失效的情况，请各位更新至最新版本。<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus@1.0.5 --save</span><br></pre></td></tr></tbody></table></figure></li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-12-01:发布插件版v1.0.4</p></div></div><div class="timeline-item-content"><ol><li>调整<code>tip</code>标签，字体垂直居中</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-08-06:发布插件版v1.0.3</p></div></div><div class="timeline-item-content"><ol><li>新增<code>carousel</code>旋转相册</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-07-07:发布插件版v1.0.0</p></div></div><div class="timeline-item-content"><ol><li>使用npm插件安装。</li><li>测试版本为butterfly_v3.1.0、3.3.0、3.7.8、3.8.0</li><li>插件写法调整为高内聚，理论上不受butterfly主题版本影响。</li><li>为了获得完整效果，建议打开主题的beautify配置项和theme_color配置项。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-03-19:正式版v1.61</p></div></div><div class="timeline-item-content"><ol><li>修复行内图片换行错误。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2021-02-24:正式版v1.6</p></div></div><div class="timeline-item-content"><ol><li>新增一个样式标签，进度条progress</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-12-31:正式版v1.5</p></div></div><div class="timeline-item-content"><ol><li>新增两个样式标签，github徽标ghbdage和特效标签wow</li><li>移除静态资源中的<code>fontawesome-animation.min.css</code>以及<code>issues.js</code>，改为CDN引用。</li><li>本帖不专门提供特效标签wow的配置方案，若有需要，请查看站内教程<a href="/posts/abab51cf/">使用wowjs给博客添加动画效果</a></li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-12-17:正式版v1.4</p></div></div><div class="timeline-item-content"><ol><li>新增两个样式标签poem和icon</li><li>修复了folding标签嵌套字体逐级放大的bug。</li><li>不再更新v3.4.0以下版本的适配内容。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-12-13:正式版v1.3</p></div></div><div class="timeline-item-content"><ol><li>新增Butterfly_v3.4.0的配置文件。</li><li>请读者根据自己的主题版本选择替换。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-12-07:正式版v1.21</p></div></div><div class="timeline-item-content"><ol><li>资源文件无任何改动。</li><li>更新了动态标签的使用说明。补全参数配置，更换示例。使得教程更加通俗易懂。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-12-03:正式版v1.2</p></div></div><div class="timeline-item-content"><ol><li>新增当初弃用的issues.js标签，以配合友链魔改教程中的issues自动更新功能。</li><li>更新了静态资源文件，请之前的读者重新覆盖安装。</li><li>修改了<code>fontawesome-animation.min.css</code>的引入方式，改成使用<code>@import</code>注入<code>index.css</code>。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-11-16:正式版v1.1</p></div></div><div class="timeline-item-content"><ol><li>新增tip.js，将小康大佬的渐变色上标标签写法从HTML的方式改成用标签语法编写。</li><li>新增动态标签样式anima，使用了fontawesome-animation项目。</li><li>新增标签内容夜间模式适配。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-11-15:正式版v1.0</p></div></div><div class="timeline-item-content"><ol><li>基本完成Volantis外挂标签移植。</li><li>移除了btn标签，因为存在冲突。而且不如butterfly自带的button样式好看。</li><li>适配了folding标签的夜间模式。</li><li>打包了静态资源文件，上传蓝奏云。</li></ol></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-11-14:内测版v0.05</p></div></div><div class="timeline-item-content"><ol><li>主要使用了<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。</li><li>主要参考内容<ul><li><a href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></li><li><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins）</a></li><li><a href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></li><li><a href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></li><li><a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></li></ul></li></ol></div></div></div>              </div>            </details><div class="tabs" id="配置方案"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#配置方案-1">npm插件安装方案（推荐）</button></li><li class="tab"><button type="button" data-href="#配置方案-2">源码修改配置方案</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="配置方案-1"><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></tbody></table></figure>考虑到hexo自带的markdown渲染插件<code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></tbody></table></figure></li><li>添加配置信息，以下为写法示例<br> 在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加<figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">/img/link.png</span> <span class="comment">#link_card标签默认的图标图片</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span></span><br><span class="line">    <span class="attr">tag_plugins_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span></span><br></pre></td></tr></tbody></table></figure></li><li>参数释义</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:left">priority</td><td style="text-align:left">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:left">issues</td><td style="text-align:left">true/false</td><td style="text-align:left">【可选】issues标签控制开关，默认为false</td></tr><tr><td style="text-align:left">link.placeholder</td><td style="text-align:left">【必选】link卡片外挂标签的默认图标</td></tr><tr><td style="text-align:left">CDN.anima</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】动画标签anima的依赖</td></tr><tr><td style="text-align:left">CDN.jquery</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.issues</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.iconfont</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】iconfont标签symbol样式引入，如果不想引入，则设为false</td></tr><tr><td style="text-align:left">CDN.carousel</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖，如果不想引入则设为false</td></tr><tr><td style="text-align:left">CDN.tag_plugins_css</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】外挂标签样式的CSS依赖，为避免CDN缓存延迟，建议将@latest改为具体版本号</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="配置方案-2"><p></p><div class="tip info"><p>源码修改配置方案适用于不想应用全部外挂标签的用户，供熟悉外挂标签原理的用户自行选择装配需要的标签文件。</p></div><p></p><ol><li>下载资源文件<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Akilarlxh/hexo-butterfly-tag-plugins-plus"><img src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&amp;repo=hexo-butterfly-tag-plugins-plus&amp;theme=vue&amp;show_owner=true"></a></li><li>将下载的<code>hexo-butterfly-tag-plugins-plus.zip</code>解压得到资源文件夹,下文以<code>[tag_plugins_file]</code>指代该文件夹。</li><li>将<code>[tag_plugins_file]\lib\scripts</code>目录下的文件放到<code>[Blogroot]\themes\butterfly\scripts\tag\</code>文件夹内。</li><li>将<code>[tag_plugins_file]\lib\style</code>目录下的文件放到<code>[Blogroot]\themes\butterfly\source\css\tags\</code>文件夹内。</li><li>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加<code>CDN</code>依赖项。由于<code>issues</code>写入<code>timeline</code>和<code>site-card</code>标签要用到<code>jquery</code>，请务必根据注释指示的版本决定是否添加。<figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css"</span>  <span class="string">media="defer"</span> <span class="string">onload="this.media='all'"&gt;</span>  <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src="https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/carousel-touch.min.js"&gt;&lt;/script&gt;</span> <span class="comment">#carousel相册鼠标动作的依赖</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src="https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 自butterfly_v3.4.0+开始，主题基本实现去jquery化，需要自己添加引用，请读者根据版本自行决定是否添加这行引用。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src="https://npm.elemecdn.com/hexo-theme-volantis@latest/source/js/issues.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment">#数据集合标签issues的依赖</span></span><br></pre></td></tr></tbody></table></figure></li><li>考虑到hexo自带的markdown渲染插件<code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></tbody></table></figure></li><li>外挂标签使用方案请参阅下文。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#text-2">样式预览</button></li><li class="tab"><button type="button" data-href="#text-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{% u 文本内容 %}</span><br><span class="line">{% emp 文本内容 %}</span><br><span class="line">{% wavy 文本内容 %}</span><br><span class="line">{% del 文本内容 %}</span><br><span class="line">{% kbd 文本内容 %}</span><br><span class="line">{% psw 文本内容 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="text-2"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 {% u 下划线 %} 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 {% emp 着重号 %} 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 {% wavy 波浪线 %} 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 {% del 删除线 %} 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 {% kbd command %} + {% kbd D %}</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：{% psw 这里没有验证码 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#span-1">标签语法</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#span-3">样式预览</button></li><li class="tab"><button type="button" data-href="#span-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="span-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% span 样式参数(参数以空格划分), 文本内容 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ol><li>字体: logo, code</li><li>颜色: <span class="p red">red</span>,<span class="p yellow">yellow</span>,<span class="p green">green</span>,<span class="p cyan">cyan</span>,<span class="p blue">blue</span>,<span class="p gray">gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="span-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class="p red">红色</span>、<span class="p yellow">黄色</span>、<span class="p green">绿色</span>、<span class="p cyan">青色</span>、<span class="p blue">蓝色</span>、<span class="p gray">灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class="p center logo large">Volantis</span><br><span class="p center small">A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：{% span red, 红色 %}、{% span yellow, 黄色 %}、{% span green, 绿色 %}、{% span cyan, 青色 %}、{% span blue, 蓝色 %}、{% span gray, 灰色 %}。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">{% span center logo large, Volantis %}</span><br><span class="line">{% span center small, A Wonderful Theme for Hexo %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h2><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#p-1">标签语法</button></li><li class="tab"><button type="button" data-href="#p-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#p-3">样式预览</button></li><li class="tab"><button type="button" data-href="#p-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="p-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% p 样式参数(参数以空格划分), 文本内容 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-2"><ol><li>字体: logo, code</li><li>颜色: <span class="p red">red</span>,<span class="p yellow">yellow</span>,<span class="p green">green</span>,<span class="p cyan">cyan</span>,<span class="p blue">blue</span>,<span class="p gray">gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="p-3"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class="p red">红色</p>、<p class="p yellow">黄色</p>、<p class="p green">绿色</p>、<p class="p cyan">青色</p>、<p class="p blue">蓝色</p>、<p class="p gray">灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class="p center logo large">Volantis</p><p class="p center small">A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：{% p red, 红色 %}、{% p yellow, 黄色 %}、{% p green, 绿色 %}、{% p cyan, 青色 %}、{% p blue, 蓝色 %}、{% p gray, 灰色 %}。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">{% p center logo large, Volantis %}</span><br><span class="line">{% p center small, A Wonderful Theme for Hexo %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h2><div class="note warning flat"><p>最新版<code>butterfly</code>标签支持引用<code>fontawesome V5</code>图标，效果上已经优于<code>volantis</code>的note标签。故不再额外引入<code>volantis的note样式</code>。<del>做样式适配好麻烦的啊，能偷懒就偷懒吧</del></p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>以下是<code>butterfly</code>主题的note写法。</p></div><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#note-1">通用配置</button></li><li class="tab"><button type="button" data-href="#note-2">语法格式</button></li><li class="tab"><button type="button" data-href="#note-3">配置参数</button></li><li class="tab active"><button type="button" data-href="#note-4">样式预览</button></li><li class="tab"><button type="button" data-href="#note-5">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="note-1"><p>修改主题配置文件<br></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><br><code>Note</code>标签外挂有两种用法。<code>icons</code>和<code>light_bg_offset</code>只对方法一生效。<p></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><details class="folding-tag" cyan=""><summary> 方法一 </summary>              <div class="content">              <figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% note [class] [no-icon] [style] %}</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">{% endnote %}</span><br></pre></td></tr></tbody></table></figure>              </div>            </details><details class="folding-tag" blue=""><summary> 方法二 </summary>              <div class="content">              <figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% note [color] [icon] [style] %}</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">{% endnote %}</span><br></pre></td></tr></tbody></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><details class="folding-tag" cyan=""><summary> 方法一 </summary>              <div class="content">              <div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">class</td><td style="text-align:left">【可选】标识，不同的标识有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td style="text-align:left">no-icon</td><td style="text-align:left">【可选】不显示 icon</td></tr><tr><td style="text-align:left">style</td><td style="text-align:left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" blue=""><summary> 方法二 </summary>              <div class="content">              <div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">class</td><td style="text-align:left">【可选】标识，不同的标识有不同的配色<br>（ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td style="text-align:left">no-icon</td><td style="text-align:left">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td style="text-align:left">style</td><td style="text-align:left">【可选】可以覆盖配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="note-4"><details class="folding-tag" cyan=""><summary> 方法一 </summary>              <div class="content">              <ol><li><p><code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div></li><li><p><code>modern</code>样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div></li><li><p><code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div></li><li><p><code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div></li><li><p><code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div></li></ol>              </div>            </details><details class="folding-tag" blue=""><summary> 方法二 </summary>              <div class="content">              <ol><li><p>simple样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>modern样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>flat样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li></ol><ol><li><p>disabled样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></li><li><p>no-icon样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-5"><details class="folding-tag" cyan=""><summary> 方法一 </summary>              <div class="content">              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note simple %}默认 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note default simple %}default 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note primary simple %}primary 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note success simple %}success 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note info simple %}info 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note warning simple %}warning 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note danger simple %}danger 提示块标签{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note modern %}默认 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note default modern %}default 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note primary modern %}primary 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note success modern %}success 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note info modern %}info 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note warning modern %}warning 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note danger modern %}danger 提示块标签{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note flat %}默认 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note default flat %}default 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note primary flat %}primary 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note success flat %}success 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note info flat %}info 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note warning flat %}warning 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note danger flat %}danger 提示块标签{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note disabled %}默认 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note default disabled %}default 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note primary disabled %}primary 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note success disabled %}success 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note info disabled %}info 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note warning disabled %}warning 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note danger disabled %}danger 提示块标签{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note no-icon %}默认 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note default no-icon %}default 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note primary no-icon %}primary 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note success no-icon %}success 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note info no-icon %}info 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note warning no-icon %}warning 提示块标签{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note danger no-icon %}danger 提示块标签{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li></ol>              </div>            </details><details class="folding-tag" blue=""><summary> 方法二 </summary>              <div class="content">              <ol><li><p><code>simple</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note 'fab fa-cc-visa' simple %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note blue 'fas fa-bullhorn' simple %}2021年快到了....{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note pink 'fas fa-car-crash' simple %}小心开车 安全至上{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note red 'fas fa-fan' simple%}这是三片呢？还是四片？{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note orange 'fas fa-battery-half' simple %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note purple 'far fa-hand-scissors' simple %}剪刀石头布{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note green 'fab fa-internet-explorer' simple %}前端最讨厌的浏览器{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note 'fab fa-cc-visa' modern %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note blue 'fas fa-bullhorn' modern %}2021年快到了....{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note pink 'fas fa-car-crash' modern %}小心开车 安全至上{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note red 'fas fa-fan' modern%}这是三片呢？还是四片？{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note orange 'fas fa-battery-half' modern %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note purple 'far fa-hand-scissors' modern %}剪刀石头布{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note green 'fab fa-internet-explorer' modern %}前端最讨厌的浏览器{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note 'fab fa-cc-visa' flat %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note blue 'fas fa-bullhorn' flat %}2021年快到了....{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note pink 'fas fa-car-crash' flat %}小心开车 安全至上{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note red 'fas fa-fan' flat%}这是三片呢？还是四片？{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note orange 'fas fa-battery-half' flat %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note purple 'far fa-hand-scissors' flat %}剪刀石头布{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note green 'fab fa-internet-explorer' flat %}前端最讨厌的浏览器{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note 'fab fa-cc-visa' disabled %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note blue 'fas fa-bullhorn' disabled %}2021年快到了....{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note pink 'fas fa-car-crash' disabled %}小心开车 安全至上{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note red 'fas fa-fan' disabled %}这是三片呢？还是四片？{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note orange 'fas fa-battery-half' disabled %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note purple 'far fa-hand-scissors' disabled %}剪刀石头布{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note green 'fab fa-internet-explorer' disabled %}前端最讨厌的浏览器{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% note no-icon %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note blue no-icon %}2021年快到了....{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note pink no-icon %}小心开车 安全至上{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note red no-icon %}这是三片呢？还是四片？{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note orange no-icon %}你是刷 Visa 还是 UnionPay{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note purple no-icon %}剪刀石头布{% endnote %}</span><br><span class="line"></span><br><span class="line">{% note green no-icon %}前端最讨厌的浏览器{% endnote %}</span><br></pre></td></tr></tbody></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h2><div class="tip cogs"><p>主要样式参考自<a href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly渐变背景标签</a>,自己写了个<code>tip.js</code>来渲染标签，精简了一下代码。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% tip [参数，可选] %}文本内容{% endtip %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% tip %}default{% endtip %}</span><br><span class="line">{% tip info %}info{% endtip %}</span><br><span class="line">{% tip success %}success{% endtip %}</span><br><span class="line">{% tip error %}error{% endtip %}</span><br><span class="line">{% tip warning %}warning{% endtip %}</span><br><span class="line">{% tip bolt %}bolt{% endtip %}</span><br><span class="line">{% tip ban %}ban{% endtip %}</span><br><span class="line">{% tip home %}home{% endtip %}</span><br><span class="line">{% tip sync %}sync{% endtip %}</span><br><span class="line">{% tip cogs %}cogs{% endtip %}</span><br><span class="line">{% tip key %}key{% endtip %}</span><br><span class="line">{% tip bell %}bell{% endtip %}</span><br><span class="line">{% tip fa-atom %}自定义font awesome图标{% endtip %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h2><div class="tip fa-gamepad faa-horizontal animated"><p>动态标签的实质是引用了<a href="https://github.com/l-lin/font-awesome-animation">font-awesome-animation</a>的css样式，不一定局限于tip标签，也可以是其他标签。<br>只不过这里<code>tip.js</code>是我自己写的，所以我清楚它会怎么被渲染成html，才用的这个写法。<br>可以熟读文档，使用html语言来编写其他标签类型。</p></div><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#tip-3">样式预览</button></li><li class="tab"><button type="button" data-href="#tip-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% tip [参数，可选] %}文本内容{% endtip %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>更多详情请参看<a href="http://l-lin.github.io/font-awesome-animation/">font-awesome-animation文档</a></p><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><div class="table-container"><table><thead><tr><th style="text-align:left">On DOM load<br>当页面加载时<br>显示动画</th><th style="text-align:left">On hover<br>当鼠标悬停时<br>显示动画</th><th style="text-align:left">On parent hover<br>当鼠标悬停<br>在父级元素时<br>显示动画</th></tr></thead><tbody><tr><td style="text-align:left"><span><i class="fas fa-wrench faa-wrench animated"></i>&nbsp;faa-wrench animated</span></td><td style="text-align:left"><span><i class="fas fa-wrench faa-wrench animated-hover"></i>&nbsp;faa-wrench animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-wrench faa-wrench"></i>&nbsp;faa-wrench</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-bell faa-ring animated"></i>&nbsp;faa-ring animated</span></td><td style="text-align:left"><span><i class="fas fa-bell faa-ring animated-hover"></i>&nbsp;faa-ring animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-bell faa-ring"></i>&nbsp;faa-ring</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-envelope faa-horizontal animated"></i>&nbsp;faa-horizontal animated</span></td><td style="text-align:left"><span><i class="fas fa-envelope faa-horizontal animated-hover"></i>&nbsp;faa-horizontal animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-horizontal"></i>&nbsp;faa-horizontal</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-vertical animated"></i>&nbsp;faa-vertical animated</span></td><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-vertical animated-hover"></i>&nbsp;faa-vertical animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-vertical"></i>&nbsp;faa-vertical</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-exclamation-triangle faa-flash animated"></i>&nbsp;faa-flash animated</span></td><td style="text-align:left"><span><i class="fas fa-exclamation-triangle faa-flash animated-hover"></i>&nbsp;faa-flash animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-exclamation-triangle faa-flash"></i>&nbsp;faa-flash</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-bounce animated"></i>&nbsp;faa-bounce animated</span></td><td style="text-align:left"><span><i class="fas fa-thumbs-up faa-bounce animated-hover"></i>&nbsp;faa-bounce animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-thumbs-up faa-bounce"></i>&nbsp;faa-bounce</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-spinner faa-spin animated"></i>&nbsp;faa-spin animated</span></td><td style="text-align:left"><span><i class="fas fa-spinner faa-spin animated-hover"></i>&nbsp;faa-spin animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-spinner faa-spin"></i>&nbsp;faa-spin</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-plane faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td style="text-align:left"><span><i class="fas fa-plane faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-plane faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-heart faa-pulse animated"></i>&nbsp;faa-pulse animated</span></td><td style="text-align:left"><span><i class="fas fa-heart faa-pulse animated-hover"></i>&nbsp;faa-pulse animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-heart faa-pulse"></i>&nbsp;faa-pulse</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-envelope faa-shake animated"></i>&nbsp;faa-shake animated</span></td><td style="text-align:left"><span><i class="fas fa-envelope faa-shake animated-hover"></i>&nbsp;faa-shake animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-envelope faa-shake"></i>&nbsp;faa-shake</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-trophy faa-tada animated"></i>&nbsp;faa-tada animated</span></td><td style="text-align:left"><span><i class="fas fa-trophy faa-tada animated-hover"></i>&nbsp;faa-tada animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-trophy faa-tada"></i>&nbsp;faa-tada</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing animated"></i>&nbsp;faa-passing animated</span></td><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing animated-hover"></i>&nbsp;faa-passing animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing"></i>&nbsp;faa-passing</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated"></i>&nbsp;faa-passing-reverse animated</span></td><td style="text-align:left"><span><i class="fas fa-space-shuttle faa-passing-reverse animated-hover"></i>&nbsp;faa-passing-reverse animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-space-shuttle faa-passing-reverse"></i>&nbsp;faa-passing-reverse</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-circle faa-burst animated"></i>&nbsp;faa-burst animated</span></td><td style="text-align:left"><span><i class="fas fa-circle faa-burst animated-hover"></i>&nbsp;faa-burst animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-circle faa-burst"></i>&nbsp;faa-burst</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-star faa-falling animated"></i>&nbsp;faa-falling animated</span></td><td style="text-align:left"><span><i class="fas fa-star faa-falling animated-hover"></i>&nbsp;faa-falling animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-star faa-falling"></i>&nbsp;faa-falling</span></td></tr><tr><td style="text-align:left"><span><i class="fas fa-rocket faa-rising animated"></i>&nbsp;faa-rising animated</span></td><td style="text-align:left"><span><i class="fas fa-rocket faa-rising animated-hover"></i>&nbsp;faa-rising animated-hover</span></td><td style="text-align:left"><span class="faa-parent animated-hover"><i class="fas fa-rocket faa-rising"></i>&nbsp;faa-rising</span></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-3"><ol><li><p>On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div></li><li><p>调整动画速度。</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div></li><li><p>On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><ol><li><p>On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% tip warning faa-horizontal animated %}warning{% endtip %}</span><br><span class="line">{% tip ban faa-flash animated %}ban{% endtip %}</span><br></pre></td></tr></tbody></table></figure></li><li><p>调整动画速度</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% tip warning faa-horizontal animated faa-fast %}warning{% endtip %}</span><br><span class="line">{% tip ban faa-flash animated faa-slow %}ban{% endtip %}</span><br></pre></td></tr></tbody></table></figure></li><li><p>On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% tip warning faa-horizontal animated-hover %}warning{% endtip %}</span><br><span class="line">{% tip ban faa-flash animated-hover %}ban{% endtip %}</span><br></pre></td></tr></tbody></table></figure></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% tip warning faa-parent animated-hover %}<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"faa-horizontal"</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>{% endtip %}</span><br><span class="line">{% tip ban faa-parent animated-hover %}<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"faa-flash"</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>{% endtip %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#checkbox-1">标签语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#checkbox-3">样式预览</button></li><li class="tab"><button type="button" data-href="#checkbox-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="checkbox-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% checkbox 样式参数（可选）, 文本（支持简单md） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: <span class="p red">red</span>,<span class="p yellow">yellow</span>,<span class="p green">green</span>,<span class="p cyan">cyan</span>,<span class="p blue">blue</span>,<span class="p gray">gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="checkbox-3"><div class="checkbox"><input type="checkbox">            <p>纯文本测试</p>            </div><div class="checkbox checked"><input type="checkbox" checked="checked">            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class="checkbox red"><input type="checkbox">            <p>支持自定义颜色</p>            </div><div class="checkbox green checked"><input type="checkbox" checked="checked">            <p>绿色 + 默认选中</p>            </div><div class="checkbox yellow checked"><input type="checkbox" checked="checked">            <p>黄色 + 默认选中</p>            </div><div class="checkbox cyan checked"><input type="checkbox" checked="checked">            <p>青色 + 默认选中</p>            </div><div class="checkbox blue checked"><input type="checkbox" checked="checked">            <p>蓝色 + 默认选中</p>            </div><div class="checkbox plus green checked"><input type="checkbox" checked="checked">            <p>增加</p>            </div><div class="checkbox minus yellow checked"><input type="checkbox" checked="checked">            <p>减少</p>            </div><div class="checkbox times red checked"><input type="checkbox" checked="checked">            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{% checkbox 纯文本测试 %}</span><br><span class="line">{% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %}</span><br><span class="line">{% checkbox red, 支持自定义颜色 %}</span><br><span class="line">{% checkbox green checked, 绿色 + 默认选中 %}</span><br><span class="line">{% checkbox yellow checked, 黄色 + 默认选中 %}</span><br><span class="line">{% checkbox cyan checked, 青色 + 默认选中 %}</span><br><span class="line">{% checkbox blue checked, 蓝色 + 默认选中 %}</span><br><span class="line">{% checkbox plus green checked, 增加 %}</span><br><span class="line">{% checkbox minus yellow checked, 减少 %}</span><br><span class="line">{% checkbox times red checked, 叉 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#radio-1">标签语法</button></li><li class="tab"><button type="button" data-href="#radio-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#radio-3">样式预览</button></li><li class="tab"><button type="button" data-href="#radio-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="radio-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% radio 样式参数（可选）, 文本（支持简单md） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><ol><li>颜色: <span class="p red">red</span>,<span class="p yellow">yellow</span>,<span class="p green">green</span>,<span class="p cyan">cyan</span>,<span class="p blue">blue</span>,<span class="p gray">gray</span></li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="radio-3"><div class="checkbox"><input type="radio">            <p>纯文本测试</p>            </div><div class="checkbox checked"><input type="radio" checked="checked">            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class="checkbox red"><input type="radio">            <p>支持自定义颜色</p>            </div><div class="checkbox green"><input type="radio">            <p>绿色</p>            </div><div class="checkbox yellow"><input type="radio">            <p>黄色</p>            </div><div class="checkbox cyan"><input type="radio">            <p>青色</p>            </div><div class="checkbox blue"><input type="radio">            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{% radio 纯文本测试 %}</span><br><span class="line">{% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %}</span><br><span class="line">{% radio red, 支持自定义颜色 %}</span><br><span class="line">{% radio green, 绿色 %}</span><br><span class="line">{% radio yellow, 黄色 %}</span><br><span class="line">{% radio cyan, 青色 %}</span><br><span class="line">{% radio blue, 蓝色 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><div class="tip fa-wrench"><p>插件版v1.0.16以后，为避免与Butterfly_v4.0+版本中的timeline外挂标签冲突，已经移除了插件内的timeline外挂标签，请低于Butterfly_v4.0的用户升级主题或安装1.0.15版本的外挂标签插件，或者自行添加timeline.js和timeline.styl文件至对应文件夹。请使用了原有timeline外挂标签的用户受累替换语法格式。<br>Butterfly_v4.0+自带的timeline外挂标签样式更加好看。语法语意也更加清晰。</p></div><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#timeline-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#timeline-2">参数配置</button></li><li class="tab"><button type="button" data-href="#timeline-3">样式预览</button></li><li class="tab"><button type="button" data-href="#timeline-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="timeline-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">{% timeline 时间线标题（可选）[,color] %}</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">{% endtimeline %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="timeline-2"><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">标题/时间线</td></tr><tr><td style="text-align:left">color</td><td style="text-align:left"><code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><div class="timeline blue"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>时间轴样式</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class="timeline-item-content"><p>不需要额外处理。</p></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class="timeline-item-content"><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">{% timeline 时间轴样式,blue %}</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">{% endtimeline %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h2><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#link-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#link-2">样式预览</button></li><li class="tab"><button type="button" data-href="#link-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="link-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% link 标题, 链接, 图片链接（可选） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="link-2"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico"></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h2><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p><code>Volantis</code>的按钮使用的是<code>btn</code>和<code>btns</code>标签。<code>btns</code>和<code>butterfly</code>的<code>button</code>不冲突，但是<code>btn</code>会被强制渲染，导致部分参数失效,而且<code>btn</code>的效果还是<code>butterfly</code>的<code>button</code>更好看些。所以就只适配了<code>btns</code>。</p></div><div class="tabs" id="btn"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#btn-1">标签语法</button></li><li class="tab"><button type="button" data-href="#btn-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#btn-3">样式预览</button></li><li class="tab"><button type="button" data-href="#btn-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="btn-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% btns 样式参数 %}</span><br><span class="line">{% cell 标题, 链接, 图片或者图标 %}</span><br><span class="line">{% cell 标题, 链接, 图片或者图标 %}</span><br><span class="line">{% endbtns %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;标题&lt;/b&gt;</code>和<code>&lt;p&gt;描述文字&lt;/p&gt;</code></li><li>布局方式：<br> 默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">wide</td><td style="text-align:left">宽一点的按钮</td></tr><tr><td style="text-align:left">fill</td><td style="text-align:left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td style="text-align:left">center</td><td style="text-align:left">居中，按钮之间是固定间距</td></tr><tr><td style="text-align:left">around</td><td style="text-align:left">居中分散</td></tr><tr><td style="text-align:left">grid2</td><td style="text-align:left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid3</td><td style="text-align:left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid4</td><td style="text-align:left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td style="text-align:left">grid5</td><td style="text-align:left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="btn-3"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接：</p><div class="btns circle grid5">         <a class="button" href="https://xaoxuu.com" title="xaoxuu"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png">xaoxuu</a><a class="button" href="https://xaoxuu.com" title="xaoxuu"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png">xaoxuu</a><a class="button" href="https://xaoxuu.com" title="xaoxuu"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png">xaoxuu</a><a class="button" href="https://xaoxuu.com" title="xaoxuu"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png">xaoxuu</a><a class="button" href="https://xaoxuu.com" title="xaoxuu"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png">xaoxuu</a>       </div></li><li><p>或者含有图标的按钮：</p><div class="btns rounded grid5">         <a class="button" href="/" title="下载源码"><i class="fas fa-download"></i>下载源码</a><a class="button" href="/" title="查看文档"><i class="fas fa-book-open"></i>查看文档</a>       </div></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">         <a href="https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1"><i class="fab fa-apple"></i><b>心率管家</b><p class="p red">专业版</p><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png"></a><a href="https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1"><i class="fab fa-apple"></i><b>心率管家</b><p class="p green">免费版</p><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png"></a>       </div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btn-4"><ol><li>如果需要显示类似「团队成员」之类的一组含有头像的链接：<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{% btns circle grid5 %}</span><br><span class="line">{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}</span><br><span class="line">{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}</span><br><span class="line">{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}</span><br><span class="line">{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}</span><br><span class="line">{% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %}</span><br><span class="line">{% endbtns %}</span><br></pre></td></tr></tbody></table></figure></li><li>或者含有图标的按钮：<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% btns rounded grid5 %}</span><br><span class="line">{% cell 下载源码, /, fas fa-download %}</span><br><span class="line">{% cell 查看文档, /, fas fa-book-open %}</span><br><span class="line">{% endbtns %}</span><br></pre></td></tr></tbody></table></figure></li><li>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">{% btns circle center grid5 %}</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">'fab fa-apple'</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  {% p red, 专业版 %}</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_pro.png'</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">'fab fa-apple'</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  {% p green, 免费版 %}</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/qrcode/heartmate_lite.png'</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">{% endbtns %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h2><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>ghcard使用了<code>github-readme-stats</code>的API，支持直接使用markdown语法来写。</p></div><div class="tabs" id="ghcard"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghcard-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghcard-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghcard-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghcard-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghcard-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% ghcard 用户名, 其它参数（可选） %}</span><br><span class="line">{% ghcard 用户名/仓库, 其它参数（可选） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-2"><p>更多参数可以参考：<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/anuraghazra/github-readme-stats"><img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;repo=github-readme-stats&amp;show_owner=true"></a><br>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th style="text-align:left">参数名</th><th style="text-align:left">取值</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">hide</td><td style="text-align:left">stars,commits,prs,issues,contribs</td><td style="text-align:left">隐藏指定统计</td></tr><tr><td style="text-align:left">count_private</td><td style="text-align:left">true</td><td style="text-align:left">将私人项目贡献添加到总提交计数中</td></tr><tr><td style="text-align:left">show_icons</td><td style="text-align:left">true</td><td style="text-align:left">显示图标</td></tr><tr><td style="text-align:left">theme</td><td style="text-align:left">请查阅<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td style="text-align:left">主题</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghcard-3"><ol><li>用户信息卡片</li></ol><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;show_owner=true"></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=vue&amp;show_owner=true"></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=buefy&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=solarized-light&amp;show_owner=true"></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=onedark&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=solarized-dark&amp;show_owner=true"></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=algolia&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&amp;theme=calm&amp;show_owner=true"></a></td></tr></tbody></table></div><ol><li>仓库信息卡片</li></ol><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;show_owner=true"></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=vue&amp;show_owner=true"></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=buefy&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=solarized-light&amp;show_owner=true"></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=onedark&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=solarized-dark&amp;show_owner=true"></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=algolia&amp;show_owner=true"></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&amp;repo=hexo-theme-volantis&amp;theme=calm&amp;show_owner=true"></a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-4"><ol><li><p>用户信息卡片</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| {% ghcard xaoxuu %} | {% ghcard xaoxuu, theme=vue %} |</span><br><span class="line">| -- | -- |</span><br><span class="line">| {% ghcard xaoxuu, theme=buefy %} | {% ghcard xaoxuu, theme=solarized-light %} |</span><br><span class="line">| {% ghcard xaoxuu, theme=onedark %} | {% ghcard xaoxuu, theme=solarized-dark %} |</span><br><span class="line">| {% ghcard xaoxuu, theme=algolia %} | {% ghcard xaoxuu, theme=calm %} |</span><br></pre></td></tr></tbody></table></figure></li><li><p>仓库信息卡片</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| {% ghcard volantis-x/hexo-theme-volantis %} | {% ghcard volantis-x/hexo-theme-volantis, theme=vue %} |</span><br><span class="line">| -- | -- |</span><br><span class="line">| {% ghcard volantis-x/hexo-theme-volantis, theme=buefy %} | {% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %} |</span><br><span class="line">| {% ghcard volantis-x/hexo-theme-volantis, theme=onedark %} | {% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %} |</span><br><span class="line">| {% ghcard volantis-x/hexo-theme-volantis, theme=algolia %} | {% ghcard volantis-x/hexo-theme-volantis, theme=calm %} |</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h2><div class="tip cogs"><p>关于ghbdage参数的更多具体用法可以参看站内教程：<a href="/posts/e87ad7f8">添加github徽标</a></p></div><div class="tabs" id="ghbdage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghbdage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#ghbdage-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#ghbdage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#ghbdage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghbdage-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% bdage [right],[left],[logo]||[color],[link],[title]||[option] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghbdage-3"><p></p><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div><p></p><ol><li>基本参数<br><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&amp;color=orange&amp;link=&amp;"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&amp;color=orange&amp;link=&amp;"></object></li><li>信息参数<br><br><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&amp;color=abcdef&amp;link=https://metroui.org.ua/index.html&amp;"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&amp;color=orange&amp;link=https://github.com/&amp;"></object></li><li>拓展参数<br><br><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&amp;color=brightgreen&amp;link=https://vercel.com/&amp;style=social&amp;logoWidth=40"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&amp;color=orange&amp;link=&amp;style=social&amp;logoWidth=40&amp;logoColor=violet"></object></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghbdage-4"><p></p><div class="note info modern"><p>本外挂标签的参数分为三组，用<code>||</code>分割。</p></div><p></p><ol><li>基本参数,定义徽标左右文字和图标<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% bdage Theme,Butterfly %}</span><br><span class="line">{% bdage Frame,Hexo,hexo %}</span><br></pre></td></tr></tbody></table></figure></li><li>信息参数，定义徽标右侧内容背景色，指向链接<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %}</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">{% bdage Source,GitHub,GitHub||,https://github.com/ %}</span><br></pre></td></tr></tbody></table></figure></li><li>拓展参数，支持shields的API的全部参数内容<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %}</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">{% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h2><div class="tabs" id="site"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#site-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#site-2">样式预览</button></li><li class="tab"><button type="button" data-href="#site-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="site-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% sitegroup %}</span><br><span class="line">{% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %}</span><br><span class="line">{% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %}</span><br><span class="line">{% endsitegroup %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="site-2"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="site-3"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{% sitegroup %}</span><br><span class="line">{% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png, description=简约风格 %}</span><br><span class="line">{% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %}</span><br><span class="line">{% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %}</span><br><span class="line">{% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %}</span><br><span class="line">{% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %}</span><br><span class="line">{% endsitegroup %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h2><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#inlineimage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#inlineimage-3">样式预览</button></li><li class="tab"><button type="button" data-href="#inlineimage-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="inlineimage-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% inlineimage 图片链接, height=高度（可选） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><ol><li>高度：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="inlineimage-3"><p>这是 <img no-lazy="" class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"> 一段话。</p><p>这又是 <img no-lazy="" class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 {% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %} 一段话。</span><br><span class="line"></span><br><span class="line">这又是 {% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %} 一段话。</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h2><div class="tabs" id="image"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#image-1">标签语法</button></li><li class="tab"><button type="button" data-href="#image-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#image-3">样式预览</button></li><li class="tab"><button type="button" data-href="#image-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="image-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="image-3"><ol><li><p>添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>指定宽度：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"></div></div></li><li><p>指定宽度并添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div></li><li><p>设置占位背景色：</p><div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="image-4"><ol><li><p>添加描述：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %}</span><br></pre></td></tr></tbody></table></figure></li><li>指定宽度：<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %}</span><br></pre></td></tr></tbody></table></figure></li><li>指定宽度并添加描述：<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %}</span><br></pre></td></tr></tbody></table></figure></li><li>设置占位背景色：<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h2><div class="tabs" id="audio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#audio-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#audio-2">样式预览</button></li><li class="tab"><button type="button" data-href="#audio-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="audio-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% audio 音频链接 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="audio-2"><div class="audio"><audio controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3" type="audio/mp3">Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="audio-3"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h2><div class="tabs" id="video"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#video-1">标签语法</button></li><li class="tab"><button type="button" data-href="#video-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#video-3">样式预览</button></li><li class="tab"><button type="button" data-href="#video-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="video-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% video 视频链接 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-2"><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="video-3"><ol><li><p>100%宽度</p><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div></li><li><p>50%宽度</p> <div class="videos" col="2"><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div></div></li><li><p>25%宽度</p><div class="videos" col="4"><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div><div class="video"><video controls="" preload=""><source src="https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov" type="video/mp4">Your browser does not support the video tag.</video></div></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="video-4"><ol><li><p>100%宽度</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>50%宽度</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{% videos, 2 %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% endvideos %}</span><br></pre></td></tr></tbody></table></figure></li><li><p>25%宽度</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{% videos, 4 %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %}</span></span><br><span class="line"><span class="emphasis">{% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %}</span><br><span class="line">{% endvideos %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h2><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>自带<code>gallery</code>相册，而且会根据图片大小自动调整排版，效果比<code>Volantis</code>的<code>gallery</code>更好，故不再收录<code>Volantis</code>的<code>gallery</code>标签。</p></div><div class="note flat"><p>以下为<code>Butterfly</code>自带的<code>gallery</code>标签写法。相册图库和相册配合使用。</p></div><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallery-1">标签语法</button></li><li class="tab"><button type="button" data-href="#gallery-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#gallery-3">样式预览</button></li><li class="tab"><button type="button" data-href="#gallery-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-1"><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">{% galleryGroup name description link img-url %}</span><br><span class="line">{% galleryGroup name description link img-url %}</span><br><span class="line">{% galleryGroup name description link img-url %}</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% gallery %}</span><br><span class="line">markdown 圖片格式</span><br><span class="line">{% endgallery %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">参数名</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">name</td><td style="text-align:left">图库名字</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">图库描述</td></tr><tr><td style="text-align:left">link</td><td style="text-align:left">链接到对应相册的地址</td></tr><tr><td style="text-align:left">img-url</td><td style="text-align:left">图库封面</td></tr></tbody></table></div><div class="note info flat"><p>思维拓展一下，相册图库的实质其实就是个快捷方式，可以自定义添加描述、封面、链接。那么我们未必要把它当做一个相册，完全可以作为一个链接卡片，链接到视频、QQ、友链都是不错的选择。</p></div><ul><li>gallery 相册<br>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallery-3"><ul><li>gallerygroup 相册图库</li></ul><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://npm.elemecdn.com/akilar-candyassets/image/1.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href="/gallery/MC/"></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href="/gallery/Gundam/"></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://npm.elemecdn.com/akilar-candyassets/image/20200907113116651.png" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href="/gallery/I-am-Akilar/"></a>  </figcaption>  </figure></div><ul><li>gallery 相册</li></ul><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-4"><div class="note info flat"><p>对于很多同学提问的<code>gallerygroup</code>和<code>gallery</code>相册页的链接问题。这里说下我个人的使用习惯。<br>一般使用相册图库的话，可以在导航栏加一个gallery的page(<strong>使用指令<code>hexo new page gallery</code>添加</strong>)，里面放相册图库作为封面。然后在<code>[Blogroot]/source/gallery/</code>下面建立相应的文件夹，例如若按照这里的示例，若欲使用<code>/gallery/MC/</code>路径访问MC相册，则需要新建<code>[Blogroot]/source/gallery/MC/index.md</code>，并在里面填入<code>gallery</code>相册内容。</p></div><ol><li><p>gallerygroup 相册图库</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">{% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 '/gallery/MC/' https://npm.elemecdn.com/akilar-candyassets/image/1.jpg %}</span><br><span class="line">{% galleryGroup Gundam 哦咧哇gundam哒！ '/gallery/Gundam/' https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png %}</span><br><span class="line">{% galleryGroup I-am-Akilar 某种意义上也算自拍吧 '/gallery/I-am-Akilar/' https://npm.elemecdn.com/akilar-candyassets/image/20200907113116651.png %}</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure></li><li><p>gallery 相册</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{% gallery %}</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg</span>)</span><br><span class="line">{% endgallery %}</span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h2><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>虽然也有内置折叠框<code>hideToggle</code>标签，但是<code>Volantis</code>的<code>folding</code>折叠框更好看一些。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% folding 参数（可选）, 标题 %}</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">{% endfolding %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><details class="folding-tag"><summary> 查看图片测试 </summary>              <div class="content">              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan="" open=""><summary> 查看默认打开的折叠框 </summary>              <div class="content">              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green=""><summary> 查看代码测试 </summary>              <div class="content">              <figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br></pre></td></tr></tbody></table></figure>              </div>            </details><details class="folding-tag" yellow=""><summary> 查看列表测试 </summary>              <div class="content">              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red=""><summary> 查看嵌套测试 </summary>              <div class="content">              <details class="folding-tag" blue=""><summary> 查看嵌套测试2 </summary>              <div class="content">              <details class="folding-tag"><summary> 查看嵌套测试3 </summary>              <div class="content">              <p>hahaha <span><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png" style="height:24px"></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">{% folding 查看图片测试 %}</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% folding cyan open, 查看默认打开的折叠框 %}</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% folding green, 查看代码测试 %}</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% folding yellow, 查看列表测试 %}</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% folding red, 查看嵌套测试 %}</span><br><span class="line"></span><br><span class="line">{% folding blue, 查看嵌套测试2 %}</span><br><span class="line"></span><br><span class="line">{% folding 查看嵌套测试3 %}</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png'</span> <span class="attr">style</span>=<span class="string">'height:24px'</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br><span class="line"></span><br><span class="line">{% endfolding %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p><code>Butterfly</code>的<code>tab</code>标签和<code>Volantis</code>的<code>tab</code>标签都是移值自<code>NexT</code>主题，所以写法和效果一模一样。</p></div><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">配置参数</button></li><li class="tab active"><button type="button" data-href="#folding-3">样式预览</button></li><li class="tab"><button type="button" data-href="#folding-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="folding-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{% tabs Unique name, [index] %}</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子/页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="folding-3"><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-4"><p></p><div class="note primary flat"><p>Demo 1 - 预设选择第一个【默认】</p></div><br><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test1 %}</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br></pre></td></tr></tbody></table></figure><p></p><p></p><div class="note primary flat"><p>Demo 2 - 预设选择tabs</p></div><br><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test2, 3 %}</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br></pre></td></tr></tbody></table></figure><p></p><p></p><div class="note primary flat"><p>Demo 3 - 没有预设值</p></div><br><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test3, -1 %}</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br></pre></td></tr></tbody></table></figure><p></p><p></p><div class="note primary flat"><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></div><br><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test4 %}</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br></pre></td></tr></tbody></table></figure><p></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="数据集合-issues"><a href="#数据集合-issues" class="headerlink" title="数据集合 issues"></a>数据集合 issues</h2><script defer="" src="https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js"></script><script defer="" src="https://npm.elemecdn.com/hexo-theme-volantis@4.3.1/source/js/issues.min.js"></script><div class="tabs" id="issues"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#issues-1">标签语法</button></li><li class="tab"><button type="button" data-href="#issues-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#issues-3">样式预览</button></li><li class="tab"><button type="button" data-href="#issues-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="issues-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% issues type | api=url | group=key:value1,value2（可选） %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-2"><p><span class="p center logo large">type(类型)：</span><br>根据需求不同，会将 issues 内容解析成不同的 HTML 标签，目前支持的类型有：</p><ol><li>时间轴<code>timeline</code>: 解析成<code>timeline</code>标签，<code>issue</code>的标题对应<code>timeline</code>的时间，<code>issue</code>的内容对应<code>timeline</code>的内容。</li><li><p>网站卡片<code>sites</code>: 解析成<code>sites</code>标签，需要有<code>JSON</code>代码块,各参数对应<code>sites</code>标签参数:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"title"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"screenshot"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"url"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"avatar"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"description"</span><span class="punctuation">:</span> <span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"「keywords」"</span><span class="punctuation">:</span> <span class="string">""</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">网站名称</td></tr><tr><td style="text-align:left">screenshot</td><td style="text-align:left">网站预览图</td></tr><tr><td style="text-align:left">url</td><td style="text-align:left">网站链接，需要添加<br><code>https://</code>协议组成完整域名。<br>否则可能被识别成站点相对路径。</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">站长头像</td></tr><tr><td style="text-align:left">「keywords」</td><td style="text-align:left">分组依据，<br>未必要叫「keywords」，<br>详见下文group(分组)</td></tr></tbody></table></div><p><span class="p center logo large">api(接口)：</span><br>url为可以调的通的API，例如：<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">api=https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per_page=100&amp;labels=active</span><br><span class="line">api=https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per_page=100&amp;labels=active</span><br></pre></td></tr></tbody></table></figure><p></p><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://gitee.com/api/v5/">https://gitee.com/api/v5/</a></td><td style="text-align:left">gitee仓库的api</td></tr><tr><td style="text-align:left"><a href="https://api.github.com/">https://api.github.com/</a></td><td style="text-align:left">github仓库的api</td></tr><tr><td style="text-align:left">repos/xaoxuu/friends/issues</td><td style="text-align:left">repos/用户名/仓库名/issues</td></tr><tr><td style="text-align:left">sort=updated&amp;state=open</td><td style="text-align:left">界定哪些类型的<code>issues</code>会<br>被读取过来渲染成相应的标签</td></tr><tr><td style="text-align:left">page=1&amp;per_page=100</td><td style="text-align:left">读取前100条issues</td></tr><tr><td style="text-align:left">labels=active</td><td style="text-align:left">控制默认的issue不显示，<br>只有自己审核通过<br>添加了active标签之后才会显示</td></tr></tbody></table></div><p><span class="p center logo large">group(分组)：</span><br><code>sites</code>类型的<code>issues</code>默认不分组，如果需要分组，可指定分组依据<code>「keywords」</code>，和分组白名单<code>「value1」</code>、<code>「value2」</code>等，例如：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">group=version:v4,v3,v2</span></span><br><span class="line"><span class="comment"># 此处的version就是上文中的「keywords」</span></span><br></pre></td></tr></tbody></table></figure><p>这个参数的作用就是，筛选出<code>JSON</code>中包含<code>"version": "v4"</code>或者<code>"version":"v3"</code>或者<code>"version": "v2"</code>的数据，并分组显示。</p><p><span class="p center logo large">仓库ISSUES模板配置</span></p><details class="folding-tag" green=""><summary> Github仓库配置方案 </summary>              <div class="content">              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br> 新建文件<code>friend_link\.github\ISSUE_TEMPLATE.md</code>,<br> 并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line"><span class="section">about: 请根据指示规范填写友链格式。</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">{</span></span><br><span class="line"><span class="code">    "title": "",</span></span><br><span class="line"><span class="code">    "screenshot": "",</span></span><br><span class="line"><span class="code">    "url": "",</span></span><br><span class="line"><span class="code">    "avatar": "",</span></span><br><span class="line"><span class="code">    "description": "",</span></span><br><span class="line"><span class="code">    "keywords": ""</span></span><br><span class="line"><span class="code">}</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">"title": "站点名称",</span><br><span class="line">"screenshot": "站点预览图链接",</span><br><span class="line">"url": "站点链接",</span><br><span class="line">"avatar": "头像链接",</span><br><span class="line">"description": "站点描述",</span><br><span class="line">"keywords": "关键词，作为分组名"</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">"title": "Akilarの糖果屋",</span><br><span class="line">"screenshot": "https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg",</span><br><span class="line">"url": "https://akilar.top/",</span><br><span class="line">"avatar": "https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.png",</span><br><span class="line">"description": "期待您的光临！",</span><br><span class="line">"keywords": "糖果屋"</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>新建active label</p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/d63b5c0c.png" alt="新建label用于控制审核结果"></p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/6311f960.png" alt="配置名称描述颜色"></p></li><li><p>提交示例</p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/f87ebfd3.png" alt="填写规范"><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/efdfc67d.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><details class="folding-tag" yellow=""><summary> Gitee仓库配置方案 </summary>              <div class="content">              <ol><li><p>新建一个仓库，仓库名随意，这里我命名为<code>friend_link</code>,<br> 新建文件<code>friend_link\.gitee\ISSUE_TEMPLATE.md</code>,<br> 并在其中输入以下内容作为<code>issues</code>模板。</p><div class="tip warning faa-horizontal animated fa-slow"><p>其中的json代码块前面的反斜杠记得删去。此处这么写主要是为了转义，否则无法嵌套代码块。</p></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">name: 友链模板</span><br><span class="line"><span class="section">about: 请根据指示规范填写友链格式。</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">&lt;!-- 请在下方代码块的双引号中填写 --&gt;</span><br><span class="line">\<span class="code">```json</span></span><br><span class="line"><span class="code">{</span></span><br><span class="line"><span class="code">    "title": "",</span></span><br><span class="line"><span class="code">    "screenshot": "",</span></span><br><span class="line"><span class="code">    "url": "",</span></span><br><span class="line"><span class="code">    "avatar": "",</span></span><br><span class="line"><span class="code">    "description": "",</span></span><br><span class="line"><span class="code">    "keywords": ""</span></span><br><span class="line"><span class="code">}</span></span><br><span class="line"><span class="code">\```</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">"title": "站点名称",</span><br><span class="line">"screenshot": "站点预览图链接",</span><br><span class="line">"url": "站点链接",</span><br><span class="line">"avatar": "头像链接",</span><br><span class="line">"description": "站点描述",</span><br><span class="line">"keywords": "关键词，作为分组名"</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">"title": "Akilarの糖果屋",</span><br><span class="line">"screenshot": "https://cdn.jsdelivr.net/gh/Akilarlxh/ScreenShot@gh-pages/akilar.top.jpg",</span><br><span class="line">"url": "https://akilar.top/",</span><br><span class="line">"avatar": "https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.png",</span><br><span class="line">"description": "期待您的光临！",</span><br><span class="line">"keywords": "糖果屋"</span><br><span class="line">--&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>新建active标签</p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/7522911b.png" alt="新建标签用于控制审核结果"></p></li></ol><ol><li><p>提交示例</p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/dd334eea.png" alt="填写规范"><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/72d06ae1.png" alt="审核通过"></p></li><li><p>从审核通过到页面读取有一段api的缓存期，稍微有点耐心。</p></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="issues-3"><ol><li><p>时间轴标签<code>timeline</code>渲染<br> 对应的仓库<code>issues</code>链接:</p> <div class="tag link"><a class="link-card" title="xaoxuu/timeline" href="https://gitee.com/xaoxuu/timeline/issues"><div class="left"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"></div><div class="right"><p class="text">xaoxuu/timeline</p><p class="url">https://gitee.com/xaoxuu/timeline/issues</p></div></a></div><div class="issues-api timeline" api="https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&amp;creator=xaoxuu&amp;sort=created&amp;direction=desc&amp;page=1&amp;per_page=100"></div></li><li><p>网站卡片标签<code>sites</code>渲染</p><ul><li><p>gitee仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://gitee.com/xaoxuu/friends/issues"><div class="left"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://gitee.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites" api="https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per_page=100&amp;labels=active"></div></li><li><p>github仓库示例</p><p>对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="xaoxuu/friends" href="https://github.com/xaoxuu/friends/issues"><div class="left"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"></div><div class="right"><p class="text">xaoxuu/friends</p><p class="url">https://github.com/xaoxuu/friends/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites" api="https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per_page=100&amp;labels=active"></div></li></ul></li><li><p>网站卡片标签<code>sites</code>分组渲染<br> 这是<code>Volantis</code>主题官网的「示例博客」页面的数据：<br> 对应的仓库<code>issues</code>链接:</p><div class="tag link"><a class="link-card" title="如何参与项目" href="https://github.com/volantis-x/examples/issues"><div class="left"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png"></div><div class="right"><p class="text">如何参与项目</p><p class="url">https://github.com/volantis-x/examples/issues</p></div></a></div><p>渲染后的标签：</p><div class="issues-api sites" api="https://api.github.com/repos/volantis-x/examples/issues?sort=updated&amp;state=open&amp;page=1&amp;per_page=100" group="version:版本：^4.0,版本：^3.0,版本：^2.0"></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="issues-4"><ol><li><p>时间轴标签<code>timeline</code>渲染</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% issues timeline | api=https://gitee.com/api/v5/repos/xaoxuu/timeline/issues?state=open&amp;creator=xaoxuu&amp;sort=created&amp;direction=desc&amp;page=1&amp;per<span class="emphasis">_page=100 %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>网站卡片标签<code>sites</code>渲染</p><ul><li><p>gitee仓库示例</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% issues sites | api=https://gitee.com/api/v5/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>github仓库示例</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% issues sites | api=https://api.github.com/repos/xaoxuu/friends/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100&amp;labels=active %}</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>网站卡片标签<code>sites</code>分组渲染<br> 这是<code>Volantis</code>主题官网的「示例博客」页面的数据：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% issues sites | api=https://api.github.com/repos/volantis-x/examples/issues?sort=updated&amp;state=open&amp;page=1&amp;per<span class="emphasis">_page=100 | group=version:版本：^4.0,版本：^3.0,版本：^2.0 %}</span></span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h2><div class="tabs" id="poem"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#poem-1">标签语法</button></li><li class="tab"><button type="button" data-href="#poem-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#poem-3">样式预览</button></li><li class="tab"><button type="button" data-href="#poem-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="poem-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% poem [title],[author] %}</span><br><span class="line">诗词内容</span><br><span class="line">{% endpoem %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-2"><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="poem-3"><div class="poem"><div class="poem-title">水调歌头</div><div class="poem-author">苏轼</div><p>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？<br>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="poem-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">{% poem 水调歌头,苏轼 %}</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">{% endpoem %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h2><div class="tip cogs"><p>本标签的图标需要自己额外引入阿里矢量图标库的样式，具体引入方案请移步：<a href="/posts/d2ebecef/">Hexo引入阿里矢量图标库</a></p></div><div class="tabs" id="icon示例"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#icon示例-1">标签语法</button></li><li class="tab"><button type="button" data-href="#icon示例-2">参数释义</button></li><li class="tab active"><button type="button" data-href="#icon示例-3">样式预览</button></li><li class="tab"><button type="button" data-href="#icon示例-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="icon示例-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% icon [icon-xxxx],[font-size] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="icon示例-3"><div class="table-container"><table><thead><tr><th style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg></th><th style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></th></tr></thead><tbody><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></td></tr><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></td></tr><tr><td style="text-align:left"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg></td><td style="text-align:left"><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon示例-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">{% icon icon-rat<span class="emphasis">_zi %}{% icon icon-rat,2 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-ox_</span>chou,3 %}{% icon icon-ox,4 %}</span><br><span class="line"></span><br><span class="line">{% icon icon-tiger<span class="emphasis">_yin,5 %}{% icon icon-tiger,6 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-rabbit_</span>mao,1 %}{% icon icon-rabbit,2 %}</span><br><span class="line"></span><br><span class="line">{% icon icon-dragon<span class="emphasis">_chen,3 %}{% icon icon-dragon,4 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-snake_</span>si,5 %}{% icon icon-snake,6 %}</span><br><span class="line"></span><br><span class="line">{% icon icon-horse<span class="emphasis">_wu %}{% icon icon-horse,2 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-goat_</span>wei,3 %}{% icon icon-goat,4 %}</span><br><span class="line"></span><br><span class="line">{% icon icon-monkey<span class="emphasis">_shen,5 %}{% icon icon-monkey,6 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-rooster_</span>you %}{% icon icon-rooster,2 %}</span><br><span class="line"></span><br><span class="line">{% icon icon-dog<span class="emphasis">_xu,3 %}{% icon icon-dog,4 %}</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">{% icon icon-boar_</span>hai,5 %}{% icon icon-boar,6 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="特效标签wow"><a href="#特效标签wow" class="headerlink" title="特效标签wow"></a>特效标签wow</h2><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>特效标签的静态资源未添加在本帖的配置内容中（因为多为cdn配置），请移步站内教程完成相关配置：</p><div class="tag link"><a class="link-card" title="使用wowjs给博客添加动画效果" href="/posts/abab51cf/"><div class="left"><img src="https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico"></div><div class="right"><p class="text">使用wowjs给博客添加动画效果</p><p class="url">/posts/abab51cf/</p></div></a></div></div><div class="tabs" id="animate"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#animate-1">标签语法</button></li><li class="tab"><button type="button" data-href="#animate-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#animate-3">样式预览</button></li><li class="tab"><button type="button" data-href="#animate-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="animate-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% wow [animete],[duration],[delay],[offset],[iteration] %}</span><br><span class="line">内容</span><br><span class="line">{% endwow %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><div class="note warning flat"><p>注意，后面四个虽然是选填项，但是当有跨位选填时，次序不能乱。详见示例。<br>支持嵌套其他外挂标签。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="animate-3"><ol><li><code>flip</code>动画效果。 <div class="wow animate__flip" data-wow-duration="" data-wow-delay="" data-wow-offset="" data-wow-iteration=""><pre><code>&lt;div class="note green icon-padding modern"&gt;&lt;i class="note-icon fas fa-fan"&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;flip&lt;/code&gt;动画效果。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。 <div class="wow animate__zoomIn" data-wow-duration="5s" data-wow-delay="5s" data-wow-offset="100" data-wow-iteration="10"><pre><code>&lt;div class="note blue icon-padding modern"&gt;&lt;i class="note-icon fas fa-bullhorn"&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;zoomIn&lt;/code&gt;动画效果，持续&lt;code&gt;5s&lt;/code&gt;，延时&lt;code&gt;5s&lt;/code&gt;，离底部&lt;code&gt;100&lt;/code&gt;距离时启动，重复&lt;code&gt;10&lt;/code&gt;次&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。 <div class="wow animate__slideInRight" data-wow-duration="5s" data-wow-delay="5s" data-wow-offset="" data-wow-iteration=""><pre><code>&lt;div class="note orange icon-padding modern"&gt;&lt;i class="note-icon fas fa-car"&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;slideInRight&lt;/code&gt;动画效果，持续&lt;code&gt;5s&lt;/code&gt;，延时&lt;code&gt;5s&lt;/code&gt;。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。 <div class="wow animate__heartBeat" data-wow-duration="" data-wow-delay="5s" data-wow-offset="" data-wow-iteration="10"><pre><code>&lt;div class="note red icon-padding modern"&gt;&lt;i class="note-icon fas fa-battery-half"&gt;&lt;/i&gt;&lt;p&gt;&lt;code&gt;heartBeat&lt;/code&gt;动画效果，延时&lt;code&gt;5s&lt;/code&gt;，重复&lt;code&gt;10&lt;/code&gt;次。&lt;/p&gt;</code></pre><p>&lt;/div&gt;</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="animate-4"><ol><li><code>flip</code>动画效果。<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% wow animate<span class="strong">__flip %}</span></span><br><span class="line"><span class="strong">{% note green 'fas fa-fan' modern%}</span></span><br><span class="line"><span class="strong">`flip`动画效果。</span></span><br><span class="line"><span class="strong">{% endnote %}</span></span><br><span class="line"><span class="strong">{% endwow %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次。<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %}</span></span><br><span class="line"><span class="strong">{% note blue 'fas fa-bullhorn' modern%}</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">{% endnote %}</span></span><br><span class="line"><span class="strong">{% endwow %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% wow animate<span class="strong">__slideInRight,5s,5s %}</span></span><br><span class="line"><span class="strong">{% note orange 'fas fa-car' modern%}</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">{% endnote %}</span></span><br><span class="line"><span class="strong">{% endwow %}</span></span><br></pre></td></tr></tbody></table></figure></li><li><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。此处注意不用的参数位置要留空，用逗号间隔。<figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% wow animate<span class="strong">__heartBeat,,5s,,10 %}</span></span><br><span class="line"><span class="strong">{% note red 'fas fa-battery-half' modern%}</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">{% endnote %}</span></span><br><span class="line"><span class="strong">{% endwow %}</span></span><br></pre></td></tr></tbody></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h2><div class="note info morden flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="progress"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#progress-1">标签语法</button></li><li class="tab"><button type="button" data-href="#progress-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#progress-3">样式预览</button></li><li class="tab"><button type="button" data-href="#progress-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="progress-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% progress [width] [color] [text] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-2"><p><code>width</code>: 0到100的阿拉伯数字<br><code>color</code>: 颜色，取值有<span class="p red">red</span>,<span class="p yellow">yellow</span>,<span class="p green">green</span>,<span class="p cyan">cyan</span>,<span class="p blue">blue</span>,<span class="p gray">gray</span><br><code>text</code>:进度条上的文字内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="progress-3"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red" style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow" style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan" style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue" style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="progress-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{% progress 10 red 进度条样式预览 %}</span><br><span class="line">{% progress 30 yellow 进度条样式预览 %}</span><br><span class="line">{% progress 50 green 进度条样式预览 %}</span><br><span class="line">{% progress 70 cyan 进度条样式预览 %}</span><br><span class="line">{% progress 90 blue 进度条样式预览 %}</span><br><span class="line">{% progress 100 gray 进度条样式预览 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h2><div class="tabs" id="notation"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#notation-1">标签语法</button></li><li class="tab"><button type="button" data-href="#notation-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#notation-3">样式预览</button></li><li class="tab"><button type="button" data-href="#notation-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="notation-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% nota [label] , [text] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-2"><p><code>label</code>: 注释词汇<br><code>text</code>: 悬停显示的注解内容</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="notation-3"><p><span class="nota" data-nota="可以看到注解内容出现在顶栏">把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="气泡注释-bubble"><a href="#气泡注释-bubble" class="headerlink" title="气泡注释 bubble"></a>气泡注释 bubble</h2><div class="tabs" id="bubble"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#bubble-1">标签语法</button></li><li class="tab"><button type="button" data-href="#bubble-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#bubble-3">样式预览</button></li><li class="tab"><button type="button" data-href="#bubble-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="bubble-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% bubble [content] , [notation] ,[background-color] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-2"><p><code>content</code>: 注释词汇<br><code>notation</code>: 悬停显示的注解内容<br><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="bubble-3"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如 CSS 的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex 布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;"> Flex 是 Flexible Box 的缩写，意为弹性布局 "，用来为盒状模型提供最大的灵活性"</span></span>，<span class="bubble-content">transform 变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;"> transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation 的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线 (Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content"> clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的{% bubble 兄弟相邻选择器,"例如 h1 + p {margin-top:50px;}" %}，{% bubble flex布局,"Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性","#ec5830" %}，{% bubble transform变换,"transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。","#1db675" %}，animation的{% bubble 贝塞尔速度曲线,"贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋","#de4489" %}写法，还有今天刚看到的{% bubble clip-path,"clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。","#868fd7" %}属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用文献-reference"><a href="#引用文献-reference" class="headerlink" title="引用文献 reference"></a>引用文献 reference</h2><div class="tabs" id="bubble"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#bubble-1">标签语法</button></li><li class="tab"><button type="button" data-href="#bubble-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#bubble-3">样式预览</button></li><li class="tab"><button type="button" data-href="#bubble-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="bubble-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% referto [id] , [literature] %}</span><br><span class="line">{% referfrom [id] , [literature] , [url] %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-2"><div class="tip ban"><p>考虑到锚点跳转的特性，不建议您将引用出处标签referfrom写在常隐外挂标签(如folding、tab、hideToggle)中，这样能有效避免跳转失败。</p></div><ol><li><p>referto 引用上标<br> <code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转<br> <code>literature</code>: 引用的参考文献名称</p></li><li><p>referfrom 引用出处<br> <code>id</code>: 序号内容，需与referto标签的id对应才能实现跳转<br> <code>literature</code>: 引用的参考文献名称<br> <code>url</code>: 引用的参考文献链接，可省略</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="bubble-3"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]" data-pjax-state="">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]" data-pjax-state="">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]" data-pjax-state="">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]" data-pjax-state="">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]" data-pjax-state="">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]" data-pjax-state="">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]" data-pjax-state="">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]" data-pjax-state="">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]" data-pjax-state="">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&amp;k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客{% referto '[1]','Akilarの糖果屋群聊简介' %}，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架{% referto '[2]','Hexo中文文档' %}，Butterfly主题{% referto '[3]','Butterfly 安装文档(一) 快速开始' %}</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis{% referto '[4]','hexo-theme-volantis 标签插件' %}的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档{% referto '[5]','Volantis文档:内置标签插件' %}</span><br><span class="line">Butterfly主题的各个衍生魔改{% referto '[6]','Butterfly 安装文档:标签外挂（Tag Plugins' %}{% referto '[7]','小弋の生活馆全样式预览' %}{% referto '[8]','l-lin-font-awesome-animation' %}{% referto '[9]','小康的butterfly主题使用文档' %}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">{% referfrom '[1]','Akilarの糖果屋群聊简介','https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[2]','Hexo中文文档','https://hexo.io/zh-cn/docs/' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[3]','Butterfly 安装文档(一) 快速开始','https://butterfly.js.org/posts/21cfbf15/' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[4]','hexo-theme-volantis 标签插件','https://volantis.js.org/v5/tag-plugins/' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[5]','Volantis文档:内置标签插件','https://volantis.js.org/tag-plugins/' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[6]','Butterfly 安装文档:标签外挂（Tag Plugins','https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[7]','小弋の生活馆全样式预览','https://lovelijunyi.gitee.io/posts/c898.html' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[8]','l-lin-font-awesome-animation','https://github.com/l-lin/font-awesome-animation' %}</span></span><br><span class="line"><span class="emphasis">{% referfrom '[9]','小康的butterfly主题使用文档','https://www.antmoe.com/posts/3b43914f/' %}</span></span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="旋转相册-carousel"><a href="#旋转相册-carousel" class="headerlink" title="旋转相册 carousel"></a>旋转相册 carousel</h2><div class="tip warning"><p>旋转相册标签与fancybox灯箱存在兼容性bug，若发现旋转相册呈扁平状，请关闭fancybox或换用medium_zoom。</p></div><div class="tabs" id="notation"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#notation-1">标签语法</button></li><li class="tab"><button type="button" data-href="#notation-2">参数配置</button></li><li class="tab active"><button type="button" data-href="#notation-3">样式预览</button></li><li class="tab"><button type="button" data-href="#notation-4">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="notation-1"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% carousel [Id] , [name] %}</span><br><span class="line">![](<span class="link">/img/1.jpg</span>)</span><br><span class="line">![](<span class="link">/img/2.jpg</span>)</span><br><span class="line">![](<span class="link">/img/3,jpg</span>)</span><br><span class="line">{% endcarousel %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-2"><p><code>Id</code>: 相册唯一ID，用于监测相册鼠标动作。禁止使用中文。同一页内不得出现相同ID的carousel相册。<br><code>name</code>: 相册中间显示的内容，建议用英文单引号包裹。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="notation-3"><p></p><div id="SF" class="carousel"><p></p><p></p><div id="SF-drag-container" class="drag-container"><p></p><p></p><div id="SF-spin-container" class="spin-container"><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110444226.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110525753.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110600751.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110621554.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110637459.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110654150.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110707916.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110719787.png"><br><br><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200907110731118.png"><p></p><p></p><p>strike freedom</p><p></p><p></p><div id="SF-carousel-ground" class="carousel-ground" style="width: 720px; height: 720px;"></div></div><script type="text/javascript">carouselinit('SF');</script><p></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-4"><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">{% carousel 'SF','strike freedom' %}</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110444226.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110508327.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110525753.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110600751.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110621554.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110637459.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110654150.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110707916.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110719787.png</span>)</span><br><span class="line">![](<span class="link">https://npm.elemecdn.com/akilar-candyassets/image/20200907110731118.png</span>)</span><br><span class="line">{% endcarousel %}</span><br></pre></td></tr></tbody></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
